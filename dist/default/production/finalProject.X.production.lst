

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 21 20:00:16 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 17/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4331 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000FE0                     bsr             equ	4064
    67   000FE9                     fsr0            equ	4073
    68   000FEA                     fsr0h           equ	4074
    69   000FE9                     fsr0l           equ	4073
    70   000FE1                     fsr1            equ	4065
    71   000FE2                     fsr1h           equ	4066
    72   000FE1                     fsr1l           equ	4065
    73   000FD9                     fsr2            equ	4057
    74   000FDA                     fsr2h           equ	4058
    75   000FD9                     fsr2l           equ	4057
    76   000FEF                     indf0           equ	4079
    77   000FE7                     indf1           equ	4071
    78   000FDF                     indf2           equ	4063
    79   000FF2                     intcon          equ	4082
    80   000000                     nvmcon          equ	0
    81   000FF9                     pcl             equ	4089
    82   000FFA                     pclath          equ	4090
    83   000FFB                     pclatu          equ	4091
    84   000FEB                     plusw0          equ	4075
    85   000FE3                     plusw1          equ	4067
    86   000FDB                     plusw2          equ	4059
    87   000FED                     postdec0        equ	4077
    88   000FE5                     postdec1        equ	4069
    89   000FDD                     postdec2        equ	4061
    90   000FEE                     postinc0        equ	4078
    91   000FE6                     postinc1        equ	4070
    92   000FDE                     postinc2        equ	4062
    93   000FEC                     preinc0         equ	4076
    94   000FE4                     preinc1         equ	4068
    95   000FDC                     preinc2         equ	4060
    96   000FF3                     prod            equ	4083
    97   000FF4                     prodh           equ	4084
    98   000FF3                     prodl           equ	4083
    99   000FD8                     status          equ	4056
   100   000FF5                     tablat          equ	4085
   101   000FF6                     tblptr          equ	4086
   102   000FF7                     tblptrh         equ	4087
   103   000FF6                     tblptrl         equ	4086
   104   000FF8                     tblptru         equ	4088
   105   000FFD                     tosl            equ	4093
   106   000FE8                     wreg            equ	4072
   107   000F60                     DFLTCON         equ	3936	;# 
   108   000F61                     CAP3CON         equ	3937	;# 
   109   000F62                     CAP2CON         equ	3938	;# 
   110   000F63                     CAP1CON         equ	3939	;# 
   111   000F64                     CAP3BUFL        equ	3940	;# 
   112   000F64                     MAXCNTL         equ	3940	;# 
   113   000F65                     CAP3BUFH        equ	3941	;# 
   114   000F65                     MAXCNTH         equ	3941	;# 
   115   000F66                     CAP2BUFL        equ	3942	;# 
   116   000F66                     POSCNTL         equ	3942	;# 
   117   000F67                     CAP2BUFH        equ	3943	;# 
   118   000F67                     POSCNTH         equ	3943	;# 
   119   000F68                     CAP1BUFL        equ	3944	;# 
   120   000F68                     VELRL           equ	3944	;# 
   121   000F69                     CAP1BUFH        equ	3945	;# 
   122   000F69                     VELRH           equ	3945	;# 
   123   000F6A                     OVDCONS         equ	3946	;# 
   124   000F6B                     OVDCOND         equ	3947	;# 
   125   000F6C                     FLTCONFIG       equ	3948	;# 
   126   000F6D                     DTCON           equ	3949	;# 
   127   000F6E                     PWMCON1         equ	3950	;# 
   128   000F6F                     PWMCON0         equ	3951	;# 
   129   000F70                     SEVTCMPH        equ	3952	;# 
   130   000F71                     SEVTCMPL        equ	3953	;# 
   131   000F72                     PDC3H           equ	3954	;# 
   132   000F73                     PDC3L           equ	3955	;# 
   133   000F74                     PDC2H           equ	3956	;# 
   134   000F75                     PDC2L           equ	3957	;# 
   135   000F76                     PDC1H           equ	3958	;# 
   136   000F77                     PDC1L           equ	3959	;# 
   137   000F78                     PDC0H           equ	3960	;# 
   138   000F79                     PDC0L           equ	3961	;# 
   139   000F7A                     PTPERH          equ	3962	;# 
   140   000F7B                     PTPERL          equ	3963	;# 
   141   000F7C                     PTMRH           equ	3964	;# 
   142   000F7D                     PTMRL           equ	3965	;# 
   143   000F7E                     PTCON1          equ	3966	;# 
   144   000F7F                     PTCON0          equ	3967	;# 
   145   000F80                     PORTA           equ	3968	;# 
   146   000F81                     PORTB           equ	3969	;# 
   147   000F82                     PORTC           equ	3970	;# 
   148   000F83                     PORTD           equ	3971	;# 
   149   000F84                     PORTE           equ	3972	;# 
   150   000F87                     TMR5            equ	3975	;# 
   151   000F87                     TMR5L           equ	3975	;# 
   152   000F88                     TMR5H           equ	3976	;# 
   153   000F89                     LATA            equ	3977	;# 
   154   000F8A                     LATB            equ	3978	;# 
   155   000F8B                     LATC            equ	3979	;# 
   156   000F8C                     LATD            equ	3980	;# 
   157   000F8D                     LATE            equ	3981	;# 
   158   000F90                     PR5             equ	3984	;# 
   159   000F90                     PR5L            equ	3984	;# 
   160   000F91                     PR5H            equ	3985	;# 
   161   000F92                     TRISA           equ	3986	;# 
   162   000F92                     DDRA            equ	3986	;# 
   163   000F93                     TRISB           equ	3987	;# 
   164   000F93                     DDRB            equ	3987	;# 
   165   000F94                     TRISC           equ	3988	;# 
   166   000F94                     DDRC            equ	3988	;# 
   167   000F95                     TRISD           equ	3989	;# 
   168   000F95                     DDRD            equ	3989	;# 
   169   000F96                     TRISE           equ	3990	;# 
   170   000F96                     DDRE            equ	3990	;# 
   171   000F99                     ADCHS           equ	3993	;# 
   172   000F9A                     ADCON3          equ	3994	;# 
   173   000F9B                     OSCTUNE         equ	3995	;# 
   174   000F9D                     PIE1            equ	3997	;# 
   175   000F9E                     PIR1            equ	3998	;# 
   176   000F9F                     IPR1            equ	3999	;# 
   177   000FA0                     PIE2            equ	4000	;# 
   178   000FA1                     PIR2            equ	4001	;# 
   179   000FA2                     IPR2            equ	4002	;# 
   180   000FA3                     PIE3            equ	4003	;# 
   181   000FA4                     PIR3            equ	4004	;# 
   182   000FA5                     IPR3            equ	4005	;# 
   183   000FA6                     EECON1          equ	4006	;# 
   184   000FA7                     EECON2          equ	4007	;# 
   185   000FA8                     EEDATA          equ	4008	;# 
   186   000FA9                     EEADR           equ	4009	;# 
   187   000FAA                     BAUDCON         equ	4010	;# 
   188   000FAA                     BAUDCTL         equ	4010	;# 
   189   000FAB                     RCSTA           equ	4011	;# 
   190   000FAB                     RCSTA1          equ	4011	;# 
   191   000FAC                     TXSTA           equ	4012	;# 
   192   000FAC                     TXSTA1          equ	4012	;# 
   193   000FAD                     TXREG           equ	4013	;# 
   194   000FAD                     TXREG1          equ	4013	;# 
   195   000FAE                     RCREG           equ	4014	;# 
   196   000FAE                     RCREG1          equ	4014	;# 
   197   000FAF                     SPBRG           equ	4015	;# 
   198   000FAF                     SPBRG1          equ	4015	;# 
   199   000FB0                     SPBRGH          equ	4016	;# 
   200   000FB6                     QEICON          equ	4022	;# 
   201   000FB7                     T5CON           equ	4023	;# 
   202   000FB8                     ANSEL0          equ	4024	;# 
   203   000FB9                     ANSEL1          equ	4025	;# 
   204   000FBA                     CCP2CON         equ	4026	;# 
   205   000FBB                     CCPR2           equ	4027	;# 
   206   000FBB                     CCPR2L          equ	4027	;# 
   207   000FBC                     CCPR2H          equ	4028	;# 
   208   000FBD                     CCP1CON         equ	4029	;# 
   209   000FBE                     CCPR1           equ	4030	;# 
   210   000FBE                     CCPR1L          equ	4030	;# 
   211   000FBF                     CCPR1H          equ	4031	;# 
   212   000FC0                     ADCON2          equ	4032	;# 
   213   000FC1                     ADCON1          equ	4033	;# 
   214   000FC2                     ADCON0          equ	4034	;# 
   215   000FC3                     ADRES           equ	4035	;# 
   216   000FC3                     ADRESL          equ	4035	;# 
   217   000FC4                     ADRESH          equ	4036	;# 
   218   000FC6                     SSPCON          equ	4038	;# 
   219   000FC6                     SSPCON1         equ	4038	;# 
   220   000FC7                     SSPSTAT         equ	4039	;# 
   221   000FC8                     SSPADD          equ	4040	;# 
   222   000FC9                     SSPBUF          equ	4041	;# 
   223   000FCA                     T2CON           equ	4042	;# 
   224   000FCB                     PR2             equ	4043	;# 
   225   000FCB                     MEMCON          equ	4043	;# 
   226   000FCC                     TMR2            equ	4044	;# 
   227   000FCD                     T1CON           equ	4045	;# 
   228   000FCE                     TMR1            equ	4046	;# 
   229   000FCE                     TMR1L           equ	4046	;# 
   230   000FCF                     TMR1H           equ	4047	;# 
   231   000FD0                     RCON            equ	4048	;# 
   232   000FD1                     WDTCON          equ	4049	;# 
   233   000FD2                     LVDCON          equ	4050	;# 
   234   000FD3                     OSCCON          equ	4051	;# 
   235   000FD5                     T0CON           equ	4053	;# 
   236   000FD6                     TMR0            equ	4054	;# 
   237   000FD6                     TMR0L           equ	4054	;# 
   238   000FD7                     TMR0H           equ	4055	;# 
   239   000FD8                     STATUS          equ	4056	;# 
   240   000FD9                     FSR2            equ	4057	;# 
   241   000FD9                     FSR2L           equ	4057	;# 
   242   000FDA                     FSR2H           equ	4058	;# 
   243   000FDB                     PLUSW2          equ	4059	;# 
   244   000FDC                     PREINC2         equ	4060	;# 
   245   000FDD                     POSTDEC2        equ	4061	;# 
   246   000FDE                     POSTINC2        equ	4062	;# 
   247   000FDF                     INDF2           equ	4063	;# 
   248   000FE0                     BSR             equ	4064	;# 
   249   000FE1                     FSR1            equ	4065	;# 
   250   000FE1                     FSR1L           equ	4065	;# 
   251   000FE2                     FSR1H           equ	4066	;# 
   252   000FE3                     PLUSW1          equ	4067	;# 
   253   000FE4                     PREINC1         equ	4068	;# 
   254   000FE5                     POSTDEC1        equ	4069	;# 
   255   000FE6                     POSTINC1        equ	4070	;# 
   256   000FE7                     INDF1           equ	4071	;# 
   257   000FE8                     WREG            equ	4072	;# 
   258   000FE9                     FSR0            equ	4073	;# 
   259   000FE9                     FSR0L           equ	4073	;# 
   260   000FEA                     FSR0H           equ	4074	;# 
   261   000FEB                     PLUSW0          equ	4075	;# 
   262   000FEC                     PREINC0         equ	4076	;# 
   263   000FED                     POSTDEC0        equ	4077	;# 
   264   000FEE                     POSTINC0        equ	4078	;# 
   265   000FEF                     INDF0           equ	4079	;# 
   266   000FF0                     INTCON3         equ	4080	;# 
   267   000FF1                     INTCON2         equ	4081	;# 
   268   000FF2                     INTCON          equ	4082	;# 
   269   000FF3                     PROD            equ	4083	;# 
   270   000FF3                     PRODL           equ	4083	;# 
   271   000FF4                     PRODH           equ	4084	;# 
   272   000FF5                     TABLAT          equ	4085	;# 
   273   000FF6                     TBLPTR          equ	4086	;# 
   274   000FF6                     TBLPTRL         equ	4086	;# 
   275   000FF7                     TBLPTRH         equ	4087	;# 
   276   000FF8                     TBLPTRU         equ	4088	;# 
   277   000FF9                     PCLAT           equ	4089	;# 
   278   000FF9                     PC              equ	4089	;# 
   279   000FF9                     PCL             equ	4089	;# 
   280   000FFA                     PCLATH          equ	4090	;# 
   281   000FFB                     PCLATU          equ	4091	;# 
   282   000FFC                     STKPTR          equ	4092	;# 
   283   000FFD                     TOS             equ	4093	;# 
   284   000FFD                     TOSL            equ	4093	;# 
   285   000FFE                     TOSH            equ	4094	;# 
   286   000FFF                     TOSU            equ	4095	;# 
   287   007CA7                     _TRISC7         set	31911
   288   007CA6                     _TRISC6         set	31910
   289   000F81                     _PORTBbits      set	3969
   290   000F82                     _PORTCbits      set	3970
   291   000F8C                     _LATDbits       set	3980
   292   000F83                     _PORTDbits      set	3971
   293   000F95                     _TRISD          set	3989
   294   000F93                     _TRISB          set	3987
   295   000F94                     _TRISCbits      set	3988
   296   000FD3                     _OSCCONbits     set	4051
   297   000F8B                     _LATCbits       set	3979
   298   000FAD                     _TXREG          set	4013
   299   000FF2                     _INTCONbits     set	4082
   300   000F9D                     _PIE1bits       set	3997
   301   000F9E                     _PIR1bits       set	3998
   302   000FCC                     _TMR2           set	4044
   303   000FCB                     _PR2            set	4043
   304   000FCA                     _T2CONbits      set	4042
   305   000FAB                     _RCSTAbits      set	4011
   306   000FAF                     _SPBRG          set	4015
   307   000FAA                     _BAUDCTLbits    set	4010
   308   000FAC                     _TXSTAbits      set	4012
   309                           
   310                           ; #config settings
   311                           
   312                           	psect	cinit
   313   001F86                     __pcinit:
   314                           	callstack 0
   315   001F86                     start_initialization:
   316                           	callstack 0
   317   001F86                     __initialization:
   318                           	callstack 0
   319                           
   320                           ; Clear objects allocated to BANK0 (8 bytes)
   321   001F86  EE00  F080         	lfsr	0,__pbssBANK0
   322   001F8A  0E08               	movlw	8
   323   001F8C                     clear_0:
   324   001F8C  6AEE               	clrf	postinc0,c
   325   001F8E  06E8               	decf	wreg,f,c
   326   001F90  E1FD               	bnz	clear_0
   327   001F92                     end_of_initialization:
   328                           	callstack 0
   329   001F92                     __end_of__initialization:
   330                           	callstack 0
   331   001F92  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   332   001F94  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   333   001F96  0100               	movlb	0
   334   001F98  EF81  F001         	goto	_main	;jump to C main() function
   335                           
   336                           	psect	bssBANK0
   337   000080                     __pbssBANK0:
   338                           	callstack 0
   339   000080                     _pwm_count:
   340                           	callstack 0
   341   000080                     	ds	2
   342   000082                     _modeButton:
   343                           	callstack 0
   344   000082                     	ds	2
   345   000084                     _highTimePhiMicro:
   346                           	callstack 0
   347   000084                     	ds	2
   348   000086                     _highTimeThetaMicro:
   349                           	callstack 0
   350   000086                     	ds	2
   351                           
   352                           	psect	cstackBANK0
   353   000060                     __pcstackBANK0:
   354                           	callstack 0
   355   000060                     setServoHighTime@dutyCyclePercentTheta:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x0
   359   000060                     	ds	4
   360   000064                     setServoHighTime@dutyCyclePercentPhi:
   361                           	callstack 0
   362                           
   363                           ; 4 bytes @ 0x4
   364   000064                     	ds	4
   365   000068                     _setServoHighTime$1476:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x8
   369   000068                     	ds	4
   370   00006C                     setServoHighTime@servoPhiPosition:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xC
   374   00006C                     	ds	2
   375   00006E                     setServoHighTime@servoThetaPosition:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0xE
   379   00006E                     	ds	2
   380   000070                     main@sensorTriggered:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x10
   384   000070                     	ds	2
   385   000072                     main@OLEDcount:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x12
   389   000072                     	ds	2
   390   000074                     main@sensorUp:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x14
   394   000074                     	ds	2
   395   000076                     main@sensorDown:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x16
   399   000076                     	ds	2
   400   000078                     main@sensorLeft:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x18
   404   000078                     	ds	2
   405   00007A                     main@sensorRight:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x1A
   409   00007A                     	ds	2
   410   00007C                     main@j:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x1C
   414   00007C                     	ds	2
   415   00007E                     main@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1E
   419   00007E                     	ds	2
   420                           
   421                           	psect	cstackCOMRAM
   422   000001                     __pcstackCOMRAM:
   423                           	callstack 0
   424   000001                     ??_TMR2_ISR:
   425                           
   426                           ; 1 bytes @ 0x0
   427   000001                     	ds	1
   428   000002                     ?___awdiv:
   429                           	callstack 0
   430   000002                     ?___awmod:
   431                           	callstack 0
   432   000002                     ?___xxtofl:
   433                           	callstack 0
   434   000002                     UART_Transmit@data:
   435                           	callstack 0
   436   000002                     ___awdiv@dividend:
   437                           	callstack 0
   438   000002                     ___awmod@dividend:
   439                           	callstack 0
   440   000002                     ___xxtofl@val:
   441                           	callstack 0
   442   000002                     
   443                           ; 1 bytes @ 0x1
   444   000002                     	ds	2
   445   000004                     ___awdiv@divisor:
   446                           	callstack 0
   447   000004                     ___awmod@divisor:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x3
   451   000004                     	ds	2
   452   000006                     ___awdiv@counter:
   453                           	callstack 0
   454   000006                     ___awmod@counter:
   455                           	callstack 0
   456   000006                     ??___xxtofl:
   457                           
   458                           ; 1 bytes @ 0x5
   459   000006                     	ds	1
   460   000007                     ___awdiv@sign:
   461                           	callstack 0
   462   000007                     ___awmod@sign:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x6
   466   000007                     	ds	1
   467   000008                     ___awdiv@quotient:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x7
   471   000008                     	ds	2
   472   00000A                     ___xxtofl@sign:
   473                           	callstack 0
   474   00000A                     convertPanAngle@angle:
   475                           	callstack 0
   476   00000A                     convertTiltAngle@angle:
   477                           	callstack 0
   478   00000A                     getServoAngles@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x9
   482   00000A                     	ds	1
   483   00000B                     ___xxtofl@exp:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0xA
   487   00000B                     	ds	1
   488   00000C                     getServoAngles@j:
   489                           	callstack 0
   490   00000C                     ___xxtofl@arg:
   491                           	callstack 0
   492   00000C                     ??_convertPanAngle:
   493   00000C                     ??_convertTiltAngle:
   494                           
   495                           ; 1 bytes @ 0xB
   496   00000C                     	ds	2
   497   00000E                     getServoAngles@servoThetaPosition:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0xD
   501   00000E                     	ds	1
   502   00000F                     getServoAngles@servoPhiPosition:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xE
   506   00000F                     	ds	1
   507   000010                     ?___fldiv:
   508                           	callstack 0
   509   000010                     getServoAngles@scanMode:
   510                           	callstack 0
   511   000010                     ___fldiv@b:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0xF
   515   000010                     	ds	2
   516   000012                     ??_getServoAngles:
   517                           
   518                           ; 1 bytes @ 0x11
   519   000012                     	ds	2
   520   000014                     ___fldiv@a:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x13
   524   000014                     	ds	4
   525   000018                     displayOLED@i:
   526                           	callstack 0
   527   000018                     ??___fldiv:
   528                           
   529                           ; 1 bytes @ 0x17
   530   000018                     	ds	2
   531   00001A                     displayOLED@j:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x19
   535   00001A                     	ds	2
   536   00001C                     ___fldiv@rem:
   537                           	callstack 0
   538   00001C                     ??_displayOLED:
   539                           
   540                           ; 1 bytes @ 0x1B
   541   00001C                     	ds	2
   542   00001E                     displayOLED@panHex:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x1D
   546   00001E                     	ds	1
   547   00001F                     displayOLED@tiltHex:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x1E
   551   00001F                     	ds	1
   552   000020                     displayOLED@combinedValue:
   553                           	callstack 0
   554   000020                     ___fldiv@sign:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x1F
   558   000020                     	ds	1
   559   000021                     displayOLED@servoPhiPosition:
   560                           	callstack 0
   561   000021                     ___fldiv@new_exp:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x20
   565   000021                     	ds	2
   566   000023                     displayOLED@servoThetaPosition:
   567                           	callstack 0
   568   000023                     ___fldiv@grs:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x22
   572   000023                     	ds	4
   573   000027                     ___fldiv@bexp:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x26
   577   000027                     	ds	1
   578   000028                     ___fldiv@aexp:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x27
   582   000028                     	ds	1
   583   000029                     ?___flmul:
   584                           	callstack 0
   585   000029                     ___flmul@b:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x28
   589   000029                     	ds	4
   590   00002D                     ___flmul@a:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x2C
   594   00002D                     	ds	4
   595   000031                     ??___flmul:
   596                           
   597                           ; 1 bytes @ 0x30
   598   000031                     	ds	4
   599   000035                     ___flmul@sign:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x34
   603   000035                     	ds	1
   604   000036                     ___flmul@grs:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x35
   608   000036                     	ds	4
   609   00003A                     ___flmul@aexp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x39
   613   00003A                     	ds	1
   614   00003B                     ___flmul@bexp:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x3A
   618   00003B                     	ds	1
   619   00003C                     ___flmul@prod:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x3B
   623   00003C                     	ds	4
   624   000040                     ___flmul@temp:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x3F
   628   000040                     	ds	2
   629   000042                     ?___fladd:
   630                           	callstack 0
   631   000042                     ?___fltol:
   632                           	callstack 0
   633   000042                     ___fltol@f1:
   634                           	callstack 0
   635   000042                     ___fladd@b:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x41
   639   000042                     	ds	4
   640   000046                     ___fladd@a:
   641                           	callstack 0
   642   000046                     ??___fltol:
   643                           
   644                           ; 1 bytes @ 0x45
   645   000046                     	ds	4
   646   00004A                     ___fltol@sign1:
   647                           	callstack 0
   648   00004A                     ??___fladd:
   649                           
   650                           ; 1 bytes @ 0x49
   651   00004A                     	ds	1
   652   00004B                     ___fltol@exp1:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x4A
   656   00004B                     	ds	3
   657   00004E                     ___fladd@signs:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x4D
   661   00004E                     	ds	1
   662   00004F                     ___fladd@aexp:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x4E
   666   00004F                     	ds	1
   667   000050                     ___fladd@bexp:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x4F
   671   000050                     	ds	1
   672   000051                     ___fladd@grs:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x50
   676   000051                     	ds	1
   677   000052                     setServoHighTime@i:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x51
   681   000052                     	ds	2
   682   000054                     setServoHighTime@j:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x53
   686   000054                     	ds	2
   687   000056                     setServoHighTime@scanMode:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x55
   691   000056                     	ds	2
   692   000058                     setServoHighTime@highTimeThetaMicro:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x57
   696   000058                     	ds	1
   697   000059                     setServoHighTime@highTimePhiMicro:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x58
   701   000059                     	ds	1
   702   00005A                     ??_setServoHighTime:
   703                           
   704                           ; 1 bytes @ 0x59
   705   00005A                     	ds	2
   706   00005C                     ??_main:
   707                           
   708                           ; 1 bytes @ 0x5B
   709   00005C                     	ds	2
   710                           
   711 ;;
   712 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   713 ;;
   714 ;; *************** function _main *****************
   715 ;; Defined at:
   716 ;;		line 37 in file "main.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  i               2   30[BANK0 ] int 
   721 ;;  j               2   28[BANK0 ] int 
   722 ;;  sensorRight     2   26[BANK0 ] int 
   723 ;;  sensorLeft      2   24[BANK0 ] int 
   724 ;;  sensorDown      2   22[BANK0 ] int 
   725 ;;  sensorUp        2   20[BANK0 ] int 
   726 ;;  OLEDcount       2   18[BANK0 ] int 
   727 ;;  sensorTrigge    2   16[BANK0 ] int 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   737 ;;      Params:         0       0       0       0
   738 ;;      Locals:         0      16       0       0
   739 ;;      Temps:          2       0       0       0
   740 ;;      Totals:         2      16       0       0
   741 ;;Total ram usage:       18 bytes
   742 ;; Hardware stack levels required when called: 4
   743 ;; This function calls:
   744 ;;		_UART_Init
   745 ;;		___awmod
   746 ;;		_displayOLED
   747 ;;		_init_timer2
   748 ;;		_setServoHighTime
   749 ;; This function is called by:
   750 ;;		Startup code after reset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text0
   755   000302                     __ptext0:
   756                           	callstack 0
   757   000302                     _main:
   758                           	callstack 27
   759   000302                     
   760                           ;main.c: 38:     OSCCONbits.IRCF = 0b111;
   761   000302  0E70               	movlw	112
   762   000304  12D3               	iorwf	211,f,c	;volatile
   763                           
   764                           ;main.c: 39:     OSCCONbits.SCS = 0b11;
   765   000306  0E03               	movlw	3
   766   000308  12D3               	iorwf	211,f,c	;volatile
   767   00030A                     
   768                           ;main.c: 40:     UART_Init();
   769   00030A  ECE4  F00F         	call	_UART_Init	;wreg free
   770   00030E                     
   771                           ;main.c: 41:     init_timer2();
   772   00030E  ECCE  F00F         	call	_init_timer2	;wreg free
   773   000312                     
   774                           ;main.c: 42:     TRISCbits.RC5 = 1;
   775   000312  8A94               	bsf	148,5,c	;volatile
   776   000314                     
   777                           ;main.c: 43:     TRISCbits.RC1 = 0;
   778   000314  9294               	bcf	148,1,c	;volatile
   779   000316                     
   780                           ;main.c: 44:     TRISCbits.RC2 = 0;
   781   000316  9494               	bcf	148,2,c	;volatile
   782                           
   783                           ;main.c: 45:     TRISB = 0b00011111;
   784   000318  0E1F               	movlw	31
   785   00031A  6E93               	movwf	147,c	;volatile
   786                           
   787                           ;main.c: 46:     TRISD = 0b11110010;
   788   00031C  0EF2               	movlw	242
   789   00031E  6E95               	movwf	149,c	;volatile
   790                           
   791                           ;main.c: 47:     int i = 0, j = 0;
   792   000320  0E00               	movlw	0
   793   000322  0100               	movlb	0	; () banked
   794   000324  6F7F               	movwf	(main@i+1)& (0+255),b
   795   000326  0E00               	movlw	0
   796   000328  6F7E               	movwf	main@i& (0+255),b
   797   00032A  0E00               	movlw	0
   798   00032C  6F7D               	movwf	(main@j+1)& (0+255),b
   799   00032E  0E00               	movlw	0
   800   000330  6F7C               	movwf	main@j& (0+255),b
   801                           
   802                           ;main.c: 48:     int sensorUp, sensorDown, sensorLeft, sensorRight, sensorTriggered = 0;
   803   000332  0E00               	movlw	0
   804   000334  6F71               	movwf	(main@sensorTriggered+1)& (0+255),b
   805   000336  0E00               	movlw	0
   806   000338  6F70               	movwf	main@sensorTriggered& (0+255),b
   807                           
   808                           ;main.c: 49:     int OLEDcount = 0;
   809   00033A  0E00               	movlw	0
   810   00033C  6F73               	movwf	(main@OLEDcount+1)& (0+255),b
   811   00033E  0E00               	movlw	0
   812   000340  6F72               	movwf	main@OLEDcount& (0+255),b
   813   000342                     l123:
   814                           
   815                           ;main.c: 52:         sensorUp = PORTDbits.RD6;
   816   000342  BC83               	btfsc	131,6,c	;volatile
   817   000344  EFA6  F001         	goto	u3101
   818   000348  EFAA  F001         	goto	u3100
   819   00034C                     u3101:
   820   00034C  6A5C               	clrf	??_main^0,c
   821   00034E  2A5C               	incf	??_main^0,f,c
   822   000350  EFAB  F001         	goto	u3108
   823   000354                     u3100:
   824   000354  6A5C               	clrf	??_main^0,c
   825   000356                     u3108:
   826   000356  505C               	movf	??_main^0,w,c
   827   000358  0100               	movlb	0	; () banked
   828   00035A  6F74               	movwf	main@sensorUp& (0+255),b
   829   00035C  6B75               	clrf	(main@sensorUp+1)& (0+255),b
   830                           
   831                           ;main.c: 53:         sensorDown = PORTDbits.RD4;
   832   00035E  B883               	btfsc	131,4,c	;volatile
   833   000360  EFB4  F001         	goto	u3111
   834   000364  EFB8  F001         	goto	u3110
   835   000368                     u3111:
   836   000368  6A5C               	clrf	??_main^0,c
   837   00036A  2A5C               	incf	??_main^0,f,c
   838   00036C  EFB9  F001         	goto	u3118
   839   000370                     u3110:
   840   000370  6A5C               	clrf	??_main^0,c
   841   000372                     u3118:
   842   000372  505C               	movf	??_main^0,w,c
   843   000374  0100               	movlb	0	; () banked
   844   000376  6F76               	movwf	main@sensorDown& (0+255),b
   845   000378  6B77               	clrf	(main@sensorDown+1)& (0+255),b
   846                           
   847                           ;main.c: 54:         sensorLeft = PORTDbits.RD5;
   848   00037A  BA83               	btfsc	131,5,c	;volatile
   849   00037C  EFC2  F001         	goto	u3121
   850   000380  EFC6  F001         	goto	u3120
   851   000384                     u3121:
   852   000384  6A5C               	clrf	??_main^0,c
   853   000386  2A5C               	incf	??_main^0,f,c
   854   000388  EFC7  F001         	goto	u3128
   855   00038C                     u3120:
   856   00038C  6A5C               	clrf	??_main^0,c
   857   00038E                     u3128:
   858   00038E  505C               	movf	??_main^0,w,c
   859   000390  0100               	movlb	0	; () banked
   860   000392  6F78               	movwf	main@sensorLeft& (0+255),b
   861   000394  6B79               	clrf	(main@sensorLeft+1)& (0+255),b
   862                           
   863                           ;main.c: 55:         sensorRight = PORTDbits.RD7;
   864   000396  BE83               	btfsc	131,7,c	;volatile
   865   000398  EFD0  F001         	goto	u3131
   866   00039C  EFD4  F001         	goto	u3130
   867   0003A0                     u3131:
   868   0003A0  6A5C               	clrf	??_main^0,c
   869   0003A2  2A5C               	incf	??_main^0,f,c
   870   0003A4  EFD5  F001         	goto	u3138
   871   0003A8                     u3130:
   872   0003A8  6A5C               	clrf	??_main^0,c
   873   0003AA                     u3138:
   874   0003AA  505C               	movf	??_main^0,w,c
   875   0003AC  0100               	movlb	0	; () banked
   876   0003AE  6F7A               	movwf	main@sensorRight& (0+255),b
   877   0003B0  6B7B               	clrf	(main@sensorRight+1)& (0+255),b
   878   0003B2                     
   879                           ; BSR set to: 0
   880                           ;main.c: 56:         if(sensorUp && sensorDown && sensorLeft && sensorRight) {sensorTrig
      +                          gered++;}
   881   0003B2  5174               	movf	main@sensorUp& (0+255),w,b
   882   0003B4  1175               	iorwf	(main@sensorUp+1)& (0+255),w,b
   883   0003B6  B4D8               	btfsc	status,2,c
   884   0003B8  EFE0  F001         	goto	u3141
   885   0003BC  EFE2  F001         	goto	u3140
   886   0003C0                     u3141:
   887   0003C0  EFFF  F001         	goto	l2545
   888   0003C4                     u3140:
   889   0003C4                     
   890                           ; BSR set to: 0
   891   0003C4  5176               	movf	main@sensorDown& (0+255),w,b
   892   0003C6  1177               	iorwf	(main@sensorDown+1)& (0+255),w,b
   893   0003C8  B4D8               	btfsc	status,2,c
   894   0003CA  EFE9  F001         	goto	u3151
   895   0003CE  EFEB  F001         	goto	u3150
   896   0003D2                     u3151:
   897   0003D2  EFFF  F001         	goto	l2545
   898   0003D6                     u3150:
   899   0003D6                     
   900                           ; BSR set to: 0
   901   0003D6  5178               	movf	main@sensorLeft& (0+255),w,b
   902   0003D8  1179               	iorwf	(main@sensorLeft+1)& (0+255),w,b
   903   0003DA  B4D8               	btfsc	status,2,c
   904   0003DC  EFF2  F001         	goto	u3161
   905   0003E0  EFF4  F001         	goto	u3160
   906   0003E4                     u3161:
   907   0003E4  EFFF  F001         	goto	l2545
   908   0003E8                     u3160:
   909   0003E8                     
   910                           ; BSR set to: 0
   911   0003E8  517A               	movf	main@sensorRight& (0+255),w,b
   912   0003EA  117B               	iorwf	(main@sensorRight+1)& (0+255),w,b
   913   0003EC  B4D8               	btfsc	status,2,c
   914   0003EE  EFFB  F001         	goto	u3171
   915   0003F2  EFFD  F001         	goto	u3170
   916   0003F6                     u3171:
   917   0003F6  EFFF  F001         	goto	l2545
   918   0003FA                     u3170:
   919   0003FA                     
   920                           ; BSR set to: 0
   921   0003FA  4B70               	infsnz	main@sensorTriggered& (0+255),f,b
   922   0003FC  2B71               	incf	(main@sensorTriggered+1)& (0+255),f,b
   923   0003FE                     l2545:
   924                           
   925                           ; BSR set to: 0
   926                           ;main.c: 148:         if(PORTDbits.RD1 == 1) {
   927   0003FE  A283               	btfss	131,1,c	;volatile
   928   000400  EF04  F002         	goto	u3181
   929   000404  EF06  F002         	goto	u3180
   930   000408                     u3181:
   931   000408  EF42  F003         	goto	l2613
   932   00040C                     u3180:
   933   00040C                     
   934                           ; BSR set to: 0
   935                           ;main.c: 149:             if(sensorTriggered == 0) {
   936   00040C  5170               	movf	main@sensorTriggered& (0+255),w,b
   937   00040E  1171               	iorwf	(main@sensorTriggered+1)& (0+255),w,b
   938   000410  A4D8               	btfss	status,2,c
   939   000412  EF0D  F002         	goto	u3191
   940   000416  EF0F  F002         	goto	u3190
   941   00041A                     u3191:
   942   00041A  EF74  F002         	goto	l2571
   943   00041E                     u3190:
   944   00041E                     
   945                           ; BSR set to: 0
   946                           ;main.c: 150:                 if(i >= 32 -1) i = 0;
   947   00041E  BF7F               	btfsc	(main@i+1)& (0+255),7,b
   948   000420  EF1B  F002         	goto	u3201
   949   000424  517F               	movf	(main@i+1)& (0+255),w,b
   950   000426  E109               	bnz	u3200
   951   000428  0E1F               	movlw	31
   952   00042A  5D7E               	subwf	main@i& (0+255),w,b
   953   00042C  A0D8               	btfss	status,0,c
   954   00042E  EF1B  F002         	goto	u3201
   955   000432  EF1D  F002         	goto	u3200
   956   000436                     u3201:
   957   000436  EF21  F002         	goto	l2553
   958   00043A                     u3200:
   959   00043A                     
   960                           ; BSR set to: 0
   961   00043A  0E00               	movlw	0
   962   00043C  6F7F               	movwf	(main@i+1)& (0+255),b
   963   00043E  0E00               	movlw	0
   964   000440  6F7E               	movwf	main@i& (0+255),b
   965   000442                     l2553:
   966                           
   967                           ; BSR set to: 0
   968                           ;main.c: 151:                 if(j >= 36 -1) {
   969   000442  BF7D               	btfsc	(main@j+1)& (0+255),7,b
   970   000444  EF2D  F002         	goto	u3211
   971   000448  517D               	movf	(main@j+1)& (0+255),w,b
   972   00044A  E109               	bnz	u3210
   973   00044C  0E23               	movlw	35
   974   00044E  5D7C               	subwf	main@j& (0+255),w,b
   975   000450  A0D8               	btfss	status,0,c
   976   000452  EF2D  F002         	goto	u3211
   977   000456  EF2F  F002         	goto	u3210
   978   00045A                     u3211:
   979   00045A  EF35  F002         	goto	l2559
   980   00045E                     u3210:
   981   00045E                     
   982                           ; BSR set to: 0
   983                           ;main.c: 152:                     j = 0;
   984   00045E  0E00               	movlw	0
   985   000460  6F7D               	movwf	(main@j+1)& (0+255),b
   986   000462  0E00               	movlw	0
   987   000464  6F7C               	movwf	main@j& (0+255),b
   988   000466                     
   989                           ; BSR set to: 0
   990                           ;main.c: 153:                     i++;
   991   000466  4B7E               	infsnz	main@i& (0+255),f,b
   992   000468  2B7F               	incf	(main@i+1)& (0+255),f,b
   993   00046A                     l2559:
   994                           
   995                           ; BSR set to: 0
   996                           ;main.c: 155:                 setServoHighTime(i, ++j, 1, &highTimeThetaMicro, &highTime
      +                          PhiMicro);
   997   00046A  C07E  F052         	movff	main@i,setServoHighTime@i
   998   00046E  C07F  F053         	movff	main@i+1,setServoHighTime@i+1
   999   000472  4B7C               	infsnz	main@j& (0+255),f,b
  1000   000474  2B7D               	incf	(main@j+1)& (0+255),f,b
  1001   000476  C07C  F054         	movff	main@j,setServoHighTime@j
  1002   00047A  C07D  F055         	movff	main@j+1,setServoHighTime@j+1
  1003   00047E  0E00               	movlw	0
  1004   000480  6E57               	movwf	(setServoHighTime@scanMode+1)^0,c
  1005   000482  0E01               	movlw	1
  1006   000484  6E56               	movwf	setServoHighTime@scanMode^0,c
  1007   000486  0E86               	movlw	low _highTimeThetaMicro
  1008   000488  6E58               	movwf	setServoHighTime@highTimeThetaMicro^0,c
  1009   00048A  0E84               	movlw	low _highTimePhiMicro
  1010   00048C  6E59               	movwf	setServoHighTime@highTimePhiMicro^0,c
  1011   00048E  EC30  F00A         	call	_setServoHighTime	;wreg free
  1012   000492                     
  1013                           ;main.c: 156:                 if(sensorUp && sensorDown && sensorLeft && sensorRight) {
  1014   000492  0100               	movlb	0	; () banked
  1015   000494  5174               	movf	main@sensorUp& (0+255),w,b
  1016   000496  1175               	iorwf	(main@sensorUp+1)& (0+255),w,b
  1017   000498  B4D8               	btfsc	status,2,c
  1018   00049A  EF51  F002         	goto	u3221
  1019   00049E  EF53  F002         	goto	u3220
  1020   0004A2                     u3221:
  1021   0004A2  EF71  F002         	goto	l129
  1022   0004A6                     u3220:
  1023   0004A6                     
  1024                           ; BSR set to: 0
  1025   0004A6  5176               	movf	main@sensorDown& (0+255),w,b
  1026   0004A8  1177               	iorwf	(main@sensorDown+1)& (0+255),w,b
  1027   0004AA  B4D8               	btfsc	status,2,c
  1028   0004AC  EF5A  F002         	goto	u3231
  1029   0004B0  EF5C  F002         	goto	u3230
  1030   0004B4                     u3231:
  1031   0004B4  EF71  F002         	goto	l129
  1032   0004B8                     u3230:
  1033   0004B8                     
  1034                           ; BSR set to: 0
  1035   0004B8  5178               	movf	main@sensorLeft& (0+255),w,b
  1036   0004BA  1179               	iorwf	(main@sensorLeft+1)& (0+255),w,b
  1037   0004BC  B4D8               	btfsc	status,2,c
  1038   0004BE  EF63  F002         	goto	u3241
  1039   0004C2  EF65  F002         	goto	u3240
  1040   0004C6                     u3241:
  1041   0004C6  EF71  F002         	goto	l129
  1042   0004CA                     u3240:
  1043   0004CA                     
  1044                           ; BSR set to: 0
  1045   0004CA  517A               	movf	main@sensorRight& (0+255),w,b
  1046   0004CC  117B               	iorwf	(main@sensorRight+1)& (0+255),w,b
  1047   0004CE  B4D8               	btfsc	status,2,c
  1048   0004D0  EF6C  F002         	goto	u3251
  1049   0004D4  EF6E  F002         	goto	u3250
  1050   0004D8                     u3251:
  1051   0004D8  EF71  F002         	goto	l129
  1052   0004DC                     u3250:
  1053   0004DC                     
  1054                           ; BSR set to: 0
  1055                           ;main.c: 157:                     LATDbits.LATD3 = 1;
  1056   0004DC  868C               	bsf	140,3,c	;volatile
  1057                           
  1058                           ;main.c: 158:                 } else {
  1059   0004DE  EFD1  F003         	goto	l2647
  1060   0004E2                     l129:
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;main.c: 159:                     LATDbits.LATD3 = 0;
  1064   0004E2  968C               	bcf	140,3,c	;volatile
  1065   0004E4  EFD1  F003         	goto	l2647
  1066   0004E8                     l2571:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;main.c: 162:                 if(i > 32/2) i = 32 - i;
  1070   0004E8  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1071   0004EA  EF80  F002         	goto	u3261
  1072   0004EE  517F               	movf	(main@i+1)& (0+255),w,b
  1073   0004F0  E109               	bnz	u3260
  1074   0004F2  0E11               	movlw	17
  1075   0004F4  5D7E               	subwf	main@i& (0+255),w,b
  1076   0004F6  A0D8               	btfss	status,0,c
  1077   0004F8  EF80  F002         	goto	u3261
  1078   0004FC  EF82  F002         	goto	u3260
  1079   000500                     u3261:
  1080   000500  EF8A  F002         	goto	l132
  1081   000504                     u3260:
  1082   000504                     
  1083                           ; BSR set to: 0
  1084   000504  517E               	movf	main@i& (0+255),w,b
  1085   000506  0820               	sublw	32
  1086   000508  6F7E               	movwf	main@i& (0+255),b
  1087   00050A  517F               	movf	(main@i+1)& (0+255),w,b
  1088   00050C  A0D8               	btfss	status,0,c
  1089   00050E  2AE8               	incf	wreg,f,c
  1090   000510  0800               	sublw	0
  1091   000512  6F7F               	movwf	(main@i+1)& (0+255),b
  1092   000514                     l132:
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;main.c: 163:                 if(sensorUp && i < (32/2 - 1)) { i++; }
  1096   000514  5174               	movf	main@sensorUp& (0+255),w,b
  1097   000516  1175               	iorwf	(main@sensorUp+1)& (0+255),w,b
  1098   000518  B4D8               	btfsc	status,2,c
  1099   00051A  EF91  F002         	goto	u3271
  1100   00051E  EF93  F002         	goto	u3270
  1101   000522                     u3271:
  1102   000522  EFA3  F002         	goto	l2579
  1103   000526                     u3270:
  1104   000526                     
  1105                           ; BSR set to: 0
  1106   000526  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1107   000528  EFA1  F002         	goto	u3280
  1108   00052C  517F               	movf	(main@i+1)& (0+255),w,b
  1109   00052E  E107               	bnz	u3281
  1110   000530  0E0F               	movlw	15
  1111   000532  5D7E               	subwf	main@i& (0+255),w,b
  1112   000534  B0D8               	btfsc	status,0,c
  1113   000536  EF9F  F002         	goto	u3281
  1114   00053A  EFA1  F002         	goto	u3280
  1115   00053E                     u3281:
  1116   00053E  EFA3  F002         	goto	l2579
  1117   000542                     u3280:
  1118   000542                     
  1119                           ; BSR set to: 0
  1120   000542  4B7E               	infsnz	main@i& (0+255),f,b
  1121   000544  2B7F               	incf	(main@i+1)& (0+255),f,b
  1122   000546                     l2579:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;main.c: 164:                 if(sensorDown && i > 0) { i--; }
  1126   000546  5176               	movf	main@sensorDown& (0+255),w,b
  1127   000548  1177               	iorwf	(main@sensorDown+1)& (0+255),w,b
  1128   00054A  B4D8               	btfsc	status,2,c
  1129   00054C  EFAA  F002         	goto	u3291
  1130   000550  EFAC  F002         	goto	u3290
  1131   000554                     u3291:
  1132   000554  EFBC  F002         	goto	l2585
  1133   000558                     u3290:
  1134   000558                     
  1135                           ; BSR set to: 0
  1136   000558  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1137   00055A  EFB7  F002         	goto	u3301
  1138   00055E  517F               	movf	(main@i+1)& (0+255),w,b
  1139   000560  E108               	bnz	u3300
  1140   000562  057E               	decf	main@i& (0+255),w,b
  1141   000564  A0D8               	btfss	status,0,c
  1142   000566  EFB7  F002         	goto	u3301
  1143   00056A  EFB9  F002         	goto	u3300
  1144   00056E                     u3301:
  1145   00056E  EFBC  F002         	goto	l2585
  1146   000572                     u3300:
  1147   000572                     
  1148                           ; BSR set to: 0
  1149   000572  077E               	decf	main@i& (0+255),f,b
  1150   000574  A0D8               	btfss	status,0,c
  1151   000576  077F               	decf	(main@i+1)& (0+255),f,b
  1152   000578                     l2585:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;main.c: 165:                 if(sensorLeft && j > 0) { j--; }
  1156   000578  5178               	movf	main@sensorLeft& (0+255),w,b
  1157   00057A  1179               	iorwf	(main@sensorLeft+1)& (0+255),w,b
  1158   00057C  B4D8               	btfsc	status,2,c
  1159   00057E  EFC3  F002         	goto	u3311
  1160   000582  EFC5  F002         	goto	u3310
  1161   000586                     u3311:
  1162   000586  EFD5  F002         	goto	l2591
  1163   00058A                     u3310:
  1164   00058A                     
  1165                           ; BSR set to: 0
  1166   00058A  BF7D               	btfsc	(main@j+1)& (0+255),7,b
  1167   00058C  EFD0  F002         	goto	u3321
  1168   000590  517D               	movf	(main@j+1)& (0+255),w,b
  1169   000592  E108               	bnz	u3320
  1170   000594  057C               	decf	main@j& (0+255),w,b
  1171   000596  A0D8               	btfss	status,0,c
  1172   000598  EFD0  F002         	goto	u3321
  1173   00059C  EFD2  F002         	goto	u3320
  1174   0005A0                     u3321:
  1175   0005A0  EFD5  F002         	goto	l2591
  1176   0005A4                     u3320:
  1177   0005A4                     
  1178                           ; BSR set to: 0
  1179   0005A4  077C               	decf	main@j& (0+255),f,b
  1180   0005A6  A0D8               	btfss	status,0,c
  1181   0005A8  077D               	decf	(main@j+1)& (0+255),f,b
  1182   0005AA                     l2591:
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;main.c: 166:                 if(sensorRight && i < (36/2 - 1)) { j++; }
  1186   0005AA  517A               	movf	main@sensorRight& (0+255),w,b
  1187   0005AC  117B               	iorwf	(main@sensorRight+1)& (0+255),w,b
  1188   0005AE  B4D8               	btfsc	status,2,c
  1189   0005B0  EFDC  F002         	goto	u3331
  1190   0005B4  EFDE  F002         	goto	u3330
  1191   0005B8                     u3331:
  1192   0005B8  EFEE  F002         	goto	l2597
  1193   0005BC                     u3330:
  1194   0005BC                     
  1195                           ; BSR set to: 0
  1196   0005BC  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1197   0005BE  EFEC  F002         	goto	u3340
  1198   0005C2  517F               	movf	(main@i+1)& (0+255),w,b
  1199   0005C4  E107               	bnz	u3341
  1200   0005C6  0E11               	movlw	17
  1201   0005C8  5D7E               	subwf	main@i& (0+255),w,b
  1202   0005CA  B0D8               	btfsc	status,0,c
  1203   0005CC  EFEA  F002         	goto	u3341
  1204   0005D0  EFEC  F002         	goto	u3340
  1205   0005D4                     u3341:
  1206   0005D4  EFEE  F002         	goto	l2597
  1207   0005D8                     u3340:
  1208   0005D8                     
  1209                           ; BSR set to: 0
  1210   0005D8  4B7C               	infsnz	main@j& (0+255),f,b
  1211   0005DA  2B7D               	incf	(main@j+1)& (0+255),f,b
  1212   0005DC                     l2597:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 167:                 setServoHighTime(i, j, 0, &highTimeThetaMicro, &highTimePh
      +                          iMicro);
  1216   0005DC  C07E  F052         	movff	main@i,setServoHighTime@i
  1217   0005E0  C07F  F053         	movff	main@i+1,setServoHighTime@i+1
  1218   0005E4  C07C  F054         	movff	main@j,setServoHighTime@j
  1219   0005E8  C07D  F055         	movff	main@j+1,setServoHighTime@j+1
  1220   0005EC  0E00               	movlw	0
  1221   0005EE  6E57               	movwf	(setServoHighTime@scanMode+1)^0,c
  1222   0005F0  0E00               	movlw	0
  1223   0005F2  6E56               	movwf	setServoHighTime@scanMode^0,c
  1224   0005F4  0E86               	movlw	low _highTimeThetaMicro
  1225   0005F6  6E58               	movwf	setServoHighTime@highTimeThetaMicro^0,c
  1226   0005F8  0E84               	movlw	low _highTimePhiMicro
  1227   0005FA  6E59               	movwf	setServoHighTime@highTimePhiMicro^0,c
  1228   0005FC  EC30  F00A         	call	_setServoHighTime	;wreg free
  1229   000600                     
  1230                           ;main.c: 169:                 if(sensorUp && sensorDown && sensorLeft && sensorRight) {
  1231   000600  0100               	movlb	0	; () banked
  1232   000602  5174               	movf	main@sensorUp& (0+255),w,b
  1233   000604  1175               	iorwf	(main@sensorUp+1)& (0+255),w,b
  1234   000606  B4D8               	btfsc	status,2,c
  1235   000608  EF08  F003         	goto	u3351
  1236   00060C  EF0A  F003         	goto	u3350
  1237   000610                     u3351:
  1238   000610  EF28  F003         	goto	l137
  1239   000614                     u3350:
  1240   000614                     
  1241                           ; BSR set to: 0
  1242   000614  5176               	movf	main@sensorDown& (0+255),w,b
  1243   000616  1177               	iorwf	(main@sensorDown+1)& (0+255),w,b
  1244   000618  B4D8               	btfsc	status,2,c
  1245   00061A  EF11  F003         	goto	u3361
  1246   00061E  EF13  F003         	goto	u3360
  1247   000622                     u3361:
  1248   000622  EF28  F003         	goto	l137
  1249   000626                     u3360:
  1250   000626                     
  1251                           ; BSR set to: 0
  1252   000626  5178               	movf	main@sensorLeft& (0+255),w,b
  1253   000628  1179               	iorwf	(main@sensorLeft+1)& (0+255),w,b
  1254   00062A  B4D8               	btfsc	status,2,c
  1255   00062C  EF1A  F003         	goto	u3371
  1256   000630  EF1C  F003         	goto	u3370
  1257   000634                     u3371:
  1258   000634  EF28  F003         	goto	l137
  1259   000638                     u3370:
  1260   000638                     
  1261                           ; BSR set to: 0
  1262   000638  517A               	movf	main@sensorRight& (0+255),w,b
  1263   00063A  117B               	iorwf	(main@sensorRight+1)& (0+255),w,b
  1264   00063C  B4D8               	btfsc	status,2,c
  1265   00063E  EF23  F003         	goto	u3381
  1266   000642  EF25  F003         	goto	u3380
  1267   000646                     u3381:
  1268   000646  EF28  F003         	goto	l137
  1269   00064A                     u3380:
  1270   00064A                     
  1271                           ; BSR set to: 0
  1272                           ;main.c: 170:                     LATDbits.LATD3 = 1;
  1273   00064A  868C               	bsf	140,3,c	;volatile
  1274                           
  1275                           ;main.c: 171:                 } else {
  1276   00064C  EF29  F003         	goto	l138
  1277   000650                     l137:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;main.c: 172:                     LATDbits.LATD3 = 0;
  1281   000650  968C               	bcf	140,3,c	;volatile
  1282   000652                     l138:
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;main.c: 175:                 if(PORTCbits.RC5 == 1) {
  1286   000652  AA82               	btfss	130,5,c	;volatile
  1287   000654  EF2E  F003         	goto	u3391
  1288   000658  EF30  F003         	goto	u3390
  1289   00065C                     u3391:
  1290   00065C  EFD1  F003         	goto	l2647
  1291   000660                     u3390:
  1292   000660                     
  1293                           ; BSR set to: 0
  1294                           ;main.c: 176:                     sensorTriggered = 0;
  1295   000660  0E00               	movlw	0
  1296   000662  6F71               	movwf	(main@sensorTriggered+1)& (0+255),b
  1297   000664  0E00               	movlw	0
  1298   000666  6F70               	movwf	main@sensorTriggered& (0+255),b
  1299   000668                     
  1300                           ; BSR set to: 0
  1301                           ;main.c: 177:                     _delay((unsigned long)((3000)*(8000000/4000.0)));
  1302   000668  0E1F               	movlw	31
  1303   00066A  6E5D               	movwf	(??_main+1)^0,c
  1304   00066C  0E71               	movlw	113
  1305   00066E  6E5C               	movwf	??_main^0,c
  1306   000670  0E1E               	movlw	30
  1307   000672                     u3517:
  1308   000672  2EE8               	decfsz	wreg,f,c
  1309   000674  D7FE               	bra	u3517
  1310   000676  2E5C               	decfsz	??_main^0,f,c
  1311   000678  D7FC               	bra	u3517
  1312   00067A  2E5D               	decfsz	(??_main+1)^0,f,c
  1313   00067C  D7FA               	bra	u3517
  1314   00067E  D000               	nop2	
  1315   000680  EFD1  F003         	goto	l2647
  1316   000684                     l2613:
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;main.c: 181:             if(i > 32/2) i = 32 - i;
  1320   000684  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1321   000686  EF4E  F003         	goto	u3401
  1322   00068A  517F               	movf	(main@i+1)& (0+255),w,b
  1323   00068C  E109               	bnz	u3400
  1324   00068E  0E11               	movlw	17
  1325   000690  5D7E               	subwf	main@i& (0+255),w,b
  1326   000692  A0D8               	btfss	status,0,c
  1327   000694  EF4E  F003         	goto	u3401
  1328   000698  EF50  F003         	goto	u3400
  1329   00069C                     u3401:
  1330   00069C  EF58  F003         	goto	l2617
  1331   0006A0                     u3400:
  1332   0006A0                     
  1333                           ; BSR set to: 0
  1334   0006A0  517E               	movf	main@i& (0+255),w,b
  1335   0006A2  0820               	sublw	32
  1336   0006A4  6F7E               	movwf	main@i& (0+255),b
  1337   0006A6  517F               	movf	(main@i+1)& (0+255),w,b
  1338   0006A8  A0D8               	btfss	status,0,c
  1339   0006AA  2AE8               	incf	wreg,f,c
  1340   0006AC  0800               	sublw	0
  1341   0006AE  6F7F               	movwf	(main@i+1)& (0+255),b
  1342   0006B0                     l2617:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;main.c: 182:             if(PORTBbits.RB0 == 1 && i < (32/2 - 1)) { i++; }
  1346   0006B0  A081               	btfss	129,0,c	;volatile
  1347   0006B2  EF5D  F003         	goto	u3411
  1348   0006B6  EF5F  F003         	goto	u3410
  1349   0006BA                     u3411:
  1350   0006BA  EF6F  F003         	goto	l2623
  1351   0006BE                     u3410:
  1352   0006BE                     
  1353                           ; BSR set to: 0
  1354   0006BE  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1355   0006C0  EF6D  F003         	goto	u3420
  1356   0006C4  517F               	movf	(main@i+1)& (0+255),w,b
  1357   0006C6  E107               	bnz	u3421
  1358   0006C8  0E0F               	movlw	15
  1359   0006CA  5D7E               	subwf	main@i& (0+255),w,b
  1360   0006CC  B0D8               	btfsc	status,0,c
  1361   0006CE  EF6B  F003         	goto	u3421
  1362   0006D2  EF6D  F003         	goto	u3420
  1363   0006D6                     u3421:
  1364   0006D6  EF6F  F003         	goto	l2623
  1365   0006DA                     u3420:
  1366   0006DA                     
  1367                           ; BSR set to: 0
  1368   0006DA  4B7E               	infsnz	main@i& (0+255),f,b
  1369   0006DC  2B7F               	incf	(main@i+1)& (0+255),f,b
  1370   0006DE                     l2623:
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;main.c: 183:             if(PORTBbits.RB1 == 1 && i > 0) { i--; }
  1374   0006DE  A281               	btfss	129,1,c	;volatile
  1375   0006E0  EF74  F003         	goto	u3431
  1376   0006E4  EF76  F003         	goto	u3430
  1377   0006E8                     u3431:
  1378   0006E8  EF86  F003         	goto	l2629
  1379   0006EC                     u3430:
  1380   0006EC                     
  1381                           ; BSR set to: 0
  1382   0006EC  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1383   0006EE  EF81  F003         	goto	u3441
  1384   0006F2  517F               	movf	(main@i+1)& (0+255),w,b
  1385   0006F4  E108               	bnz	u3440
  1386   0006F6  057E               	decf	main@i& (0+255),w,b
  1387   0006F8  A0D8               	btfss	status,0,c
  1388   0006FA  EF81  F003         	goto	u3441
  1389   0006FE  EF83  F003         	goto	u3440
  1390   000702                     u3441:
  1391   000702  EF86  F003         	goto	l2629
  1392   000706                     u3440:
  1393   000706                     
  1394                           ; BSR set to: 0
  1395   000706  077E               	decf	main@i& (0+255),f,b
  1396   000708  A0D8               	btfss	status,0,c
  1397   00070A  077F               	decf	(main@i+1)& (0+255),f,b
  1398   00070C                     l2629:
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;main.c: 184:             if(PORTBbits.RB2 == 1 && j > 0) { j--; }
  1402   00070C  A481               	btfss	129,2,c	;volatile
  1403   00070E  EF8B  F003         	goto	u3451
  1404   000712  EF8D  F003         	goto	u3450
  1405   000716                     u3451:
  1406   000716  EF9D  F003         	goto	l2635
  1407   00071A                     u3450:
  1408   00071A                     
  1409                           ; BSR set to: 0
  1410   00071A  BF7D               	btfsc	(main@j+1)& (0+255),7,b
  1411   00071C  EF98  F003         	goto	u3461
  1412   000720  517D               	movf	(main@j+1)& (0+255),w,b
  1413   000722  E108               	bnz	u3460
  1414   000724  057C               	decf	main@j& (0+255),w,b
  1415   000726  A0D8               	btfss	status,0,c
  1416   000728  EF98  F003         	goto	u3461
  1417   00072C  EF9A  F003         	goto	u3460
  1418   000730                     u3461:
  1419   000730  EF9D  F003         	goto	l2635
  1420   000734                     u3460:
  1421   000734                     
  1422                           ; BSR set to: 0
  1423   000734  077C               	decf	main@j& (0+255),f,b
  1424   000736  A0D8               	btfss	status,0,c
  1425   000738  077D               	decf	(main@j+1)& (0+255),f,b
  1426   00073A                     l2635:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;main.c: 185:             if(PORTBbits.RB3 == 1 && i < (36/2 - 1)) { j++; }
  1430   00073A  A681               	btfss	129,3,c	;volatile
  1431   00073C  EFA2  F003         	goto	u3471
  1432   000740  EFA4  F003         	goto	u3470
  1433   000744                     u3471:
  1434   000744  EFB4  F003         	goto	l2641
  1435   000748                     u3470:
  1436   000748                     
  1437                           ; BSR set to: 0
  1438   000748  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1439   00074A  EFB2  F003         	goto	u3480
  1440   00074E  517F               	movf	(main@i+1)& (0+255),w,b
  1441   000750  E107               	bnz	u3481
  1442   000752  0E11               	movlw	17
  1443   000754  5D7E               	subwf	main@i& (0+255),w,b
  1444   000756  B0D8               	btfsc	status,0,c
  1445   000758  EFB0  F003         	goto	u3481
  1446   00075C  EFB2  F003         	goto	u3480
  1447   000760                     u3481:
  1448   000760  EFB4  F003         	goto	l2641
  1449   000764                     u3480:
  1450   000764                     
  1451                           ; BSR set to: 0
  1452   000764  4B7C               	infsnz	main@j& (0+255),f,b
  1453   000766  2B7D               	incf	(main@j+1)& (0+255),f,b
  1454   000768                     l2641:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;main.c: 186:             setServoHighTime(i, j, 0, &highTimeThetaMicro, &highTimePhiMic
      +                          ro);
  1458   000768  C07E  F052         	movff	main@i,setServoHighTime@i
  1459   00076C  C07F  F053         	movff	main@i+1,setServoHighTime@i+1
  1460   000770  C07C  F054         	movff	main@j,setServoHighTime@j
  1461   000774  C07D  F055         	movff	main@j+1,setServoHighTime@j+1
  1462   000778  0E00               	movlw	0
  1463   00077A  6E57               	movwf	(setServoHighTime@scanMode+1)^0,c
  1464   00077C  0E00               	movlw	0
  1465   00077E  6E56               	movwf	setServoHighTime@scanMode^0,c
  1466   000780  0E86               	movlw	low _highTimeThetaMicro
  1467   000782  6E58               	movwf	setServoHighTime@highTimeThetaMicro^0,c
  1468   000784  0E84               	movlw	low _highTimePhiMicro
  1469   000786  6E59               	movwf	setServoHighTime@highTimePhiMicro^0,c
  1470   000788  EC30  F00A         	call	_setServoHighTime	;wreg free
  1471   00078C                     
  1472                           ;main.c: 187:             if(PORTBbits.RB4 == 1) {
  1473   00078C  A881               	btfss	129,4,c	;volatile
  1474   00078E  EFCB  F003         	goto	u3491
  1475   000792  EFCD  F003         	goto	u3490
  1476   000796                     u3491:
  1477   000796  EFD0  F003         	goto	l146
  1478   00079A                     u3490:
  1479   00079A                     
  1480                           ;main.c: 188:                 LATDbits.LATD3 = 1;
  1481   00079A  868C               	bsf	140,3,c	;volatile
  1482                           
  1483                           ;main.c: 189:             } else {
  1484   00079C  EFD1  F003         	goto	l2647
  1485   0007A0                     l146:
  1486                           
  1487                           ;main.c: 190:                 LATDbits.LATD3 = 0;
  1488   0007A0  968C               	bcf	140,3,c	;volatile
  1489   0007A2                     l2647:
  1490                           
  1491                           ;main.c: 193:         OLEDcount++;
  1492   0007A2  0100               	movlb	0	; () banked
  1493   0007A4  4B72               	infsnz	main@OLEDcount& (0+255),f,b
  1494   0007A6  2B73               	incf	(main@OLEDcount+1)& (0+255),f,b
  1495   0007A8                     
  1496                           ; BSR set to: 0
  1497                           ;main.c: 194:         if (OLEDcount % 10 == 0) {
  1498   0007A8  C072  F002         	movff	main@OLEDcount,___awmod@dividend
  1499   0007AC  C073  F003         	movff	main@OLEDcount+1,___awmod@dividend+1
  1500   0007B0  0E00               	movlw	0
  1501   0007B2  6E05               	movwf	(___awmod@divisor+1)^0,c
  1502   0007B4  0E0A               	movlw	10
  1503   0007B6  6E04               	movwf	___awmod@divisor^0,c
  1504   0007B8  EC34  F00F         	call	___awmod	;wreg free
  1505   0007BC  5002               	movf	?___awmod^0,w,c
  1506   0007BE  1003               	iorwf	(?___awmod+1)^0,w,c
  1507   0007C0  A4D8               	btfss	status,2,c
  1508   0007C2  EFE5  F003         	goto	u3501
  1509   0007C6  EFE7  F003         	goto	u3500
  1510   0007CA                     u3501:
  1511   0007CA  EFA1  F001         	goto	l123
  1512   0007CE                     u3500:
  1513   0007CE                     
  1514                           ;main.c: 195:             displayOLED(i, j);
  1515   0007CE  C07E  F018         	movff	main@i,displayOLED@i
  1516   0007D2  C07F  F019         	movff	main@i+1,displayOLED@i+1
  1517   0007D6  C07C  F01A         	movff	main@j,displayOLED@j
  1518   0007DA  C07D  F01B         	movff	main@j+1,displayOLED@j+1
  1519   0007DE  EC8B  F00F         	call	_displayOLED	;wreg free
  1520   0007E2                     
  1521                           ;main.c: 196:             OLEDcount = 0;
  1522   0007E2  0E00               	movlw	0
  1523   0007E4  0100               	movlb	0	; () banked
  1524   0007E6  6F73               	movwf	(main@OLEDcount+1)& (0+255),b
  1525   0007E8  0E00               	movlw	0
  1526   0007EA  6F72               	movwf	main@OLEDcount& (0+255),b
  1527   0007EC  EFA1  F001         	goto	l123
  1528   0007F0  EF4A  F000         	goto	start
  1529   0007F4                     __end_of_main:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _setServoHighTime *****************
  1533 ;; Defined at:
  1534 ;;		line 36 in file "./ServoFunctions.h"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  i               2   81[COMRAM] int 
  1537 ;;  j               2   83[COMRAM] int 
  1538 ;;  scanMode        2   85[COMRAM] int 
  1539 ;;  highTimeThet    1   87[COMRAM] PTR int 
  1540 ;;		 -> highTimeThetaMicro(2), 
  1541 ;;  highTimePhiM    1   88[COMRAM] PTR int 
  1542 ;;		 -> highTimePhiMicro(2), 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  dutyCyclePer    4    4[BANK0 ] float 
  1545 ;;  dutyCyclePer    4    0[BANK0 ] float 
  1546 ;;  servoThetaPo    2   14[BANK0 ] int 
  1547 ;;  servoPhiPosi    2   12[BANK0 ] int 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1557 ;;      Params:         8       0       0       0
  1558 ;;      Locals:         0      16       0       0
  1559 ;;      Temps:          2       0       0       0
  1560 ;;      Totals:        10      16       0       0
  1561 ;;Total ram usage:       26 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 3
  1564 ;; This function calls:
  1565 ;;		___fladd
  1566 ;;		___fldiv
  1567 ;;		___flmul
  1568 ;;		___fltol
  1569 ;;		___xxtofl
  1570 ;;		_getServoAngles
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text1
  1577   001460                     __ptext1:
  1578                           	callstack 0
  1579   001460                     _setServoHighTime:
  1580                           	callstack 27
  1581   001460                     
  1582                           ;./ServoFunctions.h: 37:     int servoThetaPosition = 0, servoPhiPosition = 0;
  1583   001460  0E00               	movlw	0
  1584   001462  0100               	movlb	0	; () banked
  1585   001464  6F6F               	movwf	(setServoHighTime@servoThetaPosition+1)& (0+255),b
  1586   001466  0E00               	movlw	0
  1587   001468  6F6E               	movwf	setServoHighTime@servoThetaPosition& (0+255),b
  1588   00146A  0E00               	movlw	0
  1589   00146C  6F6D               	movwf	(setServoHighTime@servoPhiPosition+1)& (0+255),b
  1590   00146E  0E00               	movlw	0
  1591   001470  6F6C               	movwf	setServoHighTime@servoPhiPosition& (0+255),b
  1592   001472                     
  1593                           ; BSR set to: 0
  1594                           ;./ServoFunctions.h: 38:     getServoAngles(i, j, &servoThetaPosition, &servoPhiPosition
      +                          , scanMode);
  1595   001472  C052  F00A         	movff	setServoHighTime@i,getServoAngles@i
  1596   001476  C053  F00B         	movff	setServoHighTime@i+1,getServoAngles@i+1
  1597   00147A  C054  F00C         	movff	setServoHighTime@j,getServoAngles@j
  1598   00147E  C055  F00D         	movff	setServoHighTime@j+1,getServoAngles@j+1
  1599   001482  0E6E               	movlw	low setServoHighTime@servoThetaPosition
  1600   001484  6E0E               	movwf	getServoAngles@servoThetaPosition^0,c
  1601   001486  0E6C               	movlw	low setServoHighTime@servoPhiPosition
  1602   001488  6E0F               	movwf	getServoAngles@servoPhiPosition^0,c
  1603   00148A  C056  F010         	movff	setServoHighTime@scanMode,getServoAngles@scanMode
  1604   00148E  C057  F011         	movff	setServoHighTime@scanMode+1,getServoAngles@scanMode+1
  1605   001492  EC90  F00B         	call	_getServoAngles	;wreg free
  1606   001496                     
  1607                           ;./ServoFunctions.h: 40:     float dutyCyclePercentTheta = ((180 - servoThetaPosition)/1
      +                          80.0)*(0.08)+0.035;
  1608   001496  0E0A               	movlw	10
  1609   001498  6E2D               	movwf	___flmul@a^0,c
  1610   00149A  0ED7               	movlw	215
  1611   00149C  6E2E               	movwf	(___flmul@a+1)^0,c
  1612   00149E  0EA3               	movlw	163
  1613   0014A0  6E2F               	movwf	(___flmul@a+2)^0,c
  1614   0014A2  0E3D               	movlw	61
  1615   0014A4  6E30               	movwf	(___flmul@a+3)^0,c
  1616   0014A6  0E00               	movlw	0
  1617   0014A8  6E14               	movwf	___fldiv@a^0,c
  1618   0014AA  0E00               	movlw	0
  1619   0014AC  6E15               	movwf	(___fldiv@a+1)^0,c
  1620   0014AE  0E34               	movlw	52
  1621   0014B0  6E16               	movwf	(___fldiv@a+2)^0,c
  1622   0014B2  0E43               	movlw	67
  1623   0014B4  6E17               	movwf	(___fldiv@a+3)^0,c
  1624   0014B6  0EB4               	movlw	180
  1625   0014B8  6E5A               	movwf	??_setServoHighTime^0,c
  1626   0014BA  0E00               	movlw	0
  1627   0014BC  6E5B               	movwf	(??_setServoHighTime+1)^0,c
  1628   0014BE  0100               	movlb	0	; () banked
  1629   0014C0  516E               	movf	setServoHighTime@servoThetaPosition& (0+255),w,b
  1630   0014C2  5E5A               	subwf	??_setServoHighTime^0,f,c
  1631   0014C4  516F               	movf	(setServoHighTime@servoThetaPosition+1)& (0+255),w,b
  1632   0014C6  5A5B               	subwfb	(??_setServoHighTime+1)^0,f,c
  1633   0014C8  C05A  F002         	movff	??_setServoHighTime,___xxtofl@val
  1634   0014CC  C05B  F003         	movff	??_setServoHighTime+1,___xxtofl@val+1
  1635   0014D0  0E00               	movlw	0
  1636   0014D2  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  1637   0014D4  0EFF               	movlw	-1
  1638   0014D6  6E04               	movwf	(___xxtofl@val+2)^0,c
  1639   0014D8  6E05               	movwf	(___xxtofl@val+3)^0,c
  1640   0014DA  0E01               	movlw	1
  1641   0014DC  ECB7  F00C         	call	___xxtofl
  1642   0014E0  C002  F010         	movff	?___xxtofl,___fldiv@b
  1643   0014E4  C003  F011         	movff	?___xxtofl+1,___fldiv@b+1
  1644   0014E8  C004  F012         	movff	?___xxtofl+2,___fldiv@b+2
  1645   0014EC  C005  F013         	movff	?___xxtofl+3,___fldiv@b+3
  1646   0014F0  EC68  F008         	call	___fldiv	;wreg free
  1647   0014F4  C010  F029         	movff	?___fldiv,___flmul@b
  1648   0014F8  C011  F02A         	movff	?___fldiv+1,___flmul@b+1
  1649   0014FC  C012  F02B         	movff	?___fldiv+2,___flmul@b+2
  1650   001500  C013  F02C         	movff	?___fldiv+3,___flmul@b+3
  1651   001504  EC55  F006         	call	___flmul	;wreg free
  1652   001508  C029  F042         	movff	?___flmul,___fladd@b
  1653   00150C  C02A  F043         	movff	?___flmul+1,___fladd@b+1
  1654   001510  C02B  F044         	movff	?___flmul+2,___fladd@b+2
  1655   001514  C02C  F045         	movff	?___flmul+3,___fladd@b+3
  1656   001518  0E29               	movlw	41
  1657   00151A  6E46               	movwf	___fladd@a^0,c
  1658   00151C  0E5C               	movlw	92
  1659   00151E  6E47               	movwf	(___fladd@a+1)^0,c
  1660   001520  0E0F               	movlw	15
  1661   001522  6E48               	movwf	(___fladd@a+2)^0,c
  1662   001524  0E3D               	movlw	61
  1663   001526  6E49               	movwf	(___fladd@a+3)^0,c
  1664   001528  ECFA  F003         	call	___fladd	;wreg free
  1665   00152C  C042  F060         	movff	?___fladd,setServoHighTime@dutyCyclePercentTheta
  1666   001530  C043  F061         	movff	?___fladd+1,setServoHighTime@dutyCyclePercentTheta+1
  1667   001534  C044  F062         	movff	?___fladd+2,setServoHighTime@dutyCyclePercentTheta+2
  1668   001538  C045  F063         	movff	?___fladd+3,setServoHighTime@dutyCyclePercentTheta+3
  1669   00153C                     
  1670                           ;./ServoFunctions.h: 41:     *highTimeThetaMicro = (int)(0.02 * dutyCyclePercentTheta * 
      +                          1000000/30.0);
  1671   00153C  0E0A               	movlw	10
  1672   00153E  6E2D               	movwf	___flmul@a^0,c
  1673   001540  0ED7               	movlw	215
  1674   001542  6E2E               	movwf	(___flmul@a+1)^0,c
  1675   001544  0EA3               	movlw	163
  1676   001546  6E2F               	movwf	(___flmul@a+2)^0,c
  1677   001548  0E3C               	movlw	60
  1678   00154A  6E30               	movwf	(___flmul@a+3)^0,c
  1679   00154C  C060  F029         	movff	setServoHighTime@dutyCyclePercentTheta,___flmul@b
  1680   001550  C061  F02A         	movff	setServoHighTime@dutyCyclePercentTheta+1,___flmul@b+1
  1681   001554  C062  F02B         	movff	setServoHighTime@dutyCyclePercentTheta+2,___flmul@b+2
  1682   001558  C063  F02C         	movff	setServoHighTime@dutyCyclePercentTheta+3,___flmul@b+3
  1683   00155C  EC55  F006         	call	___flmul	;wreg free
  1684   001560  C029  F068         	movff	?___flmul,_setServoHighTime$1476
  1685   001564  C02A  F069         	movff	?___flmul+1,_setServoHighTime$1476+1
  1686   001568  C02B  F06A         	movff	?___flmul+2,_setServoHighTime$1476+2
  1687   00156C  C02C  F06B         	movff	?___flmul+3,_setServoHighTime$1476+3
  1688   001570                     
  1689                           ;./ServoFunctions.h: 41:     *highTimeThetaMicro = (int)(0.02 * dutyCyclePercentTheta * 
      +                          1000000/30.0);
  1690   001570  0E00               	movlw	0
  1691   001572  6E14               	movwf	___fldiv@a^0,c
  1692   001574  0E00               	movlw	0
  1693   001576  6E15               	movwf	(___fldiv@a+1)^0,c
  1694   001578  0EF0               	movlw	240
  1695   00157A  6E16               	movwf	(___fldiv@a+2)^0,c
  1696   00157C  0E41               	movlw	65
  1697   00157E  6E17               	movwf	(___fldiv@a+3)^0,c
  1698   001580  0E00               	movlw	0
  1699   001582  6E2D               	movwf	___flmul@a^0,c
  1700   001584  0E24               	movlw	36
  1701   001586  6E2E               	movwf	(___flmul@a+1)^0,c
  1702   001588  0E74               	movlw	116
  1703   00158A  6E2F               	movwf	(___flmul@a+2)^0,c
  1704   00158C  0E49               	movlw	73
  1705   00158E  6E30               	movwf	(___flmul@a+3)^0,c
  1706   001590  C068  F029         	movff	_setServoHighTime$1476,___flmul@b
  1707   001594  C069  F02A         	movff	_setServoHighTime$1476+1,___flmul@b+1
  1708   001598  C06A  F02B         	movff	_setServoHighTime$1476+2,___flmul@b+2
  1709   00159C  C06B  F02C         	movff	_setServoHighTime$1476+3,___flmul@b+3
  1710   0015A0  EC55  F006         	call	___flmul	;wreg free
  1711   0015A4  C029  F010         	movff	?___flmul,___fldiv@b
  1712   0015A8  C02A  F011         	movff	?___flmul+1,___fldiv@b+1
  1713   0015AC  C02B  F012         	movff	?___flmul+2,___fldiv@b+2
  1714   0015B0  C02C  F013         	movff	?___flmul+3,___fldiv@b+3
  1715   0015B4  EC68  F008         	call	___fldiv	;wreg free
  1716   0015B8  C010  F042         	movff	?___fldiv,___fltol@f1
  1717   0015BC  C011  F043         	movff	?___fldiv+1,___fltol@f1+1
  1718   0015C0  C012  F044         	movff	?___fldiv+2,___fltol@f1+2
  1719   0015C4  C013  F045         	movff	?___fldiv+3,___fltol@f1+3
  1720   0015C8  EC91  F00D         	call	___fltol	;wreg free
  1721   0015CC  5058               	movf	setServoHighTime@highTimeThetaMicro^0,w,c
  1722   0015CE  6ED9               	movwf	fsr2l,c
  1723   0015D0  6ADA               	clrf	fsr2h,c
  1724   0015D2  C042  FFDE         	movff	?___fltol,postinc2
  1725   0015D6  C043  FFDD         	movff	?___fltol+1,postdec2
  1726   0015DA                     
  1727                           ;./ServoFunctions.h: 43:     float dutyCyclePercentPhi = ((90-servoPhiPosition)/90.0)*(0
      +                          .05)+0.04;
  1728   0015DA  0ECD               	movlw	205
  1729   0015DC  6E2D               	movwf	___flmul@a^0,c
  1730   0015DE  0ECC               	movlw	204
  1731   0015E0  6E2E               	movwf	(___flmul@a+1)^0,c
  1732   0015E2  0E4C               	movlw	76
  1733   0015E4  6E2F               	movwf	(___flmul@a+2)^0,c
  1734   0015E6  0E3D               	movlw	61
  1735   0015E8  6E30               	movwf	(___flmul@a+3)^0,c
  1736   0015EA  0E00               	movlw	0
  1737   0015EC  6E14               	movwf	___fldiv@a^0,c
  1738   0015EE  0E00               	movlw	0
  1739   0015F0  6E15               	movwf	(___fldiv@a+1)^0,c
  1740   0015F2  0EB4               	movlw	180
  1741   0015F4  6E16               	movwf	(___fldiv@a+2)^0,c
  1742   0015F6  0E42               	movlw	66
  1743   0015F8  6E17               	movwf	(___fldiv@a+3)^0,c
  1744   0015FA  0E5A               	movlw	90
  1745   0015FC  6E5A               	movwf	??_setServoHighTime^0,c
  1746   0015FE  0E00               	movlw	0
  1747   001600  6E5B               	movwf	(??_setServoHighTime+1)^0,c
  1748   001602  0100               	movlb	0	; () banked
  1749   001604  516C               	movf	setServoHighTime@servoPhiPosition& (0+255),w,b
  1750   001606  5E5A               	subwf	??_setServoHighTime^0,f,c
  1751   001608  516D               	movf	(setServoHighTime@servoPhiPosition+1)& (0+255),w,b
  1752   00160A  5A5B               	subwfb	(??_setServoHighTime+1)^0,f,c
  1753   00160C  C05A  F002         	movff	??_setServoHighTime,___xxtofl@val
  1754   001610  C05B  F003         	movff	??_setServoHighTime+1,___xxtofl@val+1
  1755   001614  0E00               	movlw	0
  1756   001616  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  1757   001618  0EFF               	movlw	-1
  1758   00161A  6E04               	movwf	(___xxtofl@val+2)^0,c
  1759   00161C  6E05               	movwf	(___xxtofl@val+3)^0,c
  1760   00161E  0E01               	movlw	1
  1761   001620  ECB7  F00C         	call	___xxtofl
  1762   001624  C002  F010         	movff	?___xxtofl,___fldiv@b
  1763   001628  C003  F011         	movff	?___xxtofl+1,___fldiv@b+1
  1764   00162C  C004  F012         	movff	?___xxtofl+2,___fldiv@b+2
  1765   001630  C005  F013         	movff	?___xxtofl+3,___fldiv@b+3
  1766   001634  EC68  F008         	call	___fldiv	;wreg free
  1767   001638  C010  F029         	movff	?___fldiv,___flmul@b
  1768   00163C  C011  F02A         	movff	?___fldiv+1,___flmul@b+1
  1769   001640  C012  F02B         	movff	?___fldiv+2,___flmul@b+2
  1770   001644  C013  F02C         	movff	?___fldiv+3,___flmul@b+3
  1771   001648  EC55  F006         	call	___flmul	;wreg free
  1772   00164C  C029  F042         	movff	?___flmul,___fladd@b
  1773   001650  C02A  F043         	movff	?___flmul+1,___fladd@b+1
  1774   001654  C02B  F044         	movff	?___flmul+2,___fladd@b+2
  1775   001658  C02C  F045         	movff	?___flmul+3,___fladd@b+3
  1776   00165C  0E0A               	movlw	10
  1777   00165E  6E46               	movwf	___fladd@a^0,c
  1778   001660  0ED7               	movlw	215
  1779   001662  6E47               	movwf	(___fladd@a+1)^0,c
  1780   001664  0E23               	movlw	35
  1781   001666  6E48               	movwf	(___fladd@a+2)^0,c
  1782   001668  0E3D               	movlw	61
  1783   00166A  6E49               	movwf	(___fladd@a+3)^0,c
  1784   00166C  ECFA  F003         	call	___fladd	;wreg free
  1785   001670  C042  F064         	movff	?___fladd,setServoHighTime@dutyCyclePercentPhi
  1786   001674  C043  F065         	movff	?___fladd+1,setServoHighTime@dutyCyclePercentPhi+1
  1787   001678  C044  F066         	movff	?___fladd+2,setServoHighTime@dutyCyclePercentPhi+2
  1788   00167C  C045  F067         	movff	?___fladd+3,setServoHighTime@dutyCyclePercentPhi+3
  1789   001680                     
  1790                           ;./ServoFunctions.h: 44:     *highTimePhiMicro = (int)(0.02 * dutyCyclePercentPhi * 1000
      +                          000/30.0);
  1791   001680  0E0A               	movlw	10
  1792   001682  6E2D               	movwf	___flmul@a^0,c
  1793   001684  0ED7               	movlw	215
  1794   001686  6E2E               	movwf	(___flmul@a+1)^0,c
  1795   001688  0EA3               	movlw	163
  1796   00168A  6E2F               	movwf	(___flmul@a+2)^0,c
  1797   00168C  0E3C               	movlw	60
  1798   00168E  6E30               	movwf	(___flmul@a+3)^0,c
  1799   001690  C064  F029         	movff	setServoHighTime@dutyCyclePercentPhi,___flmul@b
  1800   001694  C065  F02A         	movff	setServoHighTime@dutyCyclePercentPhi+1,___flmul@b+1
  1801   001698  C066  F02B         	movff	setServoHighTime@dutyCyclePercentPhi+2,___flmul@b+2
  1802   00169C  C067  F02C         	movff	setServoHighTime@dutyCyclePercentPhi+3,___flmul@b+3
  1803   0016A0  EC55  F006         	call	___flmul	;wreg free
  1804   0016A4  C029  F068         	movff	?___flmul,_setServoHighTime$1476
  1805   0016A8  C02A  F069         	movff	?___flmul+1,_setServoHighTime$1476+1
  1806   0016AC  C02B  F06A         	movff	?___flmul+2,_setServoHighTime$1476+2
  1807   0016B0  C02C  F06B         	movff	?___flmul+3,_setServoHighTime$1476+3
  1808   0016B4                     
  1809                           ;./ServoFunctions.h: 44:     *highTimePhiMicro = (int)(0.02 * dutyCyclePercentPhi * 1000
      +                          000/30.0);
  1810   0016B4  0E00               	movlw	0
  1811   0016B6  6E14               	movwf	___fldiv@a^0,c
  1812   0016B8  0E00               	movlw	0
  1813   0016BA  6E15               	movwf	(___fldiv@a+1)^0,c
  1814   0016BC  0EF0               	movlw	240
  1815   0016BE  6E16               	movwf	(___fldiv@a+2)^0,c
  1816   0016C0  0E41               	movlw	65
  1817   0016C2  6E17               	movwf	(___fldiv@a+3)^0,c
  1818   0016C4  0E00               	movlw	0
  1819   0016C6  6E2D               	movwf	___flmul@a^0,c
  1820   0016C8  0E24               	movlw	36
  1821   0016CA  6E2E               	movwf	(___flmul@a+1)^0,c
  1822   0016CC  0E74               	movlw	116
  1823   0016CE  6E2F               	movwf	(___flmul@a+2)^0,c
  1824   0016D0  0E49               	movlw	73
  1825   0016D2  6E30               	movwf	(___flmul@a+3)^0,c
  1826   0016D4  C068  F029         	movff	_setServoHighTime$1476,___flmul@b
  1827   0016D8  C069  F02A         	movff	_setServoHighTime$1476+1,___flmul@b+1
  1828   0016DC  C06A  F02B         	movff	_setServoHighTime$1476+2,___flmul@b+2
  1829   0016E0  C06B  F02C         	movff	_setServoHighTime$1476+3,___flmul@b+3
  1830   0016E4  EC55  F006         	call	___flmul	;wreg free
  1831   0016E8  C029  F010         	movff	?___flmul,___fldiv@b
  1832   0016EC  C02A  F011         	movff	?___flmul+1,___fldiv@b+1
  1833   0016F0  C02B  F012         	movff	?___flmul+2,___fldiv@b+2
  1834   0016F4  C02C  F013         	movff	?___flmul+3,___fldiv@b+3
  1835   0016F8  EC68  F008         	call	___fldiv	;wreg free
  1836   0016FC  C010  F042         	movff	?___fldiv,___fltol@f1
  1837   001700  C011  F043         	movff	?___fldiv+1,___fltol@f1+1
  1838   001704  C012  F044         	movff	?___fldiv+2,___fltol@f1+2
  1839   001708  C013  F045         	movff	?___fldiv+3,___fltol@f1+3
  1840   00170C  EC91  F00D         	call	___fltol	;wreg free
  1841   001710  5059               	movf	setServoHighTime@highTimePhiMicro^0,w,c
  1842   001712  6ED9               	movwf	fsr2l,c
  1843   001714  6ADA               	clrf	fsr2h,c
  1844   001716  C042  FFDE         	movff	?___fltol,postinc2
  1845   00171A  C043  FFDD         	movff	?___fltol+1,postdec2
  1846   00171E  0012               	return		;funcret
  1847   001720                     __end_of_setServoHighTime:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function ___xxtofl *****************
  1851 ;; Defined at:
  1852 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  sign            1    wreg     unsigned char 
  1855 ;;  val             4    1[COMRAM] long 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  sign            1    9[COMRAM] unsigned char 
  1858 ;;  arg             4   11[COMRAM] unsigned long 
  1859 ;;  exp             1   10[COMRAM] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  4    1[COMRAM] unsigned char 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1869 ;;      Params:         4       0       0       0
  1870 ;;      Locals:         6       0       0       0
  1871 ;;      Temps:          4       0       0       0
  1872 ;;      Totals:        14       0       0       0
  1873 ;;Total ram usage:       14 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_setServoHighTime
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text2
  1884   00196E                     __ptext2:
  1885                           	callstack 0
  1886   00196E                     ___xxtofl:
  1887                           	callstack 28
  1888                           
  1889                           ;incstack = 0
  1890                           ;___xxtofl@sign stored from wreg
  1891   00196E  6E0A               	movwf	___xxtofl@sign^0,c
  1892   001970  500A               	movf	___xxtofl@sign^0,w,c
  1893   001972  B4D8               	btfsc	status,2,c
  1894   001974  EFBE  F00C         	goto	u2901
  1895   001978  EFC0  F00C         	goto	u2900
  1896   00197C                     u2901:
  1897   00197C  EFE2  F00C         	goto	l809
  1898   001980                     u2900:
  1899   001980  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  1900   001982  EFC7  F00C         	goto	u2910
  1901   001986  EFC5  F00C         	goto	u2911
  1902   00198A                     u2911:
  1903   00198A  EFE2  F00C         	goto	l809
  1904   00198E                     u2910:
  1905   00198E  C002  F006         	movff	___xxtofl@val,??___xxtofl
  1906   001992  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  1907   001996  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  1908   00199A  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  1909   00199E  1E06               	comf	??___xxtofl^0,f,c
  1910   0019A0  1E07               	comf	(??___xxtofl+1)^0,f,c
  1911   0019A2  1E08               	comf	(??___xxtofl+2)^0,f,c
  1912   0019A4  1E09               	comf	(??___xxtofl+3)^0,f,c
  1913   0019A6  2A06               	incf	??___xxtofl^0,f,c
  1914   0019A8  0E00               	movlw	0
  1915   0019AA  2207               	addwfc	(??___xxtofl+1)^0,f,c
  1916   0019AC  2208               	addwfc	(??___xxtofl+2)^0,f,c
  1917   0019AE  2209               	addwfc	(??___xxtofl+3)^0,f,c
  1918   0019B0  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  1919   0019B4  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  1920   0019B8  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  1921   0019BC  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  1922   0019C0  EFEA  F00C         	goto	l2377
  1923   0019C4                     l809:
  1924   0019C4  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  1925   0019C8  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1926   0019CC  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1927   0019D0  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1928   0019D4                     l2377:
  1929   0019D4  5002               	movf	___xxtofl@val^0,w,c
  1930   0019D6  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  1931   0019D8  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  1932   0019DA  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  1933   0019DC  A4D8               	btfss	status,2,c
  1934   0019DE  EFF3  F00C         	goto	u2921
  1935   0019E2  EFF5  F00C         	goto	u2920
  1936   0019E6                     u2921:
  1937   0019E6  EFFF  F00C         	goto	l2383
  1938   0019EA                     u2920:
  1939   0019EA  0E00               	movlw	0
  1940   0019EC  6E02               	movwf	?___xxtofl^0,c
  1941   0019EE  0E00               	movlw	0
  1942   0019F0  6E03               	movwf	(?___xxtofl+1)^0,c
  1943   0019F2  0E00               	movlw	0
  1944   0019F4  6E04               	movwf	(?___xxtofl+2)^0,c
  1945   0019F6  0E00               	movlw	0
  1946   0019F8  6E05               	movwf	(?___xxtofl+3)^0,c
  1947   0019FA  EF90  F00D         	goto	l812
  1948   0019FE                     l2383:
  1949   0019FE  0E96               	movlw	150
  1950   001A00  6E0B               	movwf	___xxtofl@exp^0,c
  1951   001A02  EF09  F00D         	goto	l2387
  1952   001A06                     l2385:
  1953   001A06  2A0B               	incf	___xxtofl@exp^0,f,c
  1954   001A08  90D8               	bcf	status,0,c
  1955   001A0A  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  1956   001A0C  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  1957   001A0E  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  1958   001A10  320C               	rrcf	___xxtofl@arg^0,f,c
  1959   001A12                     l2387:
  1960   001A12  0E00               	movlw	0
  1961   001A14  140C               	andwf	___xxtofl@arg^0,w,c
  1962   001A16  6E06               	movwf	??___xxtofl^0,c
  1963   001A18  0E00               	movlw	0
  1964   001A1A  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  1965   001A1C  6E07               	movwf	(??___xxtofl+1)^0,c
  1966   001A1E  0E00               	movlw	0
  1967   001A20  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  1968   001A22  6E08               	movwf	(??___xxtofl+2)^0,c
  1969   001A24  0EFE               	movlw	254
  1970   001A26  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  1971   001A28  6E09               	movwf	(??___xxtofl+3)^0,c
  1972   001A2A  5006               	movf	??___xxtofl^0,w,c
  1973   001A2C  1007               	iorwf	(??___xxtofl+1)^0,w,c
  1974   001A2E  1008               	iorwf	(??___xxtofl+2)^0,w,c
  1975   001A30  1009               	iorwf	(??___xxtofl+3)^0,w,c
  1976   001A32  A4D8               	btfss	status,2,c
  1977   001A34  EF1E  F00D         	goto	u2931
  1978   001A38  EF20  F00D         	goto	u2930
  1979   001A3C                     u2931:
  1980   001A3C  EF03  F00D         	goto	l2385
  1981   001A40                     u2930:
  1982   001A40  EF2E  F00D         	goto	l816
  1983   001A44                     l2389:
  1984   001A44  2A0B               	incf	___xxtofl@exp^0,f,c
  1985   001A46  0E01               	movlw	1
  1986   001A48  260C               	addwf	___xxtofl@arg^0,f,c
  1987   001A4A  0E00               	movlw	0
  1988   001A4C  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  1989   001A4E  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  1990   001A50  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  1991   001A52  90D8               	bcf	status,0,c
  1992   001A54  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  1993   001A56  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  1994   001A58  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  1995   001A5A  320C               	rrcf	___xxtofl@arg^0,f,c
  1996   001A5C                     l816:
  1997   001A5C  0E00               	movlw	0
  1998   001A5E  140C               	andwf	___xxtofl@arg^0,w,c
  1999   001A60  6E06               	movwf	??___xxtofl^0,c
  2000   001A62  0E00               	movlw	0
  2001   001A64  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  2002   001A66  6E07               	movwf	(??___xxtofl+1)^0,c
  2003   001A68  0E00               	movlw	0
  2004   001A6A  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  2005   001A6C  6E08               	movwf	(??___xxtofl+2)^0,c
  2006   001A6E  0EFF               	movlw	255
  2007   001A70  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  2008   001A72  6E09               	movwf	(??___xxtofl+3)^0,c
  2009   001A74  5006               	movf	??___xxtofl^0,w,c
  2010   001A76  1007               	iorwf	(??___xxtofl+1)^0,w,c
  2011   001A78  1008               	iorwf	(??___xxtofl+2)^0,w,c
  2012   001A7A  1009               	iorwf	(??___xxtofl+3)^0,w,c
  2013   001A7C  A4D8               	btfss	status,2,c
  2014   001A7E  EF43  F00D         	goto	u2941
  2015   001A82  EF45  F00D         	goto	u2940
  2016   001A86                     u2941:
  2017   001A86  EF22  F00D         	goto	l2389
  2018   001A8A                     u2940:
  2019   001A8A  EF4D  F00D         	goto	l2397
  2020   001A8E                     l2395:
  2021   001A8E  060B               	decf	___xxtofl@exp^0,f,c
  2022   001A90  90D8               	bcf	status,0,c
  2023   001A92  360C               	rlcf	___xxtofl@arg^0,f,c
  2024   001A94  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  2025   001A96  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  2026   001A98  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  2027   001A9A                     l2397:
  2028   001A9A  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  2029   001A9C  EF52  F00D         	goto	u2951
  2030   001AA0  EF54  F00D         	goto	u2950
  2031   001AA4                     u2951:
  2032   001AA4  EF5C  F00D         	goto	l823
  2033   001AA8                     u2950:
  2034   001AA8  0E02               	movlw	2
  2035   001AAA  600B               	cpfslt	___xxtofl@exp^0,c
  2036   001AAC  EF5A  F00D         	goto	u2961
  2037   001AB0  EF5C  F00D         	goto	u2960
  2038   001AB4                     u2961:
  2039   001AB4  EF47  F00D         	goto	l2395
  2040   001AB8                     u2960:
  2041   001AB8                     l823:
  2042   001AB8  B00B               	btfsc	___xxtofl@exp^0,0,c
  2043   001ABA  EF61  F00D         	goto	u2971
  2044   001ABE  EF63  F00D         	goto	u2970
  2045   001AC2                     u2971:
  2046   001AC2  EF64  F00D         	goto	l2403
  2047   001AC6                     u2970:
  2048   001AC6  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  2049   001AC8                     l2403:
  2050   001AC8  90D8               	bcf	status,0,c
  2051   001ACA  320B               	rrcf	___xxtofl@exp^0,f,c
  2052   001ACC  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  2053   001AD0  6A07               	clrf	(??___xxtofl+1)^0,c
  2054   001AD2  6A08               	clrf	(??___xxtofl+2)^0,c
  2055   001AD4  6A09               	clrf	(??___xxtofl+3)^0,c
  2056   001AD6  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  2057   001ADA  6A08               	clrf	(??___xxtofl+2)^0,c
  2058   001ADC  6A07               	clrf	(??___xxtofl+1)^0,c
  2059   001ADE  6A06               	clrf	??___xxtofl^0,c
  2060   001AE0  5006               	movf	??___xxtofl^0,w,c
  2061   001AE2  120C               	iorwf	___xxtofl@arg^0,f,c
  2062   001AE4  5007               	movf	(??___xxtofl+1)^0,w,c
  2063   001AE6  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  2064   001AE8  5008               	movf	(??___xxtofl+2)^0,w,c
  2065   001AEA  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  2066   001AEC  5009               	movf	(??___xxtofl+3)^0,w,c
  2067   001AEE  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  2068   001AF0  500A               	movf	___xxtofl@sign^0,w,c
  2069   001AF2  B4D8               	btfsc	status,2,c
  2070   001AF4  EF7E  F00D         	goto	u2981
  2071   001AF8  EF80  F00D         	goto	u2980
  2072   001AFC                     u2981:
  2073   001AFC  EF88  F00D         	goto	l2413
  2074   001B00                     u2980:
  2075   001B00  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  2076   001B02  EF87  F00D         	goto	u2990
  2077   001B06  EF85  F00D         	goto	u2991
  2078   001B0A                     u2991:
  2079   001B0A  EF88  F00D         	goto	l2413
  2080   001B0E                     u2990:
  2081   001B0E  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  2082   001B10                     l2413:
  2083   001B10  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  2084   001B14  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  2085   001B18  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  2086   001B1C  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  2087   001B20                     l812:
  2088   001B20  0012               	return		;funcret
  2089   001B22                     __end_of___xxtofl:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function ___fltol *****************
  2093 ;; Defined at:
  2094 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  f1              4   65[COMRAM] unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  exp1            1   74[COMRAM] unsigned char 
  2099 ;;  sign1           1   73[COMRAM] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  4   65[COMRAM] long 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2109 ;;      Params:         4       0       0       0
  2110 ;;      Locals:         2       0       0       0
  2111 ;;      Temps:          4       0       0       0
  2112 ;;      Totals:        10       0       0       0
  2113 ;;Total ram usage:       10 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; Hardware stack levels required when called: 1
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_setServoHighTime
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text3
  2124   001B22                     __ptext3:
  2125                           	callstack 0
  2126   001B22                     ___fltol:
  2127                           	callstack 28
  2128   001B22  3444               	rlcf	(___fltol@f1+2)^0,w,c
  2129   001B24  3445               	rlcf	(___fltol@f1+3)^0,w,c
  2130   001B26  6E4B               	movwf	___fltol@exp1^0,c
  2131   001B28  504B               	movf	___fltol@exp1^0,w,c
  2132   001B2A  A4D8               	btfss	status,2,c
  2133   001B2C  EF9A  F00D         	goto	u2831
  2134   001B30  EF9C  F00D         	goto	u2830
  2135   001B34                     u2831:
  2136   001B34  EFA6  F00D         	goto	l2333
  2137   001B38                     u2830:
  2138   001B38                     l2329:
  2139   001B38  0E00               	movlw	0
  2140   001B3A  6E42               	movwf	?___fltol^0,c
  2141   001B3C  0E00               	movlw	0
  2142   001B3E  6E43               	movwf	(?___fltol+1)^0,c
  2143   001B40  0E00               	movlw	0
  2144   001B42  6E44               	movwf	(?___fltol+2)^0,c
  2145   001B44  0E00               	movlw	0
  2146   001B46  6E45               	movwf	(?___fltol+3)^0,c
  2147   001B48  EF13  F00E         	goto	l451
  2148   001B4C                     l2333:
  2149   001B4C  C042  F046         	movff	___fltol@f1,??___fltol
  2150   001B50  C043  F047         	movff	___fltol@f1+1,??___fltol+1
  2151   001B54  C044  F048         	movff	___fltol@f1+2,??___fltol+2
  2152   001B58  C045  F049         	movff	___fltol@f1+3,??___fltol+3
  2153   001B5C  0E20               	movlw	32
  2154   001B5E  EFB6  F00D         	goto	u2840
  2155   001B62                     u2845:
  2156   001B62  90D8               	bcf	status,0,c
  2157   001B64  3249               	rrcf	(??___fltol+3)^0,f,c
  2158   001B66  3248               	rrcf	(??___fltol+2)^0,f,c
  2159   001B68  3247               	rrcf	(??___fltol+1)^0,f,c
  2160   001B6A  3246               	rrcf	??___fltol^0,f,c
  2161   001B6C                     u2840:
  2162   001B6C  2EE8               	decfsz	wreg,f,c
  2163   001B6E  EFB1  F00D         	goto	u2845
  2164   001B72  5046               	movf	??___fltol^0,w,c
  2165   001B74  6E4A               	movwf	___fltol@sign1^0,c
  2166   001B76  8E44               	bsf	(___fltol@f1+2)^0,7,c
  2167   001B78  0EFF               	movlw	255
  2168   001B7A  1642               	andwf	___fltol@f1^0,f,c
  2169   001B7C  0EFF               	movlw	255
  2170   001B7E  1643               	andwf	(___fltol@f1+1)^0,f,c
  2171   001B80  0EFF               	movlw	255
  2172   001B82  1644               	andwf	(___fltol@f1+2)^0,f,c
  2173   001B84  0E00               	movlw	0
  2174   001B86  1645               	andwf	(___fltol@f1+3)^0,f,c
  2175   001B88  0E96               	movlw	150
  2176   001B8A  5E4B               	subwf	___fltol@exp1^0,f,c
  2177   001B8C  BE4B               	btfsc	___fltol@exp1^0,7,c
  2178   001B8E  EFCD  F00D         	goto	u2850
  2179   001B92  EFCB  F00D         	goto	u2851
  2180   001B96                     u2851:
  2181   001B96  EFE3  F00D         	goto	l2353
  2182   001B9A                     u2850:
  2183   001B9A  504B               	movf	___fltol@exp1^0,w,c
  2184   001B9C  0A80               	xorlw	128
  2185   001B9E  0F97               	addlw	151
  2186   001BA0  B0D8               	btfsc	status,0,c
  2187   001BA2  EFD5  F00D         	goto	u2861
  2188   001BA6  EFD7  F00D         	goto	u2860
  2189   001BAA                     u2861:
  2190   001BAA  EFD9  F00D         	goto	l2349
  2191   001BAE                     u2860:
  2192   001BAE  EF9C  F00D         	goto	l2329
  2193   001BB2                     l2349:
  2194   001BB2  90D8               	bcf	status,0,c
  2195   001BB4  3245               	rrcf	(___fltol@f1+3)^0,f,c
  2196   001BB6  3244               	rrcf	(___fltol@f1+2)^0,f,c
  2197   001BB8  3243               	rrcf	(___fltol@f1+1)^0,f,c
  2198   001BBA  3242               	rrcf	___fltol@f1^0,f,c
  2199   001BBC  3E4B               	incfsz	___fltol@exp1^0,f,c
  2200   001BBE  EFD9  F00D         	goto	l2349
  2201   001BC2  EFFB  F00D         	goto	l2363
  2202   001BC6                     l2353:
  2203   001BC6  0E1F               	movlw	31
  2204   001BC8  644B               	cpfsgt	___fltol@exp1^0,c
  2205   001BCA  EFE9  F00D         	goto	u2871
  2206   001BCE  EFEB  F00D         	goto	u2870
  2207   001BD2                     u2871:
  2208   001BD2  EFF3  F00D         	goto	l2361
  2209   001BD6                     u2870:
  2210   001BD6  EF9C  F00D         	goto	l2329
  2211   001BDA                     l2359:
  2212   001BDA  90D8               	bcf	status,0,c
  2213   001BDC  3642               	rlcf	___fltol@f1^0,f,c
  2214   001BDE  3643               	rlcf	(___fltol@f1+1)^0,f,c
  2215   001BE0  3644               	rlcf	(___fltol@f1+2)^0,f,c
  2216   001BE2  3645               	rlcf	(___fltol@f1+3)^0,f,c
  2217   001BE4  064B               	decf	___fltol@exp1^0,f,c
  2218   001BE6                     l2361:
  2219   001BE6  504B               	movf	___fltol@exp1^0,w,c
  2220   001BE8  A4D8               	btfss	status,2,c
  2221   001BEA  EFF9  F00D         	goto	u2881
  2222   001BEE  EFFB  F00D         	goto	u2880
  2223   001BF2                     u2881:
  2224   001BF2  EFED  F00D         	goto	l2359
  2225   001BF6                     u2880:
  2226   001BF6                     l2363:
  2227   001BF6  504A               	movf	___fltol@sign1^0,w,c
  2228   001BF8  B4D8               	btfsc	status,2,c
  2229   001BFA  EF01  F00E         	goto	u2891
  2230   001BFE  EF03  F00E         	goto	u2890
  2231   001C02                     u2891:
  2232   001C02  EF0B  F00E         	goto	l2367
  2233   001C06                     u2890:
  2234   001C06  1E45               	comf	(___fltol@f1+3)^0,f,c
  2235   001C08  1E44               	comf	(___fltol@f1+2)^0,f,c
  2236   001C0A  1E43               	comf	(___fltol@f1+1)^0,f,c
  2237   001C0C  6C42               	negf	___fltol@f1^0,c
  2238   001C0E  0E00               	movlw	0
  2239   001C10  2243               	addwfc	(___fltol@f1+1)^0,f,c
  2240   001C12  2244               	addwfc	(___fltol@f1+2)^0,f,c
  2241   001C14  2245               	addwfc	(___fltol@f1+3)^0,f,c
  2242   001C16                     l2367:
  2243   001C16  C042  F042         	movff	___fltol@f1,?___fltol
  2244   001C1A  C043  F043         	movff	___fltol@f1+1,?___fltol+1
  2245   001C1E  C044  F044         	movff	___fltol@f1+2,?___fltol+2
  2246   001C22  C045  F045         	movff	___fltol@f1+3,?___fltol+3
  2247   001C26                     l451:
  2248   001C26  0012               	return		;funcret
  2249   001C28                     __end_of___fltol:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function ___flmul *****************
  2253 ;; Defined at:
  2254 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  b               4   40[COMRAM] long 
  2257 ;;  a               4   44[COMRAM] long 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  prod            4   59[COMRAM] struct .
  2260 ;;  grs             4   53[COMRAM] unsigned long 
  2261 ;;  temp            2   63[COMRAM] struct .
  2262 ;;  bexp            1   58[COMRAM] unsigned char 
  2263 ;;  aexp            1   57[COMRAM] unsigned char 
  2264 ;;  sign            1   52[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  4   40[COMRAM] unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, prodl, prodh
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2274 ;;      Params:         8       0       0       0
  2275 ;;      Locals:        13       0       0       0
  2276 ;;      Temps:          4       0       0       0
  2277 ;;      Totals:        25       0       0       0
  2278 ;;Total ram usage:       25 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_setServoHighTime
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text4
  2289   000CAA                     __ptext4:
  2290                           	callstack 0
  2291   000CAA                     ___flmul:
  2292                           	callstack 28
  2293   000CAA  502C               	movf	(___flmul@b+3)^0,w,c
  2294   000CAC  0B80               	andlw	128
  2295   000CAE  6E35               	movwf	___flmul@sign^0,c
  2296   000CB0  502C               	movf	(___flmul@b+3)^0,w,c
  2297   000CB2  242C               	addwf	(___flmul@b+3)^0,w,c
  2298   000CB4  6E3B               	movwf	___flmul@bexp^0,c
  2299   000CB6  AE2B               	btfss	(___flmul@b+2)^0,7,c
  2300   000CB8  EF60  F006         	goto	u2641
  2301   000CBC  EF62  F006         	goto	u2640
  2302   000CC0                     u2641:
  2303   000CC0  EF63  F006         	goto	l2205
  2304   000CC4                     u2640:
  2305   000CC4  803B               	bsf	___flmul@bexp^0,0,c
  2306   000CC6                     l2205:
  2307   000CC6  503B               	movf	___flmul@bexp^0,w,c
  2308   000CC8  B4D8               	btfsc	status,2,c
  2309   000CCA  EF69  F006         	goto	u2651
  2310   000CCE  EF6B  F006         	goto	u2650
  2311   000CD2                     u2651:
  2312   000CD2  EF7E  F006         	goto	l2213
  2313   000CD6                     u2650:
  2314   000CD6  283B               	incf	___flmul@bexp^0,w,c
  2315   000CD8  A4D8               	btfss	status,2,c
  2316   000CDA  EF71  F006         	goto	u2661
  2317   000CDE  EF73  F006         	goto	u2660
  2318   000CE2                     u2661:
  2319   000CE2  EF7B  F006         	goto	l2211
  2320   000CE6                     u2660:
  2321   000CE6  0E00               	movlw	0
  2322   000CE8  6E29               	movwf	___flmul@b^0,c
  2323   000CEA  0E00               	movlw	0
  2324   000CEC  6E2A               	movwf	(___flmul@b+1)^0,c
  2325   000CEE  0E00               	movlw	0
  2326   000CF0  6E2B               	movwf	(___flmul@b+2)^0,c
  2327   000CF2  0E00               	movlw	0
  2328   000CF4  6E2C               	movwf	(___flmul@b+3)^0,c
  2329   000CF6                     l2211:
  2330   000CF6  8E2B               	bsf	(___flmul@b+2)^0,7,c
  2331   000CF8  EF86  F006         	goto	l2215
  2332   000CFC                     l2213:
  2333   000CFC  0E00               	movlw	0
  2334   000CFE  6E29               	movwf	___flmul@b^0,c
  2335   000D00  0E00               	movlw	0
  2336   000D02  6E2A               	movwf	(___flmul@b+1)^0,c
  2337   000D04  0E00               	movlw	0
  2338   000D06  6E2B               	movwf	(___flmul@b+2)^0,c
  2339   000D08  0E00               	movlw	0
  2340   000D0A  6E2C               	movwf	(___flmul@b+3)^0,c
  2341   000D0C                     l2215:
  2342   000D0C  5030               	movf	(___flmul@a+3)^0,w,c
  2343   000D0E  0B80               	andlw	128
  2344   000D10  1A35               	xorwf	___flmul@sign^0,f,c
  2345   000D12  5030               	movf	(___flmul@a+3)^0,w,c
  2346   000D14  2430               	addwf	(___flmul@a+3)^0,w,c
  2347   000D16  6E3A               	movwf	___flmul@aexp^0,c
  2348   000D18  AE2F               	btfss	(___flmul@a+2)^0,7,c
  2349   000D1A  EF91  F006         	goto	u2671
  2350   000D1E  EF93  F006         	goto	u2670
  2351   000D22                     u2671:
  2352   000D22  EF94  F006         	goto	l2223
  2353   000D26                     u2670:
  2354   000D26  803A               	bsf	___flmul@aexp^0,0,c
  2355   000D28                     l2223:
  2356   000D28  503A               	movf	___flmul@aexp^0,w,c
  2357   000D2A  B4D8               	btfsc	status,2,c
  2358   000D2C  EF9A  F006         	goto	u2681
  2359   000D30  EF9C  F006         	goto	u2680
  2360   000D34                     u2681:
  2361   000D34  EFAF  F006         	goto	l2231
  2362   000D38                     u2680:
  2363   000D38  283A               	incf	___flmul@aexp^0,w,c
  2364   000D3A  A4D8               	btfss	status,2,c
  2365   000D3C  EFA2  F006         	goto	u2691
  2366   000D40  EFA4  F006         	goto	u2690
  2367   000D44                     u2691:
  2368   000D44  EFAC  F006         	goto	l2229
  2369   000D48                     u2690:
  2370   000D48  0E00               	movlw	0
  2371   000D4A  6E2D               	movwf	___flmul@a^0,c
  2372   000D4C  0E00               	movlw	0
  2373   000D4E  6E2E               	movwf	(___flmul@a+1)^0,c
  2374   000D50  0E00               	movlw	0
  2375   000D52  6E2F               	movwf	(___flmul@a+2)^0,c
  2376   000D54  0E00               	movlw	0
  2377   000D56  6E30               	movwf	(___flmul@a+3)^0,c
  2378   000D58                     l2229:
  2379   000D58  8E2F               	bsf	(___flmul@a+2)^0,7,c
  2380   000D5A  EFB7  F006         	goto	l768
  2381   000D5E                     l2231:
  2382   000D5E  0E00               	movlw	0
  2383   000D60  6E2D               	movwf	___flmul@a^0,c
  2384   000D62  0E00               	movlw	0
  2385   000D64  6E2E               	movwf	(___flmul@a+1)^0,c
  2386   000D66  0E00               	movlw	0
  2387   000D68  6E2F               	movwf	(___flmul@a+2)^0,c
  2388   000D6A  0E00               	movlw	0
  2389   000D6C  6E30               	movwf	(___flmul@a+3)^0,c
  2390   000D6E                     l768:
  2391   000D6E  503A               	movf	___flmul@aexp^0,w,c
  2392   000D70  B4D8               	btfsc	status,2,c
  2393   000D72  EFBD  F006         	goto	u2701
  2394   000D76  EFBF  F006         	goto	u2700
  2395   000D7A                     u2701:
  2396   000D7A  EFC7  F006         	goto	l2235
  2397   000D7E                     u2700:
  2398   000D7E  503B               	movf	___flmul@bexp^0,w,c
  2399   000D80  A4D8               	btfss	status,2,c
  2400   000D82  EFC5  F006         	goto	u2711
  2401   000D86  EFC7  F006         	goto	u2710
  2402   000D8A                     u2711:
  2403   000D8A  EFD1  F006         	goto	l2239
  2404   000D8E                     u2710:
  2405   000D8E                     l2235:
  2406   000D8E  0E00               	movlw	0
  2407   000D90  6E29               	movwf	?___flmul^0,c
  2408   000D92  0E00               	movlw	0
  2409   000D94  6E2A               	movwf	(?___flmul+1)^0,c
  2410   000D96  0E00               	movlw	0
  2411   000D98  6E2B               	movwf	(?___flmul+2)^0,c
  2412   000D9A  0E00               	movlw	0
  2413   000D9C  6E2C               	movwf	(?___flmul+3)^0,c
  2414   000D9E  EF67  F008         	goto	l772
  2415   000DA2                     l2239:
  2416   000DA2  502F               	movf	(___flmul@a+2)^0,w,c
  2417   000DA4  0229               	mulwf	___flmul@b^0,c
  2418   000DA6  CFF3 F040          	movff	prodl,___flmul@temp
  2419   000DAA  CFF4 F041          	movff	prodh,___flmul@temp+1
  2420   000DAE  5040               	movf	___flmul@temp^0,w,c
  2421   000DB0  6E36               	movwf	___flmul@grs^0,c
  2422   000DB2  6A37               	clrf	(___flmul@grs+1)^0,c
  2423   000DB4  6A38               	clrf	(___flmul@grs+2)^0,c
  2424   000DB6  6A39               	clrf	(___flmul@grs+3)^0,c
  2425   000DB8  5041               	movf	(___flmul@temp+1)^0,w,c
  2426   000DBA  6E3C               	movwf	___flmul@prod^0,c
  2427   000DBC  6A3D               	clrf	(___flmul@prod+1)^0,c
  2428   000DBE  6A3E               	clrf	(___flmul@prod+2)^0,c
  2429   000DC0  6A3F               	clrf	(___flmul@prod+3)^0,c
  2430   000DC2  502E               	movf	(___flmul@a+1)^0,w,c
  2431   000DC4  022A               	mulwf	(___flmul@b+1)^0,c
  2432   000DC6  CFF3 F040          	movff	prodl,___flmul@temp
  2433   000DCA  CFF4 F041          	movff	prodh,___flmul@temp+1
  2434   000DCE  5040               	movf	___flmul@temp^0,w,c
  2435   000DD0  2636               	addwf	___flmul@grs^0,f,c
  2436   000DD2  0E00               	movlw	0
  2437   000DD4  2237               	addwfc	(___flmul@grs+1)^0,f,c
  2438   000DD6  2238               	addwfc	(___flmul@grs+2)^0,f,c
  2439   000DD8  2239               	addwfc	(___flmul@grs+3)^0,f,c
  2440   000DDA  5041               	movf	(___flmul@temp+1)^0,w,c
  2441   000DDC  263C               	addwf	___flmul@prod^0,f,c
  2442   000DDE  0E00               	movlw	0
  2443   000DE0  223D               	addwfc	(___flmul@prod+1)^0,f,c
  2444   000DE2  223E               	addwfc	(___flmul@prod+2)^0,f,c
  2445   000DE4  223F               	addwfc	(___flmul@prod+3)^0,f,c
  2446   000DE6  502D               	movf	___flmul@a^0,w,c
  2447   000DE8  022B               	mulwf	(___flmul@b+2)^0,c
  2448   000DEA  CFF3 F040          	movff	prodl,___flmul@temp
  2449   000DEE  CFF4 F041          	movff	prodh,___flmul@temp+1
  2450   000DF2  5040               	movf	___flmul@temp^0,w,c
  2451   000DF4  2636               	addwf	___flmul@grs^0,f,c
  2452   000DF6  0E00               	movlw	0
  2453   000DF8  2237               	addwfc	(___flmul@grs+1)^0,f,c
  2454   000DFA  2238               	addwfc	(___flmul@grs+2)^0,f,c
  2455   000DFC  2239               	addwfc	(___flmul@grs+3)^0,f,c
  2456   000DFE  5041               	movf	(___flmul@temp+1)^0,w,c
  2457   000E00  263C               	addwf	___flmul@prod^0,f,c
  2458   000E02  0E00               	movlw	0
  2459   000E04  223D               	addwfc	(___flmul@prod+1)^0,f,c
  2460   000E06  223E               	addwfc	(___flmul@prod+2)^0,f,c
  2461   000E08  223F               	addwfc	(___flmul@prod+3)^0,f,c
  2462   000E0A  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  2463   000E0E  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  2464   000E12  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  2465   000E16  6A36               	clrf	___flmul@grs^0,c
  2466   000E18  502D               	movf	___flmul@a^0,w,c
  2467   000E1A  022A               	mulwf	(___flmul@b+1)^0,c
  2468   000E1C  CFF3 F040          	movff	prodl,___flmul@temp
  2469   000E20  CFF4 F041          	movff	prodh,___flmul@temp+1
  2470   000E24  5040               	movf	___flmul@temp^0,w,c
  2471   000E26  2636               	addwf	___flmul@grs^0,f,c
  2472   000E28  5041               	movf	(___flmul@temp+1)^0,w,c
  2473   000E2A  2237               	addwfc	(___flmul@grs+1)^0,f,c
  2474   000E2C  0E00               	movlw	0
  2475   000E2E  2238               	addwfc	(___flmul@grs+2)^0,f,c
  2476   000E30  0E00               	movlw	0
  2477   000E32  2239               	addwfc	(___flmul@grs+3)^0,f,c
  2478   000E34  502E               	movf	(___flmul@a+1)^0,w,c
  2479   000E36  0229               	mulwf	___flmul@b^0,c
  2480   000E38  CFF3 F040          	movff	prodl,___flmul@temp
  2481   000E3C  CFF4 F041          	movff	prodh,___flmul@temp+1
  2482   000E40  5040               	movf	___flmul@temp^0,w,c
  2483   000E42  2636               	addwf	___flmul@grs^0,f,c
  2484   000E44  5041               	movf	(___flmul@temp+1)^0,w,c
  2485   000E46  2237               	addwfc	(___flmul@grs+1)^0,f,c
  2486   000E48  0E00               	movlw	0
  2487   000E4A  2238               	addwfc	(___flmul@grs+2)^0,f,c
  2488   000E4C  0E00               	movlw	0
  2489   000E4E  2239               	addwfc	(___flmul@grs+3)^0,f,c
  2490   000E50  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  2491   000E54  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  2492   000E58  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  2493   000E5C  6A36               	clrf	___flmul@grs^0,c
  2494   000E5E  502D               	movf	___flmul@a^0,w,c
  2495   000E60  0229               	mulwf	___flmul@b^0,c
  2496   000E62  CFF3 F040          	movff	prodl,___flmul@temp
  2497   000E66  CFF4 F041          	movff	prodh,___flmul@temp+1
  2498   000E6A  5040               	movf	___flmul@temp^0,w,c
  2499   000E6C  2636               	addwf	___flmul@grs^0,f,c
  2500   000E6E  5041               	movf	(___flmul@temp+1)^0,w,c
  2501   000E70  2237               	addwfc	(___flmul@grs+1)^0,f,c
  2502   000E72  0E00               	movlw	0
  2503   000E74  2238               	addwfc	(___flmul@grs+2)^0,f,c
  2504   000E76  0E00               	movlw	0
  2505   000E78  2239               	addwfc	(___flmul@grs+3)^0,f,c
  2506   000E7A  502F               	movf	(___flmul@a+2)^0,w,c
  2507   000E7C  022A               	mulwf	(___flmul@b+1)^0,c
  2508   000E7E  CFF3 F040          	movff	prodl,___flmul@temp
  2509   000E82  CFF4 F041          	movff	prodh,___flmul@temp+1
  2510   000E86  5040               	movf	___flmul@temp^0,w,c
  2511   000E88  263C               	addwf	___flmul@prod^0,f,c
  2512   000E8A  5041               	movf	(___flmul@temp+1)^0,w,c
  2513   000E8C  223D               	addwfc	(___flmul@prod+1)^0,f,c
  2514   000E8E  0E00               	movlw	0
  2515   000E90  223E               	addwfc	(___flmul@prod+2)^0,f,c
  2516   000E92  0E00               	movlw	0
  2517   000E94  223F               	addwfc	(___flmul@prod+3)^0,f,c
  2518   000E96  502E               	movf	(___flmul@a+1)^0,w,c
  2519   000E98  022B               	mulwf	(___flmul@b+2)^0,c
  2520   000E9A  CFF3 F040          	movff	prodl,___flmul@temp
  2521   000E9E  CFF4 F041          	movff	prodh,___flmul@temp+1
  2522   000EA2  5040               	movf	___flmul@temp^0,w,c
  2523   000EA4  263C               	addwf	___flmul@prod^0,f,c
  2524   000EA6  5041               	movf	(___flmul@temp+1)^0,w,c
  2525   000EA8  223D               	addwfc	(___flmul@prod+1)^0,f,c
  2526   000EAA  0E00               	movlw	0
  2527   000EAC  223E               	addwfc	(___flmul@prod+2)^0,f,c
  2528   000EAE  0E00               	movlw	0
  2529   000EB0  223F               	addwfc	(___flmul@prod+3)^0,f,c
  2530   000EB2  502F               	movf	(___flmul@a+2)^0,w,c
  2531   000EB4  022B               	mulwf	(___flmul@b+2)^0,c
  2532   000EB6  CFF3 F040          	movff	prodl,___flmul@temp
  2533   000EBA  CFF4 F041          	movff	prodh,___flmul@temp+1
  2534   000EBE  5040               	movf	___flmul@temp^0,w,c
  2535   000EC0  6E31               	movwf	??___flmul^0,c
  2536   000EC2  5041               	movf	(___flmul@temp+1)^0,w,c
  2537   000EC4  6E32               	movwf	(??___flmul+1)^0,c
  2538   000EC6  6A33               	clrf	(??___flmul+2)^0,c
  2539   000EC8  6A34               	clrf	(??___flmul+3)^0,c
  2540   000ECA  C033  F034         	movff	??___flmul+2,??___flmul+3
  2541   000ECE  C032  F033         	movff	??___flmul+1,??___flmul+2
  2542   000ED2  C031  F032         	movff	??___flmul,??___flmul+1
  2543   000ED6  6A31               	clrf	??___flmul^0,c
  2544   000ED8  5031               	movf	??___flmul^0,w,c
  2545   000EDA  263C               	addwf	___flmul@prod^0,f,c
  2546   000EDC  5032               	movf	(??___flmul+1)^0,w,c
  2547   000EDE  223D               	addwfc	(___flmul@prod+1)^0,f,c
  2548   000EE0  5033               	movf	(??___flmul+2)^0,w,c
  2549   000EE2  223E               	addwfc	(___flmul@prod+2)^0,f,c
  2550   000EE4  5034               	movf	(??___flmul+3)^0,w,c
  2551   000EE6  223F               	addwfc	(___flmul@prod+3)^0,f,c
  2552   000EE8  C036  F031         	movff	___flmul@grs,??___flmul
  2553   000EEC  C037  F032         	movff	___flmul@grs+1,??___flmul+1
  2554   000EF0  C038  F033         	movff	___flmul@grs+2,??___flmul+2
  2555   000EF4  C039  F034         	movff	___flmul@grs+3,??___flmul+3
  2556   000EF8  0E19               	movlw	25
  2557   000EFA  EF84  F007         	goto	u2720
  2558   000EFE                     u2725:
  2559   000EFE  90D8               	bcf	status,0,c
  2560   000F00  3234               	rrcf	(??___flmul+3)^0,f,c
  2561   000F02  3233               	rrcf	(??___flmul+2)^0,f,c
  2562   000F04  3232               	rrcf	(??___flmul+1)^0,f,c
  2563   000F06  3231               	rrcf	??___flmul^0,f,c
  2564   000F08                     u2720:
  2565   000F08  2EE8               	decfsz	wreg,f,c
  2566   000F0A  EF7F  F007         	goto	u2725
  2567   000F0E  5031               	movf	??___flmul^0,w,c
  2568   000F10  263C               	addwf	___flmul@prod^0,f,c
  2569   000F12  5032               	movf	(??___flmul+1)^0,w,c
  2570   000F14  223D               	addwfc	(___flmul@prod+1)^0,f,c
  2571   000F16  5033               	movf	(??___flmul+2)^0,w,c
  2572   000F18  223E               	addwfc	(___flmul@prod+2)^0,f,c
  2573   000F1A  5034               	movf	(??___flmul+3)^0,w,c
  2574   000F1C  223F               	addwfc	(___flmul@prod+3)^0,f,c
  2575   000F1E  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  2576   000F22  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  2577   000F26  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  2578   000F2A  6A36               	clrf	___flmul@grs^0,c
  2579   000F2C  503A               	movf	___flmul@aexp^0,w,c
  2580   000F2E  C03B  F031         	movff	___flmul@bexp,??___flmul
  2581   000F32  6A32               	clrf	(??___flmul+1)^0,c
  2582   000F34  2631               	addwf	??___flmul^0,f,c
  2583   000F36  0E00               	movlw	0
  2584   000F38  2232               	addwfc	(??___flmul+1)^0,f,c
  2585   000F3A  0E82               	movlw	130
  2586   000F3C  2431               	addwf	??___flmul^0,w,c
  2587   000F3E  6E40               	movwf	___flmul@temp^0,c
  2588   000F40  0EFF               	movlw	255
  2589   000F42  2032               	addwfc	(??___flmul+1)^0,w,c
  2590   000F44  6E41               	movwf	(___flmul@temp+1)^0,c
  2591   000F46  EFBA  F007         	goto	l2287
  2592   000F4A                     l2281:
  2593   000F4A  90D8               	bcf	status,0,c
  2594   000F4C  363C               	rlcf	___flmul@prod^0,f,c
  2595   000F4E  363D               	rlcf	(___flmul@prod+1)^0,f,c
  2596   000F50  363E               	rlcf	(___flmul@prod+2)^0,f,c
  2597   000F52  363F               	rlcf	(___flmul@prod+3)^0,f,c
  2598   000F54  AE39               	btfss	(___flmul@grs+3)^0,7,c
  2599   000F56  EFAF  F007         	goto	u2731
  2600   000F5A  EFB1  F007         	goto	u2730
  2601   000F5E                     u2731:
  2602   000F5E  EFB2  F007         	goto	l775
  2603   000F62                     u2730:
  2604   000F62  803C               	bsf	___flmul@prod^0,0,c
  2605   000F64                     l775:
  2606   000F64  90D8               	bcf	status,0,c
  2607   000F66  3636               	rlcf	___flmul@grs^0,f,c
  2608   000F68  3637               	rlcf	(___flmul@grs+1)^0,f,c
  2609   000F6A  3638               	rlcf	(___flmul@grs+2)^0,f,c
  2610   000F6C  3639               	rlcf	(___flmul@grs+3)^0,f,c
  2611   000F6E  0640               	decf	___flmul@temp^0,f,c
  2612   000F70  A0D8               	btfss	status,0,c
  2613   000F72  0641               	decf	(___flmul@temp+1)^0,f,c
  2614   000F74                     l2287:
  2615   000F74  AE3E               	btfss	(___flmul@prod+2)^0,7,c
  2616   000F76  EFBF  F007         	goto	u2741
  2617   000F7A  EFC1  F007         	goto	u2740
  2618   000F7E                     u2741:
  2619   000F7E  EFA5  F007         	goto	l2281
  2620   000F82                     u2740:
  2621   000F82  6A3A               	clrf	___flmul@aexp^0,c
  2622   000F84  AE39               	btfss	(___flmul@grs+3)^0,7,c
  2623   000F86  EFC7  F007         	goto	u2751
  2624   000F8A  EFC9  F007         	goto	u2750
  2625   000F8E                     u2751:
  2626   000F8E  EFED  F007         	goto	l777
  2627   000F92                     u2750:
  2628   000F92  0EFF               	movlw	255
  2629   000F94  1436               	andwf	___flmul@grs^0,w,c
  2630   000F96  6E31               	movwf	??___flmul^0,c
  2631   000F98  0EFF               	movlw	255
  2632   000F9A  1437               	andwf	(___flmul@grs+1)^0,w,c
  2633   000F9C  6E32               	movwf	(??___flmul+1)^0,c
  2634   000F9E  0EFF               	movlw	255
  2635   000FA0  1438               	andwf	(___flmul@grs+2)^0,w,c
  2636   000FA2  6E33               	movwf	(??___flmul+2)^0,c
  2637   000FA4  0E7F               	movlw	127
  2638   000FA6  1439               	andwf	(___flmul@grs+3)^0,w,c
  2639   000FA8  6E34               	movwf	(??___flmul+3)^0,c
  2640   000FAA  5031               	movf	??___flmul^0,w,c
  2641   000FAC  1032               	iorwf	(??___flmul+1)^0,w,c
  2642   000FAE  1033               	iorwf	(??___flmul+2)^0,w,c
  2643   000FB0  1034               	iorwf	(??___flmul+3)^0,w,c
  2644   000FB2  B4D8               	btfsc	status,2,c
  2645   000FB4  EFDE  F007         	goto	u2761
  2646   000FB8  EFE0  F007         	goto	u2760
  2647   000FBC                     u2761:
  2648   000FBC  EFE4  F007         	goto	l778
  2649   000FC0                     u2760:
  2650   000FC0                     l2291:
  2651   000FC0  0E01               	movlw	1
  2652   000FC2  6E3A               	movwf	___flmul@aexp^0,c
  2653   000FC4  EFED  F007         	goto	l777
  2654   000FC8                     l778:
  2655   000FC8  A03C               	btfss	___flmul@prod^0,0,c
  2656   000FCA  EFE9  F007         	goto	u2771
  2657   000FCE  EFEB  F007         	goto	u2770
  2658   000FD2                     u2771:
  2659   000FD2  EFED  F007         	goto	l777
  2660   000FD6                     u2770:
  2661   000FD6  EFE0  F007         	goto	l2291
  2662   000FDA                     l777:
  2663   000FDA  503A               	movf	___flmul@aexp^0,w,c
  2664   000FDC  B4D8               	btfsc	status,2,c
  2665   000FDE  EFF3  F007         	goto	u2781
  2666   000FE2  EFF5  F007         	goto	u2780
  2667   000FE6                     u2781:
  2668   000FE6  EF19  F008         	goto	l2303
  2669   000FEA                     u2780:
  2670   000FEA  0E01               	movlw	1
  2671   000FEC  263C               	addwf	___flmul@prod^0,f,c
  2672   000FEE  0E00               	movlw	0
  2673   000FF0  223D               	addwfc	(___flmul@prod+1)^0,f,c
  2674   000FF2  223E               	addwfc	(___flmul@prod+2)^0,f,c
  2675   000FF4  223F               	addwfc	(___flmul@prod+3)^0,f,c
  2676   000FF6  A03F               	btfss	(___flmul@prod+3)^0,0,c
  2677   000FF8  EF00  F008         	goto	u2791
  2678   000FFC  EF02  F008         	goto	u2790
  2679   001000                     u2791:
  2680   001000  EF19  F008         	goto	l2303
  2681   001004                     u2790:
  2682   001004  C03C  F031         	movff	___flmul@prod,??___flmul
  2683   001008  C03D  F032         	movff	___flmul@prod+1,??___flmul+1
  2684   00100C  C03E  F033         	movff	___flmul@prod+2,??___flmul+2
  2685   001010  C03F  F034         	movff	___flmul@prod+3,??___flmul+3
  2686   001014  3434               	rlcf	(??___flmul+3)^0,w,c
  2687   001016  3234               	rrcf	(??___flmul+3)^0,f,c
  2688   001018  3233               	rrcf	(??___flmul+2)^0,f,c
  2689   00101A  3232               	rrcf	(??___flmul+1)^0,f,c
  2690   00101C  3231               	rrcf	??___flmul^0,f,c
  2691   00101E  C031  F03C         	movff	??___flmul,___flmul@prod
  2692   001022  C032  F03D         	movff	??___flmul+1,___flmul@prod+1
  2693   001026  C033  F03E         	movff	??___flmul+2,___flmul@prod+2
  2694   00102A  C034  F03F         	movff	??___flmul+3,___flmul@prod+3
  2695   00102E  4A40               	infsnz	___flmul@temp^0,f,c
  2696   001030  2A41               	incf	(___flmul@temp+1)^0,f,c
  2697   001032                     l2303:
  2698   001032  BE41               	btfsc	(___flmul@temp+1)^0,7,c
  2699   001034  EF24  F008         	goto	u2801
  2700   001038  5041               	movf	(___flmul@temp+1)^0,w,c
  2701   00103A  E108               	bnz	u2800
  2702   00103C  2840               	incf	___flmul@temp^0,w,c
  2703   00103E  A0D8               	btfss	status,0,c
  2704   001040  EF24  F008         	goto	u2801
  2705   001044  EF26  F008         	goto	u2800
  2706   001048                     u2801:
  2707   001048  EF30  F008         	goto	l2307
  2708   00104C                     u2800:
  2709   00104C  0E00               	movlw	0
  2710   00104E  6E3C               	movwf	___flmul@prod^0,c
  2711   001050  0E00               	movlw	0
  2712   001052  6E3D               	movwf	(___flmul@prod+1)^0,c
  2713   001054  0E80               	movlw	128
  2714   001056  6E3E               	movwf	(___flmul@prod+2)^0,c
  2715   001058  0E7F               	movlw	127
  2716   00105A  6E3F               	movwf	(___flmul@prod+3)^0,c
  2717   00105C  EF5D  F008         	goto	l2321
  2718   001060                     l2307:
  2719   001060  BE41               	btfsc	(___flmul@temp+1)^0,7,c
  2720   001062  EF3D  F008         	goto	u2810
  2721   001066  5041               	movf	(___flmul@temp+1)^0,w,c
  2722   001068  E106               	bnz	u2811
  2723   00106A  0440               	decf	___flmul@temp^0,w,c
  2724   00106C  B0D8               	btfsc	status,0,c
  2725   00106E  EF3B  F008         	goto	u2811
  2726   001072  EF3D  F008         	goto	u2810
  2727   001076                     u2811:
  2728   001076  EF48  F008         	goto	l785
  2729   00107A                     u2810:
  2730   00107A  0E00               	movlw	0
  2731   00107C  6E3C               	movwf	___flmul@prod^0,c
  2732   00107E  0E00               	movlw	0
  2733   001080  6E3D               	movwf	(___flmul@prod+1)^0,c
  2734   001082  0E00               	movlw	0
  2735   001084  6E3E               	movwf	(___flmul@prod+2)^0,c
  2736   001086  0E00               	movlw	0
  2737   001088  6E3F               	movwf	(___flmul@prod+3)^0,c
  2738   00108A  6A35               	clrf	___flmul@sign^0,c
  2739   00108C  EF5D  F008         	goto	l2321
  2740   001090                     l785:
  2741   001090  C040  F03B         	movff	___flmul@temp,___flmul@bexp
  2742   001094  0EFF               	movlw	255
  2743   001096  163C               	andwf	___flmul@prod^0,f,c
  2744   001098  0EFF               	movlw	255
  2745   00109A  163D               	andwf	(___flmul@prod+1)^0,f,c
  2746   00109C  0E7F               	movlw	127
  2747   00109E  163E               	andwf	(___flmul@prod+2)^0,f,c
  2748   0010A0  0E00               	movlw	0
  2749   0010A2  163F               	andwf	(___flmul@prod+3)^0,f,c
  2750   0010A4  A03B               	btfss	___flmul@bexp^0,0,c
  2751   0010A6  EF57  F008         	goto	u2821
  2752   0010AA  EF59  F008         	goto	u2820
  2753   0010AE                     u2821:
  2754   0010AE  EF5A  F008         	goto	l2319
  2755   0010B2                     u2820:
  2756   0010B2  8E3E               	bsf	(___flmul@prod+2)^0,7,c
  2757   0010B4                     l2319:
  2758   0010B4  90D8               	bcf	status,0,c
  2759   0010B6  303B               	rrcf	___flmul@bexp^0,w,c
  2760   0010B8  6E3F               	movwf	(___flmul@prod+3)^0,c
  2761   0010BA                     l2321:
  2762   0010BA  5035               	movf	___flmul@sign^0,w,c
  2763   0010BC  123F               	iorwf	(___flmul@prod+3)^0,f,c
  2764   0010BE  C03C  F029         	movff	___flmul@prod,?___flmul
  2765   0010C2  C03D  F02A         	movff	___flmul@prod+1,?___flmul+1
  2766   0010C6  C03E  F02B         	movff	___flmul@prod+2,?___flmul+2
  2767   0010CA  C03F  F02C         	movff	___flmul@prod+3,?___flmul+3
  2768   0010CE                     l772:
  2769   0010CE  0012               	return		;funcret
  2770   0010D0                     __end_of___flmul:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function ___fldiv *****************
  2774 ;; Defined at:
  2775 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  b               4   15[COMRAM] unsigned char 
  2778 ;;  a               4   19[COMRAM] unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  grs             4   34[COMRAM] unsigned long 
  2781 ;;  rem             4   27[COMRAM] unsigned long 
  2782 ;;  new_exp         2   32[COMRAM] short 
  2783 ;;  aexp            1   39[COMRAM] unsigned char 
  2784 ;;  bexp            1   38[COMRAM] unsigned char 
  2785 ;;  sign            1   31[COMRAM] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  4   15[COMRAM] unsigned char 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2795 ;;      Params:         8       0       0       0
  2796 ;;      Locals:        13       0       0       0
  2797 ;;      Temps:          4       0       0       0
  2798 ;;      Totals:        25       0       0       0
  2799 ;;Total ram usage:       25 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 1
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_setServoHighTime
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text5
  2810   0010D0                     __ptext5:
  2811                           	callstack 0
  2812   0010D0                     ___fldiv:
  2813                           	callstack 28
  2814   0010D0  5013               	movf	(___fldiv@b+3)^0,w,c
  2815   0010D2  0B80               	andlw	128
  2816   0010D4  6E20               	movwf	___fldiv@sign^0,c
  2817   0010D6  5013               	movf	(___fldiv@b+3)^0,w,c
  2818   0010D8  2413               	addwf	(___fldiv@b+3)^0,w,c
  2819   0010DA  6E27               	movwf	___fldiv@bexp^0,c
  2820   0010DC  AE12               	btfss	(___fldiv@b+2)^0,7,c
  2821   0010DE  EF73  F008         	goto	u2411
  2822   0010E2  EF75  F008         	goto	u2410
  2823   0010E6                     u2411:
  2824   0010E6  EF76  F008         	goto	l2069
  2825   0010EA                     u2410:
  2826   0010EA  8027               	bsf	___fldiv@bexp^0,0,c
  2827   0010EC                     l2069:
  2828   0010EC  5027               	movf	___fldiv@bexp^0,w,c
  2829   0010EE  B4D8               	btfsc	status,2,c
  2830   0010F0  EF7C  F008         	goto	u2421
  2831   0010F4  EF7E  F008         	goto	u2420
  2832   0010F8                     u2421:
  2833   0010F8  EF92  F008         	goto	l2079
  2834   0010FC                     u2420:
  2835   0010FC  2827               	incf	___fldiv@bexp^0,w,c
  2836   0010FE  A4D8               	btfss	status,2,c
  2837   001100  EF84  F008         	goto	u2431
  2838   001104  EF86  F008         	goto	u2430
  2839   001108                     u2431:
  2840   001108  EF8E  F008         	goto	l2075
  2841   00110C                     u2430:
  2842   00110C  0E00               	movlw	0
  2843   00110E  6E10               	movwf	___fldiv@b^0,c
  2844   001110  0E00               	movlw	0
  2845   001112  6E11               	movwf	(___fldiv@b+1)^0,c
  2846   001114  0E00               	movlw	0
  2847   001116  6E12               	movwf	(___fldiv@b+2)^0,c
  2848   001118  0E00               	movlw	0
  2849   00111A  6E13               	movwf	(___fldiv@b+3)^0,c
  2850   00111C                     l2075:
  2851   00111C  8E12               	bsf	(___fldiv@b+2)^0,7,c
  2852   00111E  6A13               	clrf	(___fldiv@b+3)^0,c
  2853   001120  EF9A  F008         	goto	l2081
  2854   001124                     l2079:
  2855   001124  0E00               	movlw	0
  2856   001126  6E10               	movwf	___fldiv@b^0,c
  2857   001128  0E00               	movlw	0
  2858   00112A  6E11               	movwf	(___fldiv@b+1)^0,c
  2859   00112C  0E00               	movlw	0
  2860   00112E  6E12               	movwf	(___fldiv@b+2)^0,c
  2861   001130  0E00               	movlw	0
  2862   001132  6E13               	movwf	(___fldiv@b+3)^0,c
  2863   001134                     l2081:
  2864   001134  5017               	movf	(___fldiv@a+3)^0,w,c
  2865   001136  0B80               	andlw	128
  2866   001138  1A20               	xorwf	___fldiv@sign^0,f,c
  2867   00113A  5017               	movf	(___fldiv@a+3)^0,w,c
  2868   00113C  2417               	addwf	(___fldiv@a+3)^0,w,c
  2869   00113E  6E28               	movwf	___fldiv@aexp^0,c
  2870   001140  AE16               	btfss	(___fldiv@a+2)^0,7,c
  2871   001142  EFA5  F008         	goto	u2441
  2872   001146  EFA7  F008         	goto	u2440
  2873   00114A                     u2441:
  2874   00114A  EFA8  F008         	goto	l2089
  2875   00114E                     u2440:
  2876   00114E  8028               	bsf	___fldiv@aexp^0,0,c
  2877   001150                     l2089:
  2878   001150  5028               	movf	___fldiv@aexp^0,w,c
  2879   001152  B4D8               	btfsc	status,2,c
  2880   001154  EFAE  F008         	goto	u2451
  2881   001158  EFB0  F008         	goto	u2450
  2882   00115C                     u2451:
  2883   00115C  EFC4  F008         	goto	l2099
  2884   001160                     u2450:
  2885   001160  2828               	incf	___fldiv@aexp^0,w,c
  2886   001162  A4D8               	btfss	status,2,c
  2887   001164  EFB6  F008         	goto	u2461
  2888   001168  EFB8  F008         	goto	u2460
  2889   00116C                     u2461:
  2890   00116C  EFC0  F008         	goto	l2095
  2891   001170                     u2460:
  2892   001170  0E00               	movlw	0
  2893   001172  6E14               	movwf	___fldiv@a^0,c
  2894   001174  0E00               	movlw	0
  2895   001176  6E15               	movwf	(___fldiv@a+1)^0,c
  2896   001178  0E00               	movlw	0
  2897   00117A  6E16               	movwf	(___fldiv@a+2)^0,c
  2898   00117C  0E00               	movlw	0
  2899   00117E  6E17               	movwf	(___fldiv@a+3)^0,c
  2900   001180                     l2095:
  2901   001180  8E16               	bsf	(___fldiv@a+2)^0,7,c
  2902   001182  6A17               	clrf	(___fldiv@a+3)^0,c
  2903   001184  EFCC  F008         	goto	l2101
  2904   001188                     l2099:
  2905   001188  0E00               	movlw	0
  2906   00118A  6E14               	movwf	___fldiv@a^0,c
  2907   00118C  0E00               	movlw	0
  2908   00118E  6E15               	movwf	(___fldiv@a+1)^0,c
  2909   001190  0E00               	movlw	0
  2910   001192  6E16               	movwf	(___fldiv@a+2)^0,c
  2911   001194  0E00               	movlw	0
  2912   001196  6E17               	movwf	(___fldiv@a+3)^0,c
  2913   001198                     l2101:
  2914   001198  5014               	movf	___fldiv@a^0,w,c
  2915   00119A  1015               	iorwf	(___fldiv@a+1)^0,w,c
  2916   00119C  1016               	iorwf	(___fldiv@a+2)^0,w,c
  2917   00119E  1017               	iorwf	(___fldiv@a+3)^0,w,c
  2918   0011A0  A4D8               	btfss	status,2,c
  2919   0011A2  EFD5  F008         	goto	u2471
  2920   0011A6  EFD7  F008         	goto	u2470
  2921   0011AA                     u2471:
  2922   0011AA  EFEF  F008         	goto	l2113
  2923   0011AE                     u2470:
  2924   0011AE  0E00               	movlw	0
  2925   0011B0  6E10               	movwf	___fldiv@b^0,c
  2926   0011B2  0E00               	movlw	0
  2927   0011B4  6E11               	movwf	(___fldiv@b+1)^0,c
  2928   0011B6  0E00               	movlw	0
  2929   0011B8  6E12               	movwf	(___fldiv@b+2)^0,c
  2930   0011BA  0E00               	movlw	0
  2931   0011BC  6E13               	movwf	(___fldiv@b+3)^0,c
  2932   0011BE  0E80               	movlw	128
  2933   0011C0  1212               	iorwf	(___fldiv@b+2)^0,f,c
  2934   0011C2  0E7F               	movlw	127
  2935   0011C4  1213               	iorwf	(___fldiv@b+3)^0,f,c
  2936   0011C6                     l2107:
  2937   0011C6  5020               	movf	___fldiv@sign^0,w,c
  2938   0011C8  1213               	iorwf	(___fldiv@b+3)^0,f,c
  2939   0011CA  C010  F010         	movff	___fldiv@b,?___fldiv
  2940   0011CE  C011  F011         	movff	___fldiv@b+1,?___fldiv+1
  2941   0011D2  C012  F012         	movff	___fldiv@b+2,?___fldiv+2
  2942   0011D6  C013  F013         	movff	___fldiv@b+3,?___fldiv+3
  2943   0011DA  EF2F  F00A         	goto	l736
  2944   0011DE                     l2113:
  2945   0011DE  5027               	movf	___fldiv@bexp^0,w,c
  2946   0011E0  A4D8               	btfss	status,2,c
  2947   0011E2  EFF5  F008         	goto	u2481
  2948   0011E6  EFF7  F008         	goto	u2480
  2949   0011EA                     u2481:
  2950   0011EA  EF01  F009         	goto	l2121
  2951   0011EE                     u2480:
  2952   0011EE  0E00               	movlw	0
  2953   0011F0  6E10               	movwf	?___fldiv^0,c
  2954   0011F2  0E00               	movlw	0
  2955   0011F4  6E11               	movwf	(?___fldiv+1)^0,c
  2956   0011F6  0E00               	movlw	0
  2957   0011F8  6E12               	movwf	(?___fldiv+2)^0,c
  2958   0011FA  0E00               	movlw	0
  2959   0011FC  6E13               	movwf	(?___fldiv+3)^0,c
  2960   0011FE  EF2F  F00A         	goto	l736
  2961   001202                     l2121:
  2962   001202  5028               	movf	___fldiv@aexp^0,w,c
  2963   001204  C027  F018         	movff	___fldiv@bexp,??___fldiv
  2964   001208  6A19               	clrf	(??___fldiv+1)^0,c
  2965   00120A  5E18               	subwf	??___fldiv^0,f,c
  2966   00120C  0E00               	movlw	0
  2967   00120E  5A19               	subwfb	(??___fldiv+1)^0,f,c
  2968   001210  0E7F               	movlw	127
  2969   001212  2418               	addwf	??___fldiv^0,w,c
  2970   001214  6E21               	movwf	___fldiv@new_exp^0,c
  2971   001216  0E00               	movlw	0
  2972   001218  2019               	addwfc	(??___fldiv+1)^0,w,c
  2973   00121A  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  2974   00121C  C010  F01C         	movff	___fldiv@b,___fldiv@rem
  2975   001220  C011  F01D         	movff	___fldiv@b+1,___fldiv@rem+1
  2976   001224  C012  F01E         	movff	___fldiv@b+2,___fldiv@rem+2
  2977   001228  C013  F01F         	movff	___fldiv@b+3,___fldiv@rem+3
  2978   00122C  0E00               	movlw	0
  2979   00122E  6E10               	movwf	___fldiv@b^0,c
  2980   001230  0E00               	movlw	0
  2981   001232  6E11               	movwf	(___fldiv@b+1)^0,c
  2982   001234  0E00               	movlw	0
  2983   001236  6E12               	movwf	(___fldiv@b+2)^0,c
  2984   001238  0E00               	movlw	0
  2985   00123A  6E13               	movwf	(___fldiv@b+3)^0,c
  2986   00123C  0E00               	movlw	0
  2987   00123E  6E23               	movwf	___fldiv@grs^0,c
  2988   001240  0E00               	movlw	0
  2989   001242  6E24               	movwf	(___fldiv@grs+1)^0,c
  2990   001244  0E00               	movlw	0
  2991   001246  6E25               	movwf	(___fldiv@grs+2)^0,c
  2992   001248  0E00               	movlw	0
  2993   00124A  6E26               	movwf	(___fldiv@grs+3)^0,c
  2994   00124C  6A28               	clrf	___fldiv@aexp^0,c
  2995   00124E  EF61  F009         	goto	l738
  2996   001252                     l2131:
  2997   001252  5028               	movf	___fldiv@aexp^0,w,c
  2998   001254  B4D8               	btfsc	status,2,c
  2999   001256  EF2F  F009         	goto	u2491
  3000   00125A  EF31  F009         	goto	u2490
  3001   00125E                     u2491:
  3002   00125E  EF48  F009         	goto	l2139
  3003   001262                     u2490:
  3004   001262  90D8               	bcf	status,0,c
  3005   001264  361C               	rlcf	___fldiv@rem^0,f,c
  3006   001266  361D               	rlcf	(___fldiv@rem+1)^0,f,c
  3007   001268  361E               	rlcf	(___fldiv@rem+2)^0,f,c
  3008   00126A  361F               	rlcf	(___fldiv@rem+3)^0,f,c
  3009   00126C  90D8               	bcf	status,0,c
  3010   00126E  3610               	rlcf	___fldiv@b^0,f,c
  3011   001270  3611               	rlcf	(___fldiv@b+1)^0,f,c
  3012   001272  3612               	rlcf	(___fldiv@b+2)^0,f,c
  3013   001274  3613               	rlcf	(___fldiv@b+3)^0,f,c
  3014   001276  AE26               	btfss	(___fldiv@grs+3)^0,7,c
  3015   001278  EF40  F009         	goto	u2501
  3016   00127C  EF42  F009         	goto	u2500
  3017   001280                     u2501:
  3018   001280  EF43  F009         	goto	l741
  3019   001284                     u2500:
  3020   001284  8010               	bsf	___fldiv@b^0,0,c
  3021   001286                     l741:
  3022   001286  90D8               	bcf	status,0,c
  3023   001288  3623               	rlcf	___fldiv@grs^0,f,c
  3024   00128A  3624               	rlcf	(___fldiv@grs+1)^0,f,c
  3025   00128C  3625               	rlcf	(___fldiv@grs+2)^0,f,c
  3026   00128E  3626               	rlcf	(___fldiv@grs+3)^0,f,c
  3027   001290                     l2139:
  3028   001290  5014               	movf	___fldiv@a^0,w,c
  3029   001292  5C1C               	subwf	___fldiv@rem^0,w,c
  3030   001294  5015               	movf	(___fldiv@a+1)^0,w,c
  3031   001296  581D               	subwfb	(___fldiv@rem+1)^0,w,c
  3032   001298  5016               	movf	(___fldiv@a+2)^0,w,c
  3033   00129A  581E               	subwfb	(___fldiv@rem+2)^0,w,c
  3034   00129C  5017               	movf	(___fldiv@a+3)^0,w,c
  3035   00129E  581F               	subwfb	(___fldiv@rem+3)^0,w,c
  3036   0012A0  A0D8               	btfss	status,0,c
  3037   0012A2  EF55  F009         	goto	u2511
  3038   0012A6  EF57  F009         	goto	u2510
  3039   0012AA                     u2511:
  3040   0012AA  EF60  F009         	goto	l2145
  3041   0012AE                     u2510:
  3042   0012AE  8C26               	bsf	(___fldiv@grs+3)^0,6,c
  3043   0012B0  5014               	movf	___fldiv@a^0,w,c
  3044   0012B2  5E1C               	subwf	___fldiv@rem^0,f,c
  3045   0012B4  5015               	movf	(___fldiv@a+1)^0,w,c
  3046   0012B6  5A1D               	subwfb	(___fldiv@rem+1)^0,f,c
  3047   0012B8  5016               	movf	(___fldiv@a+2)^0,w,c
  3048   0012BA  5A1E               	subwfb	(___fldiv@rem+2)^0,f,c
  3049   0012BC  5017               	movf	(___fldiv@a+3)^0,w,c
  3050   0012BE  5A1F               	subwfb	(___fldiv@rem+3)^0,f,c
  3051   0012C0                     l2145:
  3052   0012C0  2A28               	incf	___fldiv@aexp^0,f,c
  3053   0012C2                     l738:
  3054   0012C2  0E19               	movlw	25
  3055   0012C4  6428               	cpfsgt	___fldiv@aexp^0,c
  3056   0012C6  EF67  F009         	goto	u2521
  3057   0012CA  EF69  F009         	goto	u2520
  3058   0012CE                     u2521:
  3059   0012CE  EF29  F009         	goto	l2131
  3060   0012D2                     u2520:
  3061   0012D2  501C               	movf	___fldiv@rem^0,w,c
  3062   0012D4  101D               	iorwf	(___fldiv@rem+1)^0,w,c
  3063   0012D6  101E               	iorwf	(___fldiv@rem+2)^0,w,c
  3064   0012D8  101F               	iorwf	(___fldiv@rem+3)^0,w,c
  3065   0012DA  B4D8               	btfsc	status,2,c
  3066   0012DC  EF72  F009         	goto	u2531
  3067   0012E0  EF74  F009         	goto	u2530
  3068   0012E4                     u2531:
  3069   0012E4  EF8C  F009         	goto	l2157
  3070   0012E8                     u2530:
  3071   0012E8  8023               	bsf	___fldiv@grs^0,0,c
  3072   0012EA  EF8C  F009         	goto	l2157
  3073   0012EE                     l2151:
  3074   0012EE  90D8               	bcf	status,0,c
  3075   0012F0  3610               	rlcf	___fldiv@b^0,f,c
  3076   0012F2  3611               	rlcf	(___fldiv@b+1)^0,f,c
  3077   0012F4  3612               	rlcf	(___fldiv@b+2)^0,f,c
  3078   0012F6  3613               	rlcf	(___fldiv@b+3)^0,f,c
  3079   0012F8  AE26               	btfss	(___fldiv@grs+3)^0,7,c
  3080   0012FA  EF81  F009         	goto	u2541
  3081   0012FE  EF83  F009         	goto	u2540
  3082   001302                     u2541:
  3083   001302  EF84  F009         	goto	l747
  3084   001306                     u2540:
  3085   001306  8010               	bsf	___fldiv@b^0,0,c
  3086   001308                     l747:
  3087   001308  90D8               	bcf	status,0,c
  3088   00130A  3623               	rlcf	___fldiv@grs^0,f,c
  3089   00130C  3624               	rlcf	(___fldiv@grs+1)^0,f,c
  3090   00130E  3625               	rlcf	(___fldiv@grs+2)^0,f,c
  3091   001310  3626               	rlcf	(___fldiv@grs+3)^0,f,c
  3092   001312  0621               	decf	___fldiv@new_exp^0,f,c
  3093   001314  A0D8               	btfss	status,0,c
  3094   001316  0622               	decf	(___fldiv@new_exp+1)^0,f,c
  3095   001318                     l2157:
  3096   001318  AE12               	btfss	(___fldiv@b+2)^0,7,c
  3097   00131A  EF91  F009         	goto	u2551
  3098   00131E  EF93  F009         	goto	u2550
  3099   001322                     u2551:
  3100   001322  EF77  F009         	goto	l2151
  3101   001326                     u2550:
  3102   001326  6A28               	clrf	___fldiv@aexp^0,c
  3103   001328  AE26               	btfss	(___fldiv@grs+3)^0,7,c
  3104   00132A  EF99  F009         	goto	u2561
  3105   00132E  EF9B  F009         	goto	u2560
  3106   001332                     u2561:
  3107   001332  EFBF  F009         	goto	l749
  3108   001336                     u2560:
  3109   001336  0EFF               	movlw	255
  3110   001338  1423               	andwf	___fldiv@grs^0,w,c
  3111   00133A  6E18               	movwf	??___fldiv^0,c
  3112   00133C  0EFF               	movlw	255
  3113   00133E  1424               	andwf	(___fldiv@grs+1)^0,w,c
  3114   001340  6E19               	movwf	(??___fldiv+1)^0,c
  3115   001342  0EFF               	movlw	255
  3116   001344  1425               	andwf	(___fldiv@grs+2)^0,w,c
  3117   001346  6E1A               	movwf	(??___fldiv+2)^0,c
  3118   001348  0E7F               	movlw	127
  3119   00134A  1426               	andwf	(___fldiv@grs+3)^0,w,c
  3120   00134C  6E1B               	movwf	(??___fldiv+3)^0,c
  3121   00134E  5018               	movf	??___fldiv^0,w,c
  3122   001350  1019               	iorwf	(??___fldiv+1)^0,w,c
  3123   001352  101A               	iorwf	(??___fldiv+2)^0,w,c
  3124   001354  101B               	iorwf	(??___fldiv+3)^0,w,c
  3125   001356  B4D8               	btfsc	status,2,c
  3126   001358  EFB0  F009         	goto	u2571
  3127   00135C  EFB2  F009         	goto	u2570
  3128   001360                     u2571:
  3129   001360  EFB6  F009         	goto	l750
  3130   001364                     u2570:
  3131   001364                     l2161:
  3132   001364  0E01               	movlw	1
  3133   001366  6E28               	movwf	___fldiv@aexp^0,c
  3134   001368  EFBF  F009         	goto	l749
  3135   00136C                     l750:
  3136   00136C  A010               	btfss	___fldiv@b^0,0,c
  3137   00136E  EFBB  F009         	goto	u2581
  3138   001372  EFBD  F009         	goto	u2580
  3139   001376                     u2581:
  3140   001376  EFBF  F009         	goto	l749
  3141   00137A                     u2580:
  3142   00137A  EFB2  F009         	goto	l2161
  3143   00137E                     l749:
  3144   00137E  5028               	movf	___fldiv@aexp^0,w,c
  3145   001380  B4D8               	btfsc	status,2,c
  3146   001382  EFC5  F009         	goto	u2591
  3147   001386  EFC7  F009         	goto	u2590
  3148   00138A                     u2591:
  3149   00138A  EFEB  F009         	goto	l2173
  3150   00138E                     u2590:
  3151   00138E  0E01               	movlw	1
  3152   001390  2610               	addwf	___fldiv@b^0,f,c
  3153   001392  0E00               	movlw	0
  3154   001394  2211               	addwfc	(___fldiv@b+1)^0,f,c
  3155   001396  2212               	addwfc	(___fldiv@b+2)^0,f,c
  3156   001398  2213               	addwfc	(___fldiv@b+3)^0,f,c
  3157   00139A  A013               	btfss	(___fldiv@b+3)^0,0,c
  3158   00139C  EFD2  F009         	goto	u2601
  3159   0013A0  EFD4  F009         	goto	u2600
  3160   0013A4                     u2601:
  3161   0013A4  EFEB  F009         	goto	l2173
  3162   0013A8                     u2600:
  3163   0013A8  C010  F018         	movff	___fldiv@b,??___fldiv
  3164   0013AC  C011  F019         	movff	___fldiv@b+1,??___fldiv+1
  3165   0013B0  C012  F01A         	movff	___fldiv@b+2,??___fldiv+2
  3166   0013B4  C013  F01B         	movff	___fldiv@b+3,??___fldiv+3
  3167   0013B8  341B               	rlcf	(??___fldiv+3)^0,w,c
  3168   0013BA  321B               	rrcf	(??___fldiv+3)^0,f,c
  3169   0013BC  321A               	rrcf	(??___fldiv+2)^0,f,c
  3170   0013BE  3219               	rrcf	(??___fldiv+1)^0,f,c
  3171   0013C0  3218               	rrcf	??___fldiv^0,f,c
  3172   0013C2  C018  F010         	movff	??___fldiv,___fldiv@b
  3173   0013C6  C019  F011         	movff	??___fldiv+1,___fldiv@b+1
  3174   0013CA  C01A  F012         	movff	??___fldiv+2,___fldiv@b+2
  3175   0013CE  C01B  F013         	movff	??___fldiv+3,___fldiv@b+3
  3176   0013D2  4A21               	infsnz	___fldiv@new_exp^0,f,c
  3177   0013D4  2A22               	incf	(___fldiv@new_exp+1)^0,f,c
  3178   0013D6                     l2173:
  3179   0013D6  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3180   0013D8  EFF6  F009         	goto	u2611
  3181   0013DC  5022               	movf	(___fldiv@new_exp+1)^0,w,c
  3182   0013DE  E108               	bnz	u2610
  3183   0013E0  2821               	incf	___fldiv@new_exp^0,w,c
  3184   0013E2  A0D8               	btfss	status,0,c
  3185   0013E4  EFF6  F009         	goto	u2611
  3186   0013E8  EFF8  F009         	goto	u2610
  3187   0013EC                     u2611:
  3188   0013EC  EF03  F00A         	goto	l2177
  3189   0013F0                     u2610:
  3190   0013F0  0E00               	movlw	0
  3191   0013F2  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  3192   0013F4  6821               	setf	___fldiv@new_exp^0,c
  3193   0013F6  0E00               	movlw	0
  3194   0013F8  6E10               	movwf	___fldiv@b^0,c
  3195   0013FA  0E00               	movlw	0
  3196   0013FC  6E11               	movwf	(___fldiv@b+1)^0,c
  3197   0013FE  0E00               	movlw	0
  3198   001400  6E12               	movwf	(___fldiv@b+2)^0,c
  3199   001402  0E00               	movlw	0
  3200   001404  6E13               	movwf	(___fldiv@b+3)^0,c
  3201   001406                     l2177:
  3202   001406  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3203   001408  EF10  F00A         	goto	u2620
  3204   00140C  5022               	movf	(___fldiv@new_exp+1)^0,w,c
  3205   00140E  E106               	bnz	u2621
  3206   001410  0421               	decf	___fldiv@new_exp^0,w,c
  3207   001412  B0D8               	btfsc	status,0,c
  3208   001414  EF0E  F00A         	goto	u2621
  3209   001418  EF10  F00A         	goto	u2620
  3210   00141C                     u2621:
  3211   00141C  EF1D  F00A         	goto	l2183
  3212   001420                     u2620:
  3213   001420  0E00               	movlw	0
  3214   001422  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  3215   001424  0E00               	movlw	0
  3216   001426  6E21               	movwf	___fldiv@new_exp^0,c
  3217   001428  0E00               	movlw	0
  3218   00142A  6E10               	movwf	___fldiv@b^0,c
  3219   00142C  0E00               	movlw	0
  3220   00142E  6E11               	movwf	(___fldiv@b+1)^0,c
  3221   001430  0E00               	movlw	0
  3222   001432  6E12               	movwf	(___fldiv@b+2)^0,c
  3223   001434  0E00               	movlw	0
  3224   001436  6E13               	movwf	(___fldiv@b+3)^0,c
  3225   001438  6A20               	clrf	___fldiv@sign^0,c
  3226   00143A                     l2183:
  3227   00143A  C021  F027         	movff	___fldiv@new_exp,___fldiv@bexp
  3228   00143E  A027               	btfss	___fldiv@bexp^0,0,c
  3229   001440  EF24  F00A         	goto	u2631
  3230   001444  EF26  F00A         	goto	u2630
  3231   001448                     u2631:
  3232   001448  EF29  F00A         	goto	l2189
  3233   00144C                     u2630:
  3234   00144C  8E12               	bsf	(___fldiv@b+2)^0,7,c
  3235   00144E  EF2A  F00A         	goto	l2191
  3236   001452                     l2189:
  3237   001452  9E12               	bcf	(___fldiv@b+2)^0,7,c
  3238   001454                     l2191:
  3239   001454  90D8               	bcf	status,0,c
  3240   001456  3027               	rrcf	___fldiv@bexp^0,w,c
  3241   001458  6E13               	movwf	(___fldiv@b+3)^0,c
  3242   00145A  EFE3  F008         	goto	l2107
  3243   00145E                     l736:
  3244   00145E  0012               	return		;funcret
  3245   001460                     __end_of___fldiv:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function ___fladd *****************
  3249 ;; Defined at:
  3250 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  b               4   65[COMRAM] unsigned char 
  3253 ;;  a               4   69[COMRAM] unsigned char 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  grs             1   80[COMRAM] unsigned char 
  3256 ;;  bexp            1   79[COMRAM] unsigned char 
  3257 ;;  aexp            1   78[COMRAM] unsigned char 
  3258 ;;  signs           1   77[COMRAM] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  4   65[COMRAM] unsigned char 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3268 ;;      Params:         8       0       0       0
  3269 ;;      Locals:         4       0       0       0
  3270 ;;      Temps:          4       0       0       0
  3271 ;;      Totals:        16       0       0       0
  3272 ;;Total ram usage:       16 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 1
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_setServoHighTime
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text6
  3283   0007F4                     __ptext6:
  3284                           	callstack 0
  3285   0007F4                     ___fladd:
  3286                           	callstack 28
  3287   0007F4  5045               	movf	(___fladd@b+3)^0,w,c
  3288   0007F6  0B80               	andlw	128
  3289   0007F8  6E4E               	movwf	___fladd@signs^0,c
  3290   0007FA  5045               	movf	(___fladd@b+3)^0,w,c
  3291   0007FC  2445               	addwf	(___fladd@b+3)^0,w,c
  3292   0007FE  6E50               	movwf	___fladd@bexp^0,c
  3293   000800  AE44               	btfss	(___fladd@b+2)^0,7,c
  3294   000802  EF05  F004         	goto	u2021
  3295   000806  EF07  F004         	goto	u2020
  3296   00080A                     u2021:
  3297   00080A  EF08  F004         	goto	l1875
  3298   00080E                     u2020:
  3299   00080E  8050               	bsf	___fladd@bexp^0,0,c
  3300   000810                     l1875:
  3301   000810  5050               	movf	___fladd@bexp^0,w,c
  3302   000812  B4D8               	btfsc	status,2,c
  3303   000814  EF0E  F004         	goto	u2031
  3304   000818  EF10  F004         	goto	u2030
  3305   00081C                     u2031:
  3306   00081C  EF24  F004         	goto	l1885
  3307   000820                     u2030:
  3308   000820  2850               	incf	___fladd@bexp^0,w,c
  3309   000822  A4D8               	btfss	status,2,c
  3310   000824  EF16  F004         	goto	u2041
  3311   000828  EF18  F004         	goto	u2040
  3312   00082C                     u2041:
  3313   00082C  EF20  F004         	goto	l1881
  3314   000830                     u2040:
  3315   000830  0E00               	movlw	0
  3316   000832  6E42               	movwf	___fladd@b^0,c
  3317   000834  0E00               	movlw	0
  3318   000836  6E43               	movwf	(___fladd@b+1)^0,c
  3319   000838  0E00               	movlw	0
  3320   00083A  6E44               	movwf	(___fladd@b+2)^0,c
  3321   00083C  0E00               	movlw	0
  3322   00083E  6E45               	movwf	(___fladd@b+3)^0,c
  3323   000840                     l1881:
  3324   000840  8E44               	bsf	(___fladd@b+2)^0,7,c
  3325   000842  6A45               	clrf	(___fladd@b+3)^0,c
  3326   000844  EF2C  F004         	goto	l1887
  3327   000848                     l1885:
  3328   000848  0E00               	movlw	0
  3329   00084A  6E42               	movwf	___fladd@b^0,c
  3330   00084C  0E00               	movlw	0
  3331   00084E  6E43               	movwf	(___fladd@b+1)^0,c
  3332   000850  0E00               	movlw	0
  3333   000852  6E44               	movwf	(___fladd@b+2)^0,c
  3334   000854  0E00               	movlw	0
  3335   000856  6E45               	movwf	(___fladd@b+3)^0,c
  3336   000858                     l1887:
  3337   000858  5049               	movf	(___fladd@a+3)^0,w,c
  3338   00085A  0B80               	andlw	128
  3339   00085C  6E4F               	movwf	___fladd@aexp^0,c
  3340   00085E  504E               	movf	___fladd@signs^0,w,c
  3341   000860  184F               	xorwf	___fladd@aexp^0,w,c
  3342   000862  B4D8               	btfsc	status,2,c
  3343   000864  EF36  F004         	goto	u2051
  3344   000868  EF38  F004         	goto	u2050
  3345   00086C                     u2051:
  3346   00086C  EF39  F004         	goto	l1893
  3347   000870                     u2050:
  3348   000870  8C4E               	bsf	___fladd@signs^0,6,c
  3349   000872                     l1893:
  3350   000872  5049               	movf	(___fladd@a+3)^0,w,c
  3351   000874  2449               	addwf	(___fladd@a+3)^0,w,c
  3352   000876  6E4F               	movwf	___fladd@aexp^0,c
  3353   000878  AE48               	btfss	(___fladd@a+2)^0,7,c
  3354   00087A  EF41  F004         	goto	u2061
  3355   00087E  EF43  F004         	goto	u2060
  3356   000882                     u2061:
  3357   000882  EF44  F004         	goto	l1899
  3358   000886                     u2060:
  3359   000886  804F               	bsf	___fladd@aexp^0,0,c
  3360   000888                     l1899:
  3361   000888  504F               	movf	___fladd@aexp^0,w,c
  3362   00088A  B4D8               	btfsc	status,2,c
  3363   00088C  EF4A  F004         	goto	u2071
  3364   000890  EF4C  F004         	goto	u2070
  3365   000894                     u2071:
  3366   000894  EF60  F004         	goto	l1909
  3367   000898                     u2070:
  3368   000898  284F               	incf	___fladd@aexp^0,w,c
  3369   00089A  A4D8               	btfss	status,2,c
  3370   00089C  EF52  F004         	goto	u2081
  3371   0008A0  EF54  F004         	goto	u2080
  3372   0008A4                     u2081:
  3373   0008A4  EF5C  F004         	goto	l1905
  3374   0008A8                     u2080:
  3375   0008A8  0E00               	movlw	0
  3376   0008AA  6E46               	movwf	___fladd@a^0,c
  3377   0008AC  0E00               	movlw	0
  3378   0008AE  6E47               	movwf	(___fladd@a+1)^0,c
  3379   0008B0  0E00               	movlw	0
  3380   0008B2  6E48               	movwf	(___fladd@a+2)^0,c
  3381   0008B4  0E00               	movlw	0
  3382   0008B6  6E49               	movwf	(___fladd@a+3)^0,c
  3383   0008B8                     l1905:
  3384   0008B8  8E48               	bsf	(___fladd@a+2)^0,7,c
  3385   0008BA  6A49               	clrf	(___fladd@a+3)^0,c
  3386   0008BC  EF68  F004         	goto	l1911
  3387   0008C0                     l1909:
  3388   0008C0  0E00               	movlw	0
  3389   0008C2  6E46               	movwf	___fladd@a^0,c
  3390   0008C4  0E00               	movlw	0
  3391   0008C6  6E47               	movwf	(___fladd@a+1)^0,c
  3392   0008C8  0E00               	movlw	0
  3393   0008CA  6E48               	movwf	(___fladd@a+2)^0,c
  3394   0008CC  0E00               	movlw	0
  3395   0008CE  6E49               	movwf	(___fladd@a+3)^0,c
  3396   0008D0                     l1911:
  3397   0008D0  5050               	movf	___fladd@bexp^0,w,c
  3398   0008D2  5C4F               	subwf	___fladd@aexp^0,w,c
  3399   0008D4  B0D8               	btfsc	status,0,c
  3400   0008D6  EF6F  F004         	goto	u2091
  3401   0008DA  EF71  F004         	goto	u2090
  3402   0008DE                     u2091:
  3403   0008DE  EF98  F004         	goto	l1947
  3404   0008E2                     u2090:
  3405   0008E2  AC4E               	btfss	___fladd@signs^0,6,c
  3406   0008E4  EF76  F004         	goto	u2101
  3407   0008E8  EF78  F004         	goto	u2100
  3408   0008EC                     u2101:
  3409   0008EC  EF7A  F004         	goto	l1917
  3410   0008F0                     u2100:
  3411   0008F0  0E80               	movlw	128
  3412   0008F2  1A4E               	xorwf	___fladd@signs^0,f,c
  3413   0008F4                     l1917:
  3414   0008F4  C050  F051         	movff	___fladd@bexp,___fladd@grs
  3415   0008F8  C04F  F050         	movff	___fladd@aexp,___fladd@bexp
  3416   0008FC  C051  F04F         	movff	___fladd@grs,___fladd@aexp
  3417   000900  C042  F051         	movff	___fladd@b,___fladd@grs
  3418   000904  C046  F042         	movff	___fladd@a,___fladd@b
  3419   000908  C051  F046         	movff	___fladd@grs,___fladd@a
  3420   00090C  C043  F051         	movff	___fladd@b+1,___fladd@grs
  3421   000910  C047  F043         	movff	___fladd@a+1,___fladd@b+1
  3422   000914  C051  F047         	movff	___fladd@grs,___fladd@a+1
  3423   000918  C044  F051         	movff	___fladd@b+2,___fladd@grs
  3424   00091C  C048  F044         	movff	___fladd@a+2,___fladd@b+2
  3425   000920  C051  F048         	movff	___fladd@grs,___fladd@a+2
  3426   000924  C045  F051         	movff	___fladd@b+3,___fladd@grs
  3427   000928  C049  F045         	movff	___fladd@a+3,___fladd@b+3
  3428   00092C  C051  F049         	movff	___fladd@grs,___fladd@a+3
  3429   000930                     l1947:
  3430   000930  6A51               	clrf	___fladd@grs^0,c
  3431   000932  5050               	movf	___fladd@bexp^0,w,c
  3432   000934  C04F  F04A         	movff	___fladd@aexp,??___fladd
  3433   000938  6A4B               	clrf	(??___fladd+1)^0,c
  3434   00093A  5E4A               	subwf	??___fladd^0,f,c
  3435   00093C  0E00               	movlw	0
  3436   00093E  5A4B               	subwfb	(??___fladd+1)^0,f,c
  3437   000940  BE4B               	btfsc	(??___fladd+1)^0,7,c
  3438   000942  EFAC  F004         	goto	u2111
  3439   000946  504B               	movf	(??___fladd+1)^0,w,c
  3440   000948  E109               	bnz	u2110
  3441   00094A  0E1A               	movlw	26
  3442   00094C  5C4A               	subwf	??___fladd^0,w,c
  3443   00094E  A0D8               	btfss	status,0,c
  3444   000950  EFAC  F004         	goto	u2111
  3445   000954  EFAE  F004         	goto	u2110
  3446   000958                     u2111:
  3447   000958  EFE5  F004         	goto	l683
  3448   00095C                     u2110:
  3449   00095C  5042               	movf	___fladd@b^0,w,c
  3450   00095E  1043               	iorwf	(___fladd@b+1)^0,w,c
  3451   000960  1044               	iorwf	(___fladd@b+2)^0,w,c
  3452   000962  1045               	iorwf	(___fladd@b+3)^0,w,c
  3453   000964  A4D8               	btfss	status,2,c
  3454   000966  EFB7  F004         	goto	u2121
  3455   00096A  EFBA  F004         	goto	u2120
  3456   00096E                     u2121:
  3457   00096E  0E01               	movlw	1
  3458   000970  EFBB  F004         	goto	u2130
  3459   000974                     u2120:
  3460   000974  0E00               	movlw	0
  3461   000976                     u2130:
  3462   000976  6E51               	movwf	___fladd@grs^0,c
  3463   000978  0E00               	movlw	0
  3464   00097A  6E42               	movwf	___fladd@b^0,c
  3465   00097C  0E00               	movlw	0
  3466   00097E  6E43               	movwf	(___fladd@b+1)^0,c
  3467   000980  0E00               	movlw	0
  3468   000982  6E44               	movwf	(___fladd@b+2)^0,c
  3469   000984  0E00               	movlw	0
  3470   000986  6E45               	movwf	(___fladd@b+3)^0,c
  3471   000988  C04F  F050         	movff	___fladd@aexp,___fladd@bexp
  3472   00098C  EFEE  F004         	goto	l682
  3473   000990                     l684:
  3474   000990  A051               	btfss	___fladd@grs^0,0,c
  3475   000992  EFCD  F004         	goto	u2141
  3476   000996  EFCF  F004         	goto	u2140
  3477   00099A                     u2141:
  3478   00099A  EFD5  F004         	goto	l1957
  3479   00099E                     u2140:
  3480   00099E  90D8               	bcf	status,0,c
  3481   0009A0  3051               	rrcf	___fladd@grs^0,w,c
  3482   0009A2  0901               	iorlw	1
  3483   0009A4  6E51               	movwf	___fladd@grs^0,c
  3484   0009A6  EFD7  F004         	goto	l1959
  3485   0009AA                     l1957:
  3486   0009AA  90D8               	bcf	status,0,c
  3487   0009AC  3251               	rrcf	___fladd@grs^0,f,c
  3488   0009AE                     l1959:
  3489   0009AE  A042               	btfss	___fladd@b^0,0,c
  3490   0009B0  EFDC  F004         	goto	u2151
  3491   0009B4  EFDE  F004         	goto	u2150
  3492   0009B8                     u2151:
  3493   0009B8  EFDF  F004         	goto	l1963
  3494   0009BC                     u2150:
  3495   0009BC  8E51               	bsf	___fladd@grs^0,7,c
  3496   0009BE                     l1963:
  3497   0009BE  3445               	rlcf	(___fladd@b+3)^0,w,c
  3498   0009C0  3245               	rrcf	(___fladd@b+3)^0,f,c
  3499   0009C2  3244               	rrcf	(___fladd@b+2)^0,f,c
  3500   0009C4  3243               	rrcf	(___fladd@b+1)^0,f,c
  3501   0009C6  3242               	rrcf	___fladd@b^0,f,c
  3502   0009C8  2A50               	incf	___fladd@bexp^0,f,c
  3503   0009CA                     l683:
  3504   0009CA  504F               	movf	___fladd@aexp^0,w,c
  3505   0009CC  5C50               	subwf	___fladd@bexp^0,w,c
  3506   0009CE  A0D8               	btfss	status,0,c
  3507   0009D0  EFEC  F004         	goto	u2161
  3508   0009D4  EFEE  F004         	goto	u2160
  3509   0009D8                     u2161:
  3510   0009D8  EFC8  F004         	goto	l684
  3511   0009DC                     u2160:
  3512   0009DC                     l682:
  3513   0009DC  BC4E               	btfsc	___fladd@signs^0,6,c
  3514   0009DE  EFF3  F004         	goto	u2171
  3515   0009E2  EFF5  F004         	goto	u2170
  3516   0009E6                     u2171:
  3517   0009E6  EF35  F005         	goto	l1991
  3518   0009EA                     u2170:
  3519   0009EA  5050               	movf	___fladd@bexp^0,w,c
  3520   0009EC  A4D8               	btfss	status,2,c
  3521   0009EE  EFFB  F004         	goto	u2181
  3522   0009F2  EFFD  F004         	goto	u2180
  3523   0009F6                     u2181:
  3524   0009F6  EF07  F005         	goto	l1973
  3525   0009FA                     u2180:
  3526   0009FA  0E00               	movlw	0
  3527   0009FC  6E42               	movwf	?___fladd^0,c
  3528   0009FE  0E00               	movlw	0
  3529   000A00  6E43               	movwf	(?___fladd+1)^0,c
  3530   000A02  0E00               	movlw	0
  3531   000A04  6E44               	movwf	(?___fladd+2)^0,c
  3532   000A06  0E00               	movlw	0
  3533   000A08  6E45               	movwf	(?___fladd+3)^0,c
  3534   000A0A  EF54  F006         	goto	l691
  3535   000A0E                     l1973:
  3536   000A0E  5046               	movf	___fladd@a^0,w,c
  3537   000A10  2642               	addwf	___fladd@b^0,f,c
  3538   000A12  5047               	movf	(___fladd@a+1)^0,w,c
  3539   000A14  2243               	addwfc	(___fladd@b+1)^0,f,c
  3540   000A16  5048               	movf	(___fladd@a+2)^0,w,c
  3541   000A18  2244               	addwfc	(___fladd@b+2)^0,f,c
  3542   000A1A  5049               	movf	(___fladd@a+3)^0,w,c
  3543   000A1C  2245               	addwfc	(___fladd@b+3)^0,f,c
  3544   000A1E  A045               	btfss	(___fladd@b+3)^0,0,c
  3545   000A20  EF14  F005         	goto	u2191
  3546   000A24  EF16  F005         	goto	u2190
  3547   000A28                     u2191:
  3548   000A28  EFC2  F005         	goto	l696
  3549   000A2C                     u2190:
  3550   000A2C  A051               	btfss	___fladd@grs^0,0,c
  3551   000A2E  EF1B  F005         	goto	u2201
  3552   000A32  EF1D  F005         	goto	u2200
  3553   000A36                     u2201:
  3554   000A36  EF23  F005         	goto	l1981
  3555   000A3A                     u2200:
  3556   000A3A  90D8               	bcf	status,0,c
  3557   000A3C  3051               	rrcf	___fladd@grs^0,w,c
  3558   000A3E  0901               	iorlw	1
  3559   000A40  6E51               	movwf	___fladd@grs^0,c
  3560   000A42  EF25  F005         	goto	l1983
  3561   000A46                     l1981:
  3562   000A46  90D8               	bcf	status,0,c
  3563   000A48  3251               	rrcf	___fladd@grs^0,f,c
  3564   000A4A                     l1983:
  3565   000A4A  A042               	btfss	___fladd@b^0,0,c
  3566   000A4C  EF2A  F005         	goto	u2211
  3567   000A50  EF2C  F005         	goto	u2210
  3568   000A54                     u2211:
  3569   000A54  EF2D  F005         	goto	l1987
  3570   000A58                     u2210:
  3571   000A58  8E51               	bsf	___fladd@grs^0,7,c
  3572   000A5A                     l1987:
  3573   000A5A  3445               	rlcf	(___fladd@b+3)^0,w,c
  3574   000A5C  3245               	rrcf	(___fladd@b+3)^0,f,c
  3575   000A5E  3244               	rrcf	(___fladd@b+2)^0,f,c
  3576   000A60  3243               	rrcf	(___fladd@b+1)^0,f,c
  3577   000A62  3242               	rrcf	___fladd@b^0,f,c
  3578   000A64  2A50               	incf	___fladd@bexp^0,f,c
  3579   000A66  EFC2  F005         	goto	l696
  3580   000A6A                     l1991:
  3581   000A6A  5046               	movf	___fladd@a^0,w,c
  3582   000A6C  5C42               	subwf	___fladd@b^0,w,c
  3583   000A6E  5047               	movf	(___fladd@a+1)^0,w,c
  3584   000A70  5843               	subwfb	(___fladd@b+1)^0,w,c
  3585   000A72  5048               	movf	(___fladd@a+2)^0,w,c
  3586   000A74  5844               	subwfb	(___fladd@b+2)^0,w,c
  3587   000A76  5045               	movf	(___fladd@b+3)^0,w,c
  3588   000A78  0A80               	xorlw	128
  3589   000A7A  6E4A               	movwf	??___fladd^0,c
  3590   000A7C  5049               	movf	(___fladd@a+3)^0,w,c
  3591   000A7E  0A80               	xorlw	128
  3592   000A80  584A               	subwfb	??___fladd^0,w,c
  3593   000A82  B0D8               	btfsc	status,0,c
  3594   000A84  EF46  F005         	goto	u2221
  3595   000A88  EF48  F005         	goto	u2220
  3596   000A8C                     u2221:
  3597   000A8C  EF73  F005         	goto	l2001
  3598   000A90                     u2220:
  3599   000A90  5042               	movf	___fladd@b^0,w,c
  3600   000A92  5C46               	subwf	___fladd@a^0,w,c
  3601   000A94  6E4A               	movwf	??___fladd^0,c
  3602   000A96  5043               	movf	(___fladd@b+1)^0,w,c
  3603   000A98  5847               	subwfb	(___fladd@a+1)^0,w,c
  3604   000A9A  6E4B               	movwf	(??___fladd+1)^0,c
  3605   000A9C  5044               	movf	(___fladd@b+2)^0,w,c
  3606   000A9E  5848               	subwfb	(___fladd@a+2)^0,w,c
  3607   000AA0  6E4C               	movwf	(??___fladd+2)^0,c
  3608   000AA2  5045               	movf	(___fladd@b+3)^0,w,c
  3609   000AA4  5849               	subwfb	(___fladd@a+3)^0,w,c
  3610   000AA6  6E4D               	movwf	(??___fladd+3)^0,c
  3611   000AA8  0EFF               	movlw	255
  3612   000AAA  244A               	addwf	??___fladd^0,w,c
  3613   000AAC  6E42               	movwf	___fladd@b^0,c
  3614   000AAE  0EFF               	movlw	255
  3615   000AB0  204B               	addwfc	(??___fladd+1)^0,w,c
  3616   000AB2  6E43               	movwf	(___fladd@b+1)^0,c
  3617   000AB4  0EFF               	movlw	255
  3618   000AB6  204C               	addwfc	(??___fladd+2)^0,w,c
  3619   000AB8  6E44               	movwf	(___fladd@b+2)^0,c
  3620   000ABA  0EFF               	movlw	255
  3621   000ABC  204D               	addwfc	(??___fladd+3)^0,w,c
  3622   000ABE  6E45               	movwf	(___fladd@b+3)^0,c
  3623   000AC0  0E80               	movlw	128
  3624   000AC2  1A4E               	xorwf	___fladd@signs^0,f,c
  3625   000AC4  6C51               	negf	___fladd@grs^0,c
  3626   000AC6  5051               	movf	___fladd@grs^0,w,c
  3627   000AC8  A4D8               	btfss	status,2,c
  3628   000ACA  EF69  F005         	goto	u2231
  3629   000ACE  EF6B  F005         	goto	u2230
  3630   000AD2                     u2231:
  3631   000AD2  EF7B  F005         	goto	l699
  3632   000AD6                     u2230:
  3633   000AD6  0E01               	movlw	1
  3634   000AD8  2642               	addwf	___fladd@b^0,f,c
  3635   000ADA  0E00               	movlw	0
  3636   000ADC  2243               	addwfc	(___fladd@b+1)^0,f,c
  3637   000ADE  2244               	addwfc	(___fladd@b+2)^0,f,c
  3638   000AE0  2245               	addwfc	(___fladd@b+3)^0,f,c
  3639   000AE2  EF7B  F005         	goto	l699
  3640   000AE6                     l2001:
  3641   000AE6  5046               	movf	___fladd@a^0,w,c
  3642   000AE8  5E42               	subwf	___fladd@b^0,f,c
  3643   000AEA  5047               	movf	(___fladd@a+1)^0,w,c
  3644   000AEC  5A43               	subwfb	(___fladd@b+1)^0,f,c
  3645   000AEE  5048               	movf	(___fladd@a+2)^0,w,c
  3646   000AF0  5A44               	subwfb	(___fladd@b+2)^0,f,c
  3647   000AF2  5049               	movf	(___fladd@a+3)^0,w,c
  3648   000AF4  5A45               	subwfb	(___fladd@b+3)^0,f,c
  3649   000AF6                     l699:
  3650   000AF6  5042               	movf	___fladd@b^0,w,c
  3651   000AF8  1043               	iorwf	(___fladd@b+1)^0,w,c
  3652   000AFA  1044               	iorwf	(___fladd@b+2)^0,w,c
  3653   000AFC  1045               	iorwf	(___fladd@b+3)^0,w,c
  3654   000AFE  A4D8               	btfss	status,2,c
  3655   000B00  EF84  F005         	goto	u2241
  3656   000B04  EF86  F005         	goto	u2240
  3657   000B08                     u2241:
  3658   000B08  EFBB  F005         	goto	l2025
  3659   000B0C                     u2240:
  3660   000B0C  5051               	movf	___fladd@grs^0,w,c
  3661   000B0E  A4D8               	btfss	status,2,c
  3662   000B10  EF8C  F005         	goto	u2251
  3663   000B14  EF8E  F005         	goto	u2250
  3664   000B18                     u2251:
  3665   000B18  EFBB  F005         	goto	l2025
  3666   000B1C                     u2250:
  3667   000B1C  0E00               	movlw	0
  3668   000B1E  6E42               	movwf	?___fladd^0,c
  3669   000B20  0E00               	movlw	0
  3670   000B22  6E43               	movwf	(?___fladd+1)^0,c
  3671   000B24  0E00               	movlw	0
  3672   000B26  6E44               	movwf	(?___fladd+2)^0,c
  3673   000B28  0E00               	movlw	0
  3674   000B2A  6E45               	movwf	(?___fladd+3)^0,c
  3675   000B2C  EF54  F006         	goto	l691
  3676   000B30                     l2009:
  3677   000B30  90D8               	bcf	status,0,c
  3678   000B32  3642               	rlcf	___fladd@b^0,f,c
  3679   000B34  3643               	rlcf	(___fladd@b+1)^0,f,c
  3680   000B36  3644               	rlcf	(___fladd@b+2)^0,f,c
  3681   000B38  3645               	rlcf	(___fladd@b+3)^0,f,c
  3682   000B3A  AE51               	btfss	___fladd@grs^0,7,c
  3683   000B3C  EFA2  F005         	goto	u2261
  3684   000B40  EFA4  F005         	goto	u2260
  3685   000B44                     u2261:
  3686   000B44  EFA5  F005         	goto	l2015
  3687   000B48                     u2260:
  3688   000B48  8042               	bsf	___fladd@b^0,0,c
  3689   000B4A                     l2015:
  3690   000B4A  A051               	btfss	___fladd@grs^0,0,c
  3691   000B4C  EFAA  F005         	goto	u2271
  3692   000B50  EFAC  F005         	goto	u2270
  3693   000B54                     u2271:
  3694   000B54  EFB0  F005         	goto	l2019
  3695   000B58                     u2270:
  3696   000B58  80D8               	bsf	status,0,c
  3697   000B5A  3651               	rlcf	___fladd@grs^0,f,c
  3698   000B5C  EFB2  F005         	goto	l2021
  3699   000B60                     l2019:
  3700   000B60  90D8               	bcf	status,0,c
  3701   000B62  3651               	rlcf	___fladd@grs^0,f,c
  3702   000B64                     l2021:
  3703   000B64  5050               	movf	___fladd@bexp^0,w,c
  3704   000B66  B4D8               	btfsc	status,2,c
  3705   000B68  EFB8  F005         	goto	u2281
  3706   000B6C  EFBA  F005         	goto	u2280
  3707   000B70                     u2281:
  3708   000B70  EFBB  F005         	goto	l2025
  3709   000B74                     u2280:
  3710   000B74  0650               	decf	___fladd@bexp^0,f,c
  3711   000B76                     l2025:
  3712   000B76  AE44               	btfss	(___fladd@b+2)^0,7,c
  3713   000B78  EFC0  F005         	goto	u2291
  3714   000B7C  EFC2  F005         	goto	u2290
  3715   000B80                     u2291:
  3716   000B80  EF98  F005         	goto	l2009
  3717   000B84                     u2290:
  3718   000B84                     l696:
  3719   000B84  6A4F               	clrf	___fladd@aexp^0,c
  3720   000B86  AE51               	btfss	___fladd@grs^0,7,c
  3721   000B88  EFC8  F005         	goto	u2301
  3722   000B8C  EFCA  F005         	goto	u2300
  3723   000B90                     u2301:
  3724   000B90  EFE2  F005         	goto	l708
  3725   000B94                     u2300:
  3726   000B94  C051  F04A         	movff	___fladd@grs,??___fladd
  3727   000B98  0E7F               	movlw	127
  3728   000B9A  164A               	andwf	??___fladd^0,f,c
  3729   000B9C  B4D8               	btfsc	status,2,c
  3730   000B9E  EFD3  F005         	goto	u2311
  3731   000BA2  EFD5  F005         	goto	u2310
  3732   000BA6                     u2311:
  3733   000BA6  EFD9  F005         	goto	l709
  3734   000BAA                     u2310:
  3735   000BAA                     l2029:
  3736   000BAA  0E01               	movlw	1
  3737   000BAC  6E4F               	movwf	___fladd@aexp^0,c
  3738   000BAE  EFE2  F005         	goto	l708
  3739   000BB2                     l709:
  3740   000BB2  A042               	btfss	___fladd@b^0,0,c
  3741   000BB4  EFDE  F005         	goto	u2321
  3742   000BB8  EFE0  F005         	goto	u2320
  3743   000BBC                     u2321:
  3744   000BBC  EFE2  F005         	goto	l708
  3745   000BC0                     u2320:
  3746   000BC0  EFD5  F005         	goto	l2029
  3747   000BC4                     l708:
  3748   000BC4  504F               	movf	___fladd@aexp^0,w,c
  3749   000BC6  B4D8               	btfsc	status,2,c
  3750   000BC8  EFE8  F005         	goto	u2331
  3751   000BCC  EFEA  F005         	goto	u2330
  3752   000BD0                     u2331:
  3753   000BD0  EF15  F006         	goto	l2041
  3754   000BD4                     u2330:
  3755   000BD4  0E01               	movlw	1
  3756   000BD6  2642               	addwf	___fladd@b^0,f,c
  3757   000BD8  0E00               	movlw	0
  3758   000BDA  2243               	addwfc	(___fladd@b+1)^0,f,c
  3759   000BDC  2244               	addwfc	(___fladd@b+2)^0,f,c
  3760   000BDE  2245               	addwfc	(___fladd@b+3)^0,f,c
  3761   000BE0  A045               	btfss	(___fladd@b+3)^0,0,c
  3762   000BE2  EFF5  F005         	goto	u2341
  3763   000BE6  EFF7  F005         	goto	u2340
  3764   000BEA                     u2341:
  3765   000BEA  EF15  F006         	goto	l2041
  3766   000BEE                     u2340:
  3767   000BEE  C042  F04A         	movff	___fladd@b,??___fladd
  3768   000BF2  C043  F04B         	movff	___fladd@b+1,??___fladd+1
  3769   000BF6  C044  F04C         	movff	___fladd@b+2,??___fladd+2
  3770   000BFA  C045  F04D         	movff	___fladd@b+3,??___fladd+3
  3771   000BFE  344D               	rlcf	(??___fladd+3)^0,w,c
  3772   000C00  324D               	rrcf	(??___fladd+3)^0,f,c
  3773   000C02  324C               	rrcf	(??___fladd+2)^0,f,c
  3774   000C04  324B               	rrcf	(??___fladd+1)^0,f,c
  3775   000C06  324A               	rrcf	??___fladd^0,f,c
  3776   000C08  C04A  F042         	movff	??___fladd,___fladd@b
  3777   000C0C  C04B  F043         	movff	??___fladd+1,___fladd@b+1
  3778   000C10  C04C  F044         	movff	??___fladd+2,___fladd@b+2
  3779   000C14  C04D  F045         	movff	??___fladd+3,___fladd@b+3
  3780   000C18  2850               	incf	___fladd@bexp^0,w,c
  3781   000C1A  B4D8               	btfsc	status,2,c
  3782   000C1C  EF12  F006         	goto	u2351
  3783   000C20  EF14  F006         	goto	u2350
  3784   000C24                     u2351:
  3785   000C24  EF15  F006         	goto	l2041
  3786   000C28                     u2350:
  3787   000C28  2A50               	incf	___fladd@bexp^0,f,c
  3788   000C2A                     l2041:
  3789   000C2A  2850               	incf	___fladd@bexp^0,w,c
  3790   000C2C  B4D8               	btfsc	status,2,c
  3791   000C2E  EF1B  F006         	goto	u2361
  3792   000C32  EF1D  F006         	goto	u2360
  3793   000C36                     u2361:
  3794   000C36  EF25  F006         	goto	l2045
  3795   000C3A                     u2360:
  3796   000C3A  5050               	movf	___fladd@bexp^0,w,c
  3797   000C3C  A4D8               	btfss	status,2,c
  3798   000C3E  EF23  F006         	goto	u2371
  3799   000C42  EF25  F006         	goto	u2370
  3800   000C46                     u2371:
  3801   000C46  EF36  F006         	goto	l715
  3802   000C4A                     u2370:
  3803   000C4A                     l2045:
  3804   000C4A  0E00               	movlw	0
  3805   000C4C  6E42               	movwf	___fladd@b^0,c
  3806   000C4E  0E00               	movlw	0
  3807   000C50  6E43               	movwf	(___fladd@b+1)^0,c
  3808   000C52  0E00               	movlw	0
  3809   000C54  6E44               	movwf	(___fladd@b+2)^0,c
  3810   000C56  0E00               	movlw	0
  3811   000C58  6E45               	movwf	(___fladd@b+3)^0,c
  3812   000C5A  5050               	movf	___fladd@bexp^0,w,c
  3813   000C5C  A4D8               	btfss	status,2,c
  3814   000C5E  EF33  F006         	goto	u2381
  3815   000C62  EF35  F006         	goto	u2380
  3816   000C66                     u2381:
  3817   000C66  EF36  F006         	goto	l715
  3818   000C6A                     u2380:
  3819   000C6A  6A4E               	clrf	___fladd@signs^0,c
  3820   000C6C                     l715:
  3821   000C6C  A050               	btfss	___fladd@bexp^0,0,c
  3822   000C6E  EF3B  F006         	goto	u2391
  3823   000C72  EF3D  F006         	goto	u2390
  3824   000C76                     u2391:
  3825   000C76  EF40  F006         	goto	l2051
  3826   000C7A                     u2390:
  3827   000C7A  8E44               	bsf	(___fladd@b+2)^0,7,c
  3828   000C7C  EF41  F006         	goto	l2053
  3829   000C80                     l2051:
  3830   000C80  9E44               	bcf	(___fladd@b+2)^0,7,c
  3831   000C82                     l2053:
  3832   000C82  90D8               	bcf	status,0,c
  3833   000C84  3050               	rrcf	___fladd@bexp^0,w,c
  3834   000C86  6E45               	movwf	(___fladd@b+3)^0,c
  3835   000C88  AE4E               	btfss	___fladd@signs^0,7,c
  3836   000C8A  EF49  F006         	goto	u2401
  3837   000C8E  EF4B  F006         	goto	u2400
  3838   000C92                     u2401:
  3839   000C92  EF4C  F006         	goto	l2059
  3840   000C96                     u2400:
  3841   000C96  8E45               	bsf	(___fladd@b+3)^0,7,c
  3842   000C98                     l2059:
  3843   000C98  C042  F042         	movff	___fladd@b,?___fladd
  3844   000C9C  C043  F043         	movff	___fladd@b+1,?___fladd+1
  3845   000CA0  C044  F044         	movff	___fladd@b+2,?___fladd+2
  3846   000CA4  C045  F045         	movff	___fladd@b+3,?___fladd+3
  3847   000CA8                     l691:
  3848   000CA8  0012               	return		;funcret
  3849   000CAA                     __end_of___fladd:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _init_timer2 *****************
  3853 ;; Defined at:
  3854 ;;		line 20 in file "./Init.h"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3868 ;;      Params:         0       0       0       0
  3869 ;;      Locals:         0       0       0       0
  3870 ;;      Temps:          0       0       0       0
  3871 ;;      Totals:         0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 1
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_main
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text7
  3883   001F9C                     __ptext7:
  3884                           	callstack 0
  3885   001F9C                     _init_timer2:
  3886                           	callstack 29
  3887   001F9C                     
  3888                           ;./Init.h: 22:     T2CONbits.T2CKPS = 0b00;
  3889   001F9C  0EFC               	movlw	-4
  3890   001F9E  16CA               	andwf	202,f,c	;volatile
  3891                           
  3892                           ;./Init.h: 23:     PR2 = 9;
  3893   001FA0  0E09               	movlw	9
  3894   001FA2  6ECB               	movwf	203,c	;volatile
  3895   001FA4                     
  3896                           ;./Init.h: 24:     TMR2 = 0;
  3897   001FA4  6ACC               	clrf	204,c	;volatile
  3898   001FA6                     
  3899                           ;./Init.h: 25:     PIR1bits.TMR2IF = 0;
  3900   001FA6  929E               	bcf	158,1,c	;volatile
  3901   001FA8                     
  3902                           ;./Init.h: 26:     PIE1bits.TMR2IE = 1;
  3903   001FA8  829D               	bsf	157,1,c	;volatile
  3904   001FAA                     
  3905                           ;./Init.h: 27:     INTCONbits.GIEH = 1;
  3906   001FAA  8EF2               	bsf	242,7,c	;volatile
  3907   001FAC                     
  3908                           ;./Init.h: 28:     INTCONbits.PEIE = 1;
  3909   001FAC  8CF2               	bsf	242,6,c	;volatile
  3910   001FAE                     
  3911                           ;./Init.h: 29:     T2CONbits.TMR2ON = 1;
  3912   001FAE  84CA               	bsf	202,2,c	;volatile
  3913   001FB0  0012               	return		;funcret
  3914   001FB2                     __end_of_init_timer2:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _displayOLED *****************
  3918 ;; Defined at:
  3919 ;;		line 14 in file "main.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  i               2   23[COMRAM] int 
  3922 ;;  j               2   25[COMRAM] int 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  servoThetaPo    2   34[COMRAM] int 
  3925 ;;  servoPhiPosi    2   32[COMRAM] int 
  3926 ;;  combinedValu    1   31[COMRAM] unsigned char 
  3927 ;;  tiltHex         1   30[COMRAM] unsigned char 
  3928 ;;  panHex          1   29[COMRAM] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3938 ;;      Params:         4       0       0       0
  3939 ;;      Locals:         7       0       0       0
  3940 ;;      Temps:          2       0       0       0
  3941 ;;      Totals:        13       0       0       0
  3942 ;;Total ram usage:       13 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; Hardware stack levels required when called: 3
  3945 ;; This function calls:
  3946 ;;		_UART_Transmit
  3947 ;;		_convertPanAngle
  3948 ;;		_convertTiltAngle
  3949 ;;		_getServoAngles
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text8
  3956   001F16                     __ptext8:
  3957                           	callstack 0
  3958   001F16                     _displayOLED:
  3959                           	callstack 27
  3960   001F16                     
  3961                           ;main.c: 15:     int servoThetaPosition = 0, servoPhiPosition = 0;
  3962   001F16  0E00               	movlw	0
  3963   001F18  6E24               	movwf	(displayOLED@servoThetaPosition+1)^0,c
  3964   001F1A  0E00               	movlw	0
  3965   001F1C  6E23               	movwf	displayOLED@servoThetaPosition^0,c
  3966   001F1E  0E00               	movlw	0
  3967   001F20  6E22               	movwf	(displayOLED@servoPhiPosition+1)^0,c
  3968   001F22  0E00               	movlw	0
  3969   001F24  6E21               	movwf	displayOLED@servoPhiPosition^0,c
  3970   001F26                     
  3971                           ;main.c: 16:     getServoAngles(i, j, &servoThetaPosition, &servoPhiPosition, 0);
  3972   001F26  C018  F00A         	movff	displayOLED@i,getServoAngles@i
  3973   001F2A  C019  F00B         	movff	displayOLED@i+1,getServoAngles@i+1
  3974   001F2E  C01A  F00C         	movff	displayOLED@j,getServoAngles@j
  3975   001F32  C01B  F00D         	movff	displayOLED@j+1,getServoAngles@j+1
  3976   001F36  0E23               	movlw	low displayOLED@servoThetaPosition
  3977   001F38  6E0E               	movwf	getServoAngles@servoThetaPosition^0,c
  3978   001F3A  0E21               	movlw	low displayOLED@servoPhiPosition
  3979   001F3C  6E0F               	movwf	getServoAngles@servoPhiPosition^0,c
  3980   001F3E  0E00               	movlw	0
  3981   001F40  6E11               	movwf	(getServoAngles@scanMode+1)^0,c
  3982   001F42  0E00               	movlw	0
  3983   001F44  6E10               	movwf	getServoAngles@scanMode^0,c
  3984   001F46  EC90  F00B         	call	_getServoAngles	;wreg free
  3985   001F4A                     
  3986                           ;main.c: 17:     unsigned char panHex = convertPanAngle(servoThetaPosition);
  3987   001F4A  C023  F00A         	movff	displayOLED@servoThetaPosition,convertPanAngle@angle
  3988   001F4E  C024  F00B         	movff	displayOLED@servoThetaPosition+1,convertPanAngle@angle+1
  3989   001F52  EC75  F00E         	call	_convertPanAngle	;wreg free
  3990   001F56  6E1E               	movwf	displayOLED@panHex^0,c
  3991   001F58                     
  3992                           ;main.c: 18:     unsigned char tiltHex = convertTiltAngle(servoPhiPosition);
  3993   001F58  C021  F00A         	movff	displayOLED@servoPhiPosition,convertTiltAngle@angle
  3994   001F5C  C022  F00B         	movff	displayOLED@servoPhiPosition+1,convertTiltAngle@angle+1
  3995   001F60  ECD5  F00E         	call	_convertTiltAngle	;wreg free
  3996   001F64  6E1F               	movwf	displayOLED@tiltHex^0,c
  3997   001F66                     
  3998                           ;main.c: 19:     unsigned char combinedValue = (unsigned char)((panHex & 0x0F) << 4) | (
      +                          tiltHex & 0x0F);
  3999   001F66  C01F  F01C         	movff	displayOLED@tiltHex,??_displayOLED
  4000   001F6A  0E0F               	movlw	15
  4001   001F6C  161C               	andwf	??_displayOLED^0,f,c
  4002   001F6E  C01E  F01D         	movff	displayOLED@panHex,??_displayOLED+1
  4003   001F72  0E0F               	movlw	15
  4004   001F74  161D               	andwf	(??_displayOLED+1)^0,f,c
  4005   001F76  381D               	swapf	(??_displayOLED+1)^0,w,c
  4006   001F78  0BF0               	andlw	240
  4007   001F7A  101C               	iorwf	??_displayOLED^0,w,c
  4008   001F7C  6E20               	movwf	displayOLED@combinedValue^0,c
  4009   001F7E                     
  4010                           ;main.c: 20:     UART_Transmit(combinedValue);
  4011   001F7E  5020               	movf	displayOLED@combinedValue^0,w,c
  4012   001F80  ECD9  F00F         	call	_UART_Transmit
  4013   001F84  0012               	return		;funcret
  4014   001F86                     __end_of_displayOLED:
  4015                           	callstack 0
  4016                           
  4017 ;; *************** function _getServoAngles *****************
  4018 ;; Defined at:
  4019 ;;		line 12 in file "./ServoFunctions.h"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  i               2    9[COMRAM] int 
  4022 ;;  j               2   11[COMRAM] int 
  4023 ;;  servoThetaPo    1   13[COMRAM] PTR int 
  4024 ;;		 -> displayOLED@servoThetaPosition(2), setServoHighTime@servoThetaPosition(2), 
  4025 ;;  servoPhiPosi    1   14[COMRAM] PTR int 
  4026 ;;		 -> displayOLED@servoPhiPosition(2), setServoHighTime@servoPhiPosition(2), 
  4027 ;;  scanMode        2   15[COMRAM] int 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4039 ;;      Params:         8       0       0       0
  4040 ;;      Locals:         0       0       0       0
  4041 ;;      Temps:          6       0       0       0
  4042 ;;      Totals:        14       0       0       0
  4043 ;;Total ram usage:       14 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 2
  4046 ;; This function calls:
  4047 ;;		___awdiv
  4048 ;; This function is called by:
  4049 ;;		_setServoHighTime
  4050 ;;		_displayOLED
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text9
  4055   001720                     __ptext9:
  4056                           	callstack 0
  4057   001720                     _getServoAngles:
  4058                           	callstack 27
  4059   001720                     
  4060                           ;./ServoFunctions.h: 13:     if(i < 32/2) {
  4061   001720  BE0B               	btfsc	(getServoAngles@i+1)^0,7,c
  4062   001722  EF9E  F00B         	goto	u1890
  4063   001726  500B               	movf	(getServoAngles@i+1)^0,w,c
  4064   001728  E107               	bnz	u1891
  4065   00172A  0E10               	movlw	16
  4066   00172C  5C0A               	subwf	getServoAngles@i^0,w,c
  4067   00172E  B0D8               	btfsc	status,0,c
  4068   001730  EF9C  F00B         	goto	u1891
  4069   001734  EF9E  F00B         	goto	u1890
  4070   001738                     u1891:
  4071   001738  EF15  F00C         	goto	l1847
  4072   00173C                     u1890:
  4073   00173C                     
  4074                           ;./ServoFunctions.h: 14:   if(i % 2 == 1 && scanMode == 1) {
  4075   00173C  A00A               	btfss	getServoAngles@i^0,0,c
  4076   00173E  EFA3  F00B         	goto	u1901
  4077   001742  EFA5  F00B         	goto	u1900
  4078   001746                     u1901:
  4079   001746  EFCC  F00B         	goto	l80
  4080   00174A                     u1900:
  4081   00174A  0410               	decf	getServoAngles@scanMode^0,w,c
  4082   00174C  1011               	iorwf	(getServoAngles@scanMode+1)^0,w,c
  4083   00174E  A4D8               	btfss	status,2,c
  4084   001750  EFAC  F00B         	goto	u1911
  4085   001754  EFAE  F00B         	goto	u1910
  4086   001758                     u1911:
  4087   001758  EFCC  F00B         	goto	l80
  4088   00175C                     u1910:
  4089   00175C                     
  4090                           ;./ServoFunctions.h: 15:    *servoThetaPosition = 180 - j*(180 / 36);
  4091   00175C  0EFB               	movlw	251
  4092   00175E  6E12               	movwf	??_getServoAngles^0,c
  4093   001760  0EFF               	movlw	255
  4094   001762  6E13               	movwf	(??_getServoAngles+1)^0,c
  4095   001764  5012               	movf	??_getServoAngles^0,w,c
  4096   001766  020C               	mulwf	getServoAngles@j^0,c
  4097   001768  CFF3 F014          	movff	prodl,??_getServoAngles+2
  4098   00176C  CFF4 F015          	movff	prodh,??_getServoAngles+3
  4099   001770  020D               	mulwf	(getServoAngles@j+1)^0,c
  4100   001772  50F3               	movf	prodl,w,c
  4101   001774  2615               	addwf	(??_getServoAngles+3)^0,f,c
  4102   001776  5013               	movf	(??_getServoAngles+1)^0,w,c
  4103   001778  020C               	mulwf	getServoAngles@j^0,c
  4104   00177A  50F3               	movf	prodl,w,c
  4105   00177C  2615               	addwf	(??_getServoAngles+3)^0,f,c
  4106   00177E  0EB4               	movlw	180
  4107   001780  2614               	addwf	(??_getServoAngles+2)^0,f,c
  4108   001782  0E00               	movlw	0
  4109   001784  2215               	addwfc	(??_getServoAngles+3)^0,f,c
  4110   001786  500E               	movf	getServoAngles@servoThetaPosition^0,w,c
  4111   001788  6ED9               	movwf	fsr2l,c
  4112   00178A  6ADA               	clrf	fsr2h,c
  4113   00178C  C014  FFDE         	movff	??_getServoAngles+2,postinc2
  4114   001790  C015  FFDD         	movff	??_getServoAngles+3,postdec2
  4115                           
  4116                           ;./ServoFunctions.h: 16:   } else if(i % 2 == 0 && scanMode == 1) {
  4117   001794  EFF9  F00B         	goto	l1845
  4118   001798                     l80:
  4119   001798  B00A               	btfsc	getServoAngles@i^0,0,c
  4120   00179A  EFD1  F00B         	goto	u1921
  4121   00179E  EFD3  F00B         	goto	u1920
  4122   0017A2                     u1921:
  4123   0017A2  EFEE  F00B         	goto	l1841
  4124   0017A6                     u1920:
  4125   0017A6  0410               	decf	getServoAngles@scanMode^0,w,c
  4126   0017A8  1011               	iorwf	(getServoAngles@scanMode+1)^0,w,c
  4127   0017AA  A4D8               	btfss	status,2,c
  4128   0017AC  EFDA  F00B         	goto	u1931
  4129   0017B0  EFDC  F00B         	goto	u1930
  4130   0017B4                     u1931:
  4131   0017B4  EFEE  F00B         	goto	l1841
  4132   0017B8                     u1930:
  4133   0017B8                     l1839:
  4134                           
  4135                           ;./ServoFunctions.h: 17:    *servoThetaPosition = j*(180 / 36);
  4136   0017B8  0E05               	movlw	5
  4137   0017BA  020C               	mulwf	getServoAngles@j^0,c
  4138   0017BC  CFF3 F012          	movff	prodl,??_getServoAngles
  4139   0017C0  CFF4 F013          	movff	prodh,??_getServoAngles+1
  4140   0017C4  020D               	mulwf	(getServoAngles@j+1)^0,c
  4141   0017C6  50F3               	movf	prodl,w,c
  4142   0017C8  2613               	addwf	(??_getServoAngles+1)^0,f,c
  4143   0017CA  500E               	movf	getServoAngles@servoThetaPosition^0,w,c
  4144   0017CC  6ED9               	movwf	fsr2l,c
  4145   0017CE  6ADA               	clrf	fsr2h,c
  4146   0017D0  C012  FFDE         	movff	??_getServoAngles,postinc2
  4147   0017D4  C013  FFDD         	movff	??_getServoAngles+1,postdec2
  4148                           
  4149                           ;./ServoFunctions.h: 18:   } else if(scanMode == 0) {
  4150   0017D8  EFF9  F00B         	goto	l1845
  4151   0017DC                     l1841:
  4152   0017DC  5010               	movf	getServoAngles@scanMode^0,w,c
  4153   0017DE  1011               	iorwf	(getServoAngles@scanMode+1)^0,w,c
  4154   0017E0  A4D8               	btfss	status,2,c
  4155   0017E2  EFF5  F00B         	goto	u1941
  4156   0017E6  EFF7  F00B         	goto	u1940
  4157   0017EA                     u1941:
  4158   0017EA  EFF9  F00B         	goto	l1845
  4159   0017EE                     u1940:
  4160   0017EE  EFDC  F00B         	goto	l1839
  4161   0017F2                     l1845:
  4162                           
  4163                           ;./ServoFunctions.h: 21:   *servoPhiPosition = i * 80 / (32/2);
  4164   0017F2  0E50               	movlw	80
  4165   0017F4  020A               	mulwf	getServoAngles@i^0,c
  4166   0017F6  CFF3 F012          	movff	prodl,??_getServoAngles
  4167   0017FA  CFF4 F013          	movff	prodh,??_getServoAngles+1
  4168   0017FE  020B               	mulwf	(getServoAngles@i+1)^0,c
  4169   001800  50F3               	movf	prodl,w,c
  4170   001802  2613               	addwf	(??_getServoAngles+1)^0,f,c
  4171   001804  C012  F002         	movff	??_getServoAngles,___awdiv@dividend
  4172   001808  C013  F003         	movff	??_getServoAngles+1,___awdiv@dividend+1
  4173   00180C  0E00               	movlw	0
  4174   00180E  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4175   001810  0E10               	movlw	16
  4176   001812  6E04               	movwf	___awdiv@divisor^0,c
  4177   001814  EC14  F00E         	call	___awdiv	;wreg free
  4178   001818  500F               	movf	getServoAngles@servoPhiPosition^0,w,c
  4179   00181A  6ED9               	movwf	fsr2l,c
  4180   00181C  6ADA               	clrf	fsr2h,c
  4181   00181E  C002  FFDE         	movff	?___awdiv,postinc2
  4182   001822  C003  FFDD         	movff	?___awdiv+1,postdec2
  4183                           
  4184                           ;./ServoFunctions.h: 22:  } else if ((i >= 32/2) && (i < 32)){
  4185   001826  EFB6  F00C         	goto	l93
  4186   00182A                     l1847:
  4187   00182A  BE0B               	btfsc	(getServoAngles@i+1)^0,7,c
  4188   00182C  EF21  F00C         	goto	u1951
  4189   001830  500B               	movf	(getServoAngles@i+1)^0,w,c
  4190   001832  E109               	bnz	u1950
  4191   001834  0E10               	movlw	16
  4192   001836  5C0A               	subwf	getServoAngles@i^0,w,c
  4193   001838  A0D8               	btfss	status,0,c
  4194   00183A  EF21  F00C         	goto	u1951
  4195   00183E  EF23  F00C         	goto	u1950
  4196   001842                     u1951:
  4197   001842  EFB6  F00C         	goto	l1867
  4198   001846                     u1950:
  4199   001846  BE0B               	btfsc	(getServoAngles@i+1)^0,7,c
  4200   001848  EF31  F00C         	goto	u1960
  4201   00184C  500B               	movf	(getServoAngles@i+1)^0,w,c
  4202   00184E  E107               	bnz	u1961
  4203   001850  0E20               	movlw	32
  4204   001852  5C0A               	subwf	getServoAngles@i^0,w,c
  4205   001854  B0D8               	btfsc	status,0,c
  4206   001856  EF2F  F00C         	goto	u1961
  4207   00185A  EF31  F00C         	goto	u1960
  4208   00185E                     u1961:
  4209   00185E  EFB6  F00C         	goto	l1867
  4210   001862                     u1960:
  4211   001862                     
  4212                           ;./ServoFunctions.h: 23:   if(i % 2 == 1 && scanMode == 1) {
  4213   001862  A00A               	btfss	getServoAngles@i^0,0,c
  4214   001864  EF36  F00C         	goto	u1971
  4215   001868  EF38  F00C         	goto	u1970
  4216   00186C                     u1971:
  4217   00186C  EF5F  F00C         	goto	l87
  4218   001870                     u1970:
  4219   001870  0410               	decf	getServoAngles@scanMode^0,w,c
  4220   001872  1011               	iorwf	(getServoAngles@scanMode+1)^0,w,c
  4221   001874  A4D8               	btfss	status,2,c
  4222   001876  EF3F  F00C         	goto	u1981
  4223   00187A  EF41  F00C         	goto	u1980
  4224   00187E                     u1981:
  4225   00187E  EF5F  F00C         	goto	l87
  4226   001882                     u1980:
  4227   001882                     
  4228                           ;./ServoFunctions.h: 24:    *servoThetaPosition = 180 - j*(180 / 36);
  4229   001882  0EFB               	movlw	251
  4230   001884  6E12               	movwf	??_getServoAngles^0,c
  4231   001886  0EFF               	movlw	255
  4232   001888  6E13               	movwf	(??_getServoAngles+1)^0,c
  4233   00188A  5012               	movf	??_getServoAngles^0,w,c
  4234   00188C  020C               	mulwf	getServoAngles@j^0,c
  4235   00188E  CFF3 F014          	movff	prodl,??_getServoAngles+2
  4236   001892  CFF4 F015          	movff	prodh,??_getServoAngles+3
  4237   001896  020D               	mulwf	(getServoAngles@j+1)^0,c
  4238   001898  50F3               	movf	prodl,w,c
  4239   00189A  2615               	addwf	(??_getServoAngles+3)^0,f,c
  4240   00189C  5013               	movf	(??_getServoAngles+1)^0,w,c
  4241   00189E  020C               	mulwf	getServoAngles@j^0,c
  4242   0018A0  50F3               	movf	prodl,w,c
  4243   0018A2  2615               	addwf	(??_getServoAngles+3)^0,f,c
  4244   0018A4  0EB4               	movlw	180
  4245   0018A6  2614               	addwf	(??_getServoAngles+2)^0,f,c
  4246   0018A8  0E00               	movlw	0
  4247   0018AA  2215               	addwfc	(??_getServoAngles+3)^0,f,c
  4248   0018AC  500E               	movf	getServoAngles@servoThetaPosition^0,w,c
  4249   0018AE  6ED9               	movwf	fsr2l,c
  4250   0018B0  6ADA               	clrf	fsr2h,c
  4251   0018B2  C014  FFDE         	movff	??_getServoAngles+2,postinc2
  4252   0018B6  C015  FFDD         	movff	??_getServoAngles+3,postdec2
  4253                           
  4254                           ;./ServoFunctions.h: 25:   } else if(i % 2 == 0 && scanMode == 1) {
  4255   0018BA  EF8C  F00C         	goto	l1865
  4256   0018BE                     l87:
  4257   0018BE  B00A               	btfsc	getServoAngles@i^0,0,c
  4258   0018C0  EF64  F00C         	goto	u1991
  4259   0018C4  EF66  F00C         	goto	u1990
  4260   0018C8                     u1991:
  4261   0018C8  EF81  F00C         	goto	l1861
  4262   0018CC                     u1990:
  4263   0018CC  0410               	decf	getServoAngles@scanMode^0,w,c
  4264   0018CE  1011               	iorwf	(getServoAngles@scanMode+1)^0,w,c
  4265   0018D0  A4D8               	btfss	status,2,c
  4266   0018D2  EF6D  F00C         	goto	u2001
  4267   0018D6  EF6F  F00C         	goto	u2000
  4268   0018DA                     u2001:
  4269   0018DA  EF81  F00C         	goto	l1861
  4270   0018DE                     u2000:
  4271   0018DE                     l1859:
  4272                           
  4273                           ;./ServoFunctions.h: 26:    *servoThetaPosition = j*(180 / 36);
  4274   0018DE  0E05               	movlw	5
  4275   0018E0  020C               	mulwf	getServoAngles@j^0,c
  4276   0018E2  CFF3 F012          	movff	prodl,??_getServoAngles
  4277   0018E6  CFF4 F013          	movff	prodh,??_getServoAngles+1
  4278   0018EA  020D               	mulwf	(getServoAngles@j+1)^0,c
  4279   0018EC  50F3               	movf	prodl,w,c
  4280   0018EE  2613               	addwf	(??_getServoAngles+1)^0,f,c
  4281   0018F0  500E               	movf	getServoAngles@servoThetaPosition^0,w,c
  4282   0018F2  6ED9               	movwf	fsr2l,c
  4283   0018F4  6ADA               	clrf	fsr2h,c
  4284   0018F6  C012  FFDE         	movff	??_getServoAngles,postinc2
  4285   0018FA  C013  FFDD         	movff	??_getServoAngles+1,postdec2
  4286                           
  4287                           ;./ServoFunctions.h: 27:   } else if(scanMode == 0) {
  4288   0018FE  EF8C  F00C         	goto	l1865
  4289   001902                     l1861:
  4290   001902  5010               	movf	getServoAngles@scanMode^0,w,c
  4291   001904  1011               	iorwf	(getServoAngles@scanMode+1)^0,w,c
  4292   001906  A4D8               	btfss	status,2,c
  4293   001908  EF88  F00C         	goto	u2011
  4294   00190C  EF8A  F00C         	goto	u2010
  4295   001910                     u2011:
  4296   001910  EF8C  F00C         	goto	l1865
  4297   001914                     u2010:
  4298   001914  EF6F  F00C         	goto	l1859
  4299   001918                     l1865:
  4300                           
  4301                           ;./ServoFunctions.h: 30:   *servoPhiPosition = 80 - (i-32/2+1) * 80 / (32/2);
  4302   001918  0EF1               	movlw	241
  4303   00191A  240A               	addwf	getServoAngles@i^0,w,c
  4304   00191C  6E12               	movwf	??_getServoAngles^0,c
  4305   00191E  0EFF               	movlw	255
  4306   001920  200B               	addwfc	(getServoAngles@i+1)^0,w,c
  4307   001922  6E13               	movwf	(??_getServoAngles+1)^0,c
  4308   001924  0E50               	movlw	80
  4309   001926  0212               	mulwf	??_getServoAngles^0,c
  4310   001928  CFF3 F014          	movff	prodl,??_getServoAngles+2
  4311   00192C  CFF4 F015          	movff	prodh,??_getServoAngles+3
  4312   001930  0213               	mulwf	(??_getServoAngles+1)^0,c
  4313   001932  50F3               	movf	prodl,w,c
  4314   001934  2615               	addwf	(??_getServoAngles+3)^0,f,c
  4315   001936  C014  F002         	movff	??_getServoAngles+2,___awdiv@dividend
  4316   00193A  C015  F003         	movff	??_getServoAngles+3,___awdiv@dividend+1
  4317   00193E  0E00               	movlw	0
  4318   001940  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4319   001942  0E10               	movlw	16
  4320   001944  6E04               	movwf	___awdiv@divisor^0,c
  4321   001946  EC14  F00E         	call	___awdiv	;wreg free
  4322   00194A  5002               	movf	?___awdiv^0,w,c
  4323   00194C  0850               	sublw	80
  4324   00194E  6E16               	movwf	(??_getServoAngles+4)^0,c
  4325   001950  5003               	movf	(?___awdiv+1)^0,w,c
  4326   001952  A0D8               	btfss	status,0,c
  4327   001954  2AE8               	incf	wreg,f,c
  4328   001956  0800               	sublw	0
  4329   001958  6E17               	movwf	(??_getServoAngles+5)^0,c
  4330   00195A  500F               	movf	getServoAngles@servoPhiPosition^0,w,c
  4331   00195C  6ED9               	movwf	fsr2l,c
  4332   00195E  6ADA               	clrf	fsr2h,c
  4333   001960  C016  FFDE         	movff	??_getServoAngles+4,postinc2
  4334   001964  C017  FFDD         	movff	??_getServoAngles+5,postdec2
  4335                           
  4336                           ;./ServoFunctions.h: 31:  } else {
  4337   001968  EFB6  F00C         	goto	l93
  4338   00196C                     l1867:
  4339   00196C                     l93:
  4340   00196C  0012               	return		;funcret
  4341   00196E                     __end_of_getServoAngles:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _convertTiltAngle *****************
  4345 ;; Defined at:
  4346 ;;		line 46 in file "./Init.h"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  angle           2    9[COMRAM] int 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      unsigned char 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4360 ;;      Params:         2       0       0       0
  4361 ;;      Locals:         0       0       0       0
  4362 ;;      Temps:          4       0       0       0
  4363 ;;      Totals:         6       0       0       0
  4364 ;;Total ram usage:        6 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 2
  4367 ;; This function calls:
  4368 ;;		___awdiv
  4369 ;; This function is called by:
  4370 ;;		_displayOLED
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text10
  4375   001DAA                     __ptext10:
  4376                           	callstack 0
  4377   001DAA                     _convertTiltAngle:
  4378                           	callstack 27
  4379   001DAA                     
  4380                           ;./Init.h: 48:     if (angle < 0) angle = 0;
  4381   001DAA  BE0B               	btfsc	(convertTiltAngle@angle+1)^0,7,c
  4382   001DAC  EFDC  F00E         	goto	u1860
  4383   001DB0  EFDA  F00E         	goto	u1861
  4384   001DB4                     u1861:
  4385   001DB4  EFE0  F00E         	goto	l1813
  4386   001DB8                     u1860:
  4387   001DB8  0E00               	movlw	0
  4388   001DBA  6E0B               	movwf	(convertTiltAngle@angle+1)^0,c
  4389   001DBC  0E00               	movlw	0
  4390   001DBE  6E0A               	movwf	convertTiltAngle@angle^0,c
  4391   001DC0                     l1813:
  4392                           
  4393                           ;./Init.h: 49:     if (angle > 90) angle = 90;
  4394   001DC0  BE0B               	btfsc	(convertTiltAngle@angle+1)^0,7,c
  4395   001DC2  EFEC  F00E         	goto	u1871
  4396   001DC6  500B               	movf	(convertTiltAngle@angle+1)^0,w,c
  4397   001DC8  E109               	bnz	u1870
  4398   001DCA  0E5B               	movlw	91
  4399   001DCC  5C0A               	subwf	convertTiltAngle@angle^0,w,c
  4400   001DCE  A0D8               	btfss	status,0,c
  4401   001DD0  EFEC  F00E         	goto	u1871
  4402   001DD4  EFEE  F00E         	goto	u1870
  4403   001DD8                     u1871:
  4404   001DD8  EFF2  F00E         	goto	l1817
  4405   001DDC                     u1870:
  4406   001DDC  0E00               	movlw	0
  4407   001DDE  6E0B               	movwf	(convertTiltAngle@angle+1)^0,c
  4408   001DE0  0E5A               	movlw	90
  4409   001DE2  6E0A               	movwf	convertTiltAngle@angle^0,c
  4410   001DE4                     l1817:
  4411                           
  4412                           ;./Init.h: 50:     angle /= 9;
  4413   001DE4  C00A  F002         	movff	convertTiltAngle@angle,___awdiv@dividend
  4414   001DE8  C00B  F003         	movff	convertTiltAngle@angle+1,___awdiv@dividend+1
  4415   001DEC  0E00               	movlw	0
  4416   001DEE  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4417   001DF0  0E09               	movlw	9
  4418   001DF2  6E04               	movwf	___awdiv@divisor^0,c
  4419   001DF4  EC14  F00E         	call	___awdiv	;wreg free
  4420   001DF8  C002  F00A         	movff	?___awdiv,convertTiltAngle@angle
  4421   001DFC  C003  F00B         	movff	?___awdiv+1,convertTiltAngle@angle+1
  4422   001E00                     
  4423                           ;./Init.h: 51:  angle = (angle % 2) ? ((angle+1)*9) : (angle*9);
  4424   001E00  B00A               	btfsc	convertTiltAngle@angle^0,0,c
  4425   001E02  EF05  F00F         	goto	u1881
  4426   001E06  EF07  F00F         	goto	u1880
  4427   001E0A                     u1881:
  4428   001E0A  EF16  F00F         	goto	l1823
  4429   001E0E                     u1880:
  4430   001E0E  0E09               	movlw	9
  4431   001E10  020A               	mulwf	convertTiltAngle@angle^0,c
  4432   001E12  CFF3 F00C          	movff	prodl,??_convertTiltAngle
  4433   001E16  CFF4 F00D          	movff	prodh,??_convertTiltAngle+1
  4434   001E1A  020B               	mulwf	(convertTiltAngle@angle+1)^0,c
  4435   001E1C  50F3               	movf	prodl,w,c
  4436   001E1E  260D               	addwf	(??_convertTiltAngle+1)^0,f,c
  4437   001E20  C00C  F00A         	movff	??_convertTiltAngle,convertTiltAngle@angle
  4438   001E24  C00D  F00B         	movff	??_convertTiltAngle+1,convertTiltAngle@angle+1
  4439   001E28  EF29  F00F         	goto	l1825
  4440   001E2C                     l1823:
  4441   001E2C  0E01               	movlw	1
  4442   001E2E  240A               	addwf	convertTiltAngle@angle^0,w,c
  4443   001E30  6E0C               	movwf	??_convertTiltAngle^0,c
  4444   001E32  0E00               	movlw	0
  4445   001E34  200B               	addwfc	(convertTiltAngle@angle+1)^0,w,c
  4446   001E36  6E0D               	movwf	(??_convertTiltAngle+1)^0,c
  4447   001E38  0E09               	movlw	9
  4448   001E3A  020C               	mulwf	??_convertTiltAngle^0,c
  4449   001E3C  CFF3 F00E          	movff	prodl,??_convertTiltAngle+2
  4450   001E40  CFF4 F00F          	movff	prodh,??_convertTiltAngle+3
  4451   001E44  020D               	mulwf	(??_convertTiltAngle+1)^0,c
  4452   001E46  50F3               	movf	prodl,w,c
  4453   001E48  260F               	addwf	(??_convertTiltAngle+3)^0,f,c
  4454   001E4A  C00E  F00A         	movff	??_convertTiltAngle+2,convertTiltAngle@angle
  4455   001E4E  C00F  F00B         	movff	??_convertTiltAngle+3,convertTiltAngle@angle+1
  4456   001E52                     l1825:
  4457                           
  4458                           ;./Init.h: 52:     return (unsigned char) angle / 18;
  4459   001E52  C00A  F002         	movff	convertTiltAngle@angle,___awdiv@dividend
  4460   001E56  6A03               	clrf	(___awdiv@dividend+1)^0,c
  4461   001E58  0E00               	movlw	0
  4462   001E5A  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4463   001E5C  0E12               	movlw	18
  4464   001E5E  6E04               	movwf	___awdiv@divisor^0,c
  4465   001E60  EC14  F00E         	call	___awdiv	;wreg free
  4466   001E64  5002               	movf	?___awdiv^0,w,c
  4467   001E66  0012               	return		;funcret
  4468   001E68                     __end_of_convertTiltAngle:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _convertPanAngle *****************
  4472 ;; Defined at:
  4473 ;;		line 37 in file "./Init.h"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  angle           2    9[COMRAM] int 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      unsigned char 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4487 ;;      Params:         2       0       0       0
  4488 ;;      Locals:         0       0       0       0
  4489 ;;      Temps:          4       0       0       0
  4490 ;;      Totals:         6       0       0       0
  4491 ;;Total ram usage:        6 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 2
  4494 ;; This function calls:
  4495 ;;		___awdiv
  4496 ;; This function is called by:
  4497 ;;		_displayOLED
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text11
  4502   001CEA                     __ptext11:
  4503                           	callstack 0
  4504   001CEA                     _convertPanAngle:
  4505                           	callstack 27
  4506   001CEA                     
  4507                           ;./Init.h: 39:     if (angle < 0) angle = 0;
  4508   001CEA  BE0B               	btfsc	(convertPanAngle@angle+1)^0,7,c
  4509   001CEC  EF7C  F00E         	goto	u1830
  4510   001CF0  EF7A  F00E         	goto	u1831
  4511   001CF4                     u1831:
  4512   001CF4  EF80  F00E         	goto	l1793
  4513   001CF8                     u1830:
  4514   001CF8  0E00               	movlw	0
  4515   001CFA  6E0B               	movwf	(convertPanAngle@angle+1)^0,c
  4516   001CFC  0E00               	movlw	0
  4517   001CFE  6E0A               	movwf	convertPanAngle@angle^0,c
  4518   001D00                     l1793:
  4519                           
  4520                           ;./Init.h: 40:     if (angle > 180) angle = 180;
  4521   001D00  BE0B               	btfsc	(convertPanAngle@angle+1)^0,7,c
  4522   001D02  EF8C  F00E         	goto	u1841
  4523   001D06  500B               	movf	(convertPanAngle@angle+1)^0,w,c
  4524   001D08  E109               	bnz	u1840
  4525   001D0A  0EB5               	movlw	181
  4526   001D0C  5C0A               	subwf	convertPanAngle@angle^0,w,c
  4527   001D0E  A0D8               	btfss	status,0,c
  4528   001D10  EF8C  F00E         	goto	u1841
  4529   001D14  EF8E  F00E         	goto	u1840
  4530   001D18                     u1841:
  4531   001D18  EF92  F00E         	goto	l1797
  4532   001D1C                     u1840:
  4533   001D1C  0E00               	movlw	0
  4534   001D1E  6E0B               	movwf	(convertPanAngle@angle+1)^0,c
  4535   001D20  0EB4               	movlw	180
  4536   001D22  6E0A               	movwf	convertPanAngle@angle^0,c
  4537   001D24                     l1797:
  4538                           
  4539                           ;./Init.h: 41:     angle /= 18;
  4540   001D24  C00A  F002         	movff	convertPanAngle@angle,___awdiv@dividend
  4541   001D28  C00B  F003         	movff	convertPanAngle@angle+1,___awdiv@dividend+1
  4542   001D2C  0E00               	movlw	0
  4543   001D2E  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4544   001D30  0E12               	movlw	18
  4545   001D32  6E04               	movwf	___awdiv@divisor^0,c
  4546   001D34  EC14  F00E         	call	___awdiv	;wreg free
  4547   001D38  C002  F00A         	movff	?___awdiv,convertPanAngle@angle
  4548   001D3C  C003  F00B         	movff	?___awdiv+1,convertPanAngle@angle+1
  4549   001D40                     
  4550                           ;./Init.h: 42:  angle = (angle % 2) ? ((angle+1)*18) : (angle*18);
  4551   001D40  B00A               	btfsc	convertPanAngle@angle^0,0,c
  4552   001D42  EFA5  F00E         	goto	u1851
  4553   001D46  EFA7  F00E         	goto	u1850
  4554   001D4A                     u1851:
  4555   001D4A  EFB6  F00E         	goto	l1803
  4556   001D4E                     u1850:
  4557   001D4E  0E12               	movlw	18
  4558   001D50  020A               	mulwf	convertPanAngle@angle^0,c
  4559   001D52  CFF3 F00C          	movff	prodl,??_convertPanAngle
  4560   001D56  CFF4 F00D          	movff	prodh,??_convertPanAngle+1
  4561   001D5A  020B               	mulwf	(convertPanAngle@angle+1)^0,c
  4562   001D5C  50F3               	movf	prodl,w,c
  4563   001D5E  260D               	addwf	(??_convertPanAngle+1)^0,f,c
  4564   001D60  C00C  F00A         	movff	??_convertPanAngle,convertPanAngle@angle
  4565   001D64  C00D  F00B         	movff	??_convertPanAngle+1,convertPanAngle@angle+1
  4566   001D68  EFC9  F00E         	goto	l1805
  4567   001D6C                     l1803:
  4568   001D6C  0E01               	movlw	1
  4569   001D6E  240A               	addwf	convertPanAngle@angle^0,w,c
  4570   001D70  6E0C               	movwf	??_convertPanAngle^0,c
  4571   001D72  0E00               	movlw	0
  4572   001D74  200B               	addwfc	(convertPanAngle@angle+1)^0,w,c
  4573   001D76  6E0D               	movwf	(??_convertPanAngle+1)^0,c
  4574   001D78  0E12               	movlw	18
  4575   001D7A  020C               	mulwf	??_convertPanAngle^0,c
  4576   001D7C  CFF3 F00E          	movff	prodl,??_convertPanAngle+2
  4577   001D80  CFF4 F00F          	movff	prodh,??_convertPanAngle+3
  4578   001D84  020D               	mulwf	(??_convertPanAngle+1)^0,c
  4579   001D86  50F3               	movf	prodl,w,c
  4580   001D88  260F               	addwf	(??_convertPanAngle+3)^0,f,c
  4581   001D8A  C00E  F00A         	movff	??_convertPanAngle+2,convertPanAngle@angle
  4582   001D8E  C00F  F00B         	movff	??_convertPanAngle+3,convertPanAngle@angle+1
  4583   001D92                     l1805:
  4584                           
  4585                           ;./Init.h: 43:     return (unsigned char) angle / 36 + 10;
  4586   001D92  C00A  F002         	movff	convertPanAngle@angle,___awdiv@dividend
  4587   001D96  6A03               	clrf	(___awdiv@dividend+1)^0,c
  4588   001D98  0E00               	movlw	0
  4589   001D9A  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4590   001D9C  0E24               	movlw	36
  4591   001D9E  6E04               	movwf	___awdiv@divisor^0,c
  4592   001DA0  EC14  F00E         	call	___awdiv	;wreg free
  4593   001DA4  5002               	movf	?___awdiv^0,w,c
  4594   001DA6  0F0A               	addlw	10
  4595   001DA8  0012               	return		;funcret
  4596   001DAA                     __end_of_convertPanAngle:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function ___awdiv *****************
  4600 ;; Defined at:
  4601 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  dividend        2    1[COMRAM] int 
  4604 ;;  divisor         2    3[COMRAM] int 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  quotient        2    7[COMRAM] int 
  4607 ;;  sign            1    6[COMRAM] unsigned char 
  4608 ;;  counter         1    5[COMRAM] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2    1[COMRAM] int 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4618 ;;      Params:         4       0       0       0
  4619 ;;      Locals:         4       0       0       0
  4620 ;;      Temps:          0       0       0       0
  4621 ;;      Totals:         8       0       0       0
  4622 ;;Total ram usage:        8 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_convertPanAngle
  4629 ;;		_convertTiltAngle
  4630 ;;		_getServoAngles
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text12
  4635   001C28                     __ptext12:
  4636                           	callstack 0
  4637   001C28                     ___awdiv:
  4638                           	callstack 27
  4639   001C28  6A07               	clrf	___awdiv@sign^0,c
  4640   001C2A  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  4641   001C2C  EF1C  F00E         	goto	u1760
  4642   001C30  EF1A  F00E         	goto	u1761
  4643   001C34                     u1761:
  4644   001C34  EF22  F00E         	goto	l1749
  4645   001C38                     u1760:
  4646   001C38  6C04               	negf	___awdiv@divisor^0,c
  4647   001C3A  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  4648   001C3C  B0D8               	btfsc	status,0,c
  4649   001C3E  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  4650   001C40  0E01               	movlw	1
  4651   001C42  6E07               	movwf	___awdiv@sign^0,c
  4652   001C44                     l1749:
  4653   001C44  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  4654   001C46  EF29  F00E         	goto	u1770
  4655   001C4A  EF27  F00E         	goto	u1771
  4656   001C4E                     u1771:
  4657   001C4E  EF2F  F00E         	goto	l1755
  4658   001C52                     u1770:
  4659   001C52  6C02               	negf	___awdiv@dividend^0,c
  4660   001C54  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  4661   001C56  B0D8               	btfsc	status,0,c
  4662   001C58  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  4663   001C5A  0E01               	movlw	1
  4664   001C5C  1A07               	xorwf	___awdiv@sign^0,f,c
  4665   001C5E                     l1755:
  4666   001C5E  0E00               	movlw	0
  4667   001C60  6E09               	movwf	(___awdiv@quotient+1)^0,c
  4668   001C62  0E00               	movlw	0
  4669   001C64  6E08               	movwf	___awdiv@quotient^0,c
  4670   001C66  5004               	movf	___awdiv@divisor^0,w,c
  4671   001C68  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  4672   001C6A  B4D8               	btfsc	status,2,c
  4673   001C6C  EF3A  F00E         	goto	u1781
  4674   001C70  EF3C  F00E         	goto	u1780
  4675   001C74                     u1781:
  4676   001C74  EF64  F00E         	goto	l1777
  4677   001C78                     u1780:
  4678   001C78  0E01               	movlw	1
  4679   001C7A  6E06               	movwf	___awdiv@counter^0,c
  4680   001C7C  EF44  F00E         	goto	l1763
  4681   001C80                     l1761:
  4682   001C80  90D8               	bcf	status,0,c
  4683   001C82  3604               	rlcf	___awdiv@divisor^0,f,c
  4684   001C84  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  4685   001C86  2A06               	incf	___awdiv@counter^0,f,c
  4686   001C88                     l1763:
  4687   001C88  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  4688   001C8A  EF49  F00E         	goto	u1791
  4689   001C8E  EF4B  F00E         	goto	u1790
  4690   001C92                     u1791:
  4691   001C92  EF40  F00E         	goto	l1761
  4692   001C96                     u1790:
  4693   001C96                     l1765:
  4694   001C96  90D8               	bcf	status,0,c
  4695   001C98  3608               	rlcf	___awdiv@quotient^0,f,c
  4696   001C9A  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  4697   001C9C  5004               	movf	___awdiv@divisor^0,w,c
  4698   001C9E  5C02               	subwf	___awdiv@dividend^0,w,c
  4699   001CA0  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4700   001CA2  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  4701   001CA4  A0D8               	btfss	status,0,c
  4702   001CA6  EF57  F00E         	goto	u1801
  4703   001CAA  EF59  F00E         	goto	u1800
  4704   001CAE                     u1801:
  4705   001CAE  EF5E  F00E         	goto	l1773
  4706   001CB2                     u1800:
  4707   001CB2  5004               	movf	___awdiv@divisor^0,w,c
  4708   001CB4  5E02               	subwf	___awdiv@dividend^0,f,c
  4709   001CB6  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4710   001CB8  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  4711   001CBA  8008               	bsf	___awdiv@quotient^0,0,c
  4712   001CBC                     l1773:
  4713   001CBC  90D8               	bcf	status,0,c
  4714   001CBE  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  4715   001CC0  3204               	rrcf	___awdiv@divisor^0,f,c
  4716   001CC2  2E06               	decfsz	___awdiv@counter^0,f,c
  4717   001CC4  EF4B  F00E         	goto	l1765
  4718   001CC8                     l1777:
  4719   001CC8  5007               	movf	___awdiv@sign^0,w,c
  4720   001CCA  B4D8               	btfsc	status,2,c
  4721   001CCC  EF6A  F00E         	goto	u1811
  4722   001CD0  EF6C  F00E         	goto	u1810
  4723   001CD4                     u1811:
  4724   001CD4  EF70  F00E         	goto	l1781
  4725   001CD8                     u1810:
  4726   001CD8  6C08               	negf	___awdiv@quotient^0,c
  4727   001CDA  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  4728   001CDC  B0D8               	btfsc	status,0,c
  4729   001CDE  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  4730   001CE0                     l1781:
  4731   001CE0  C008  F002         	movff	___awdiv@quotient,?___awdiv
  4732   001CE4  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  4733   001CE8  0012               	return		;funcret
  4734   001CEA                     __end_of___awdiv:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _UART_Transmit *****************
  4738 ;; Defined at:
  4739 ;;		line 32 in file "./Init.h"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  data            1    wreg     unsigned char 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  data            1    1[COMRAM] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4753 ;;      Params:         0       0       0       0
  4754 ;;      Locals:         1       0       0       0
  4755 ;;      Temps:          0       0       0       0
  4756 ;;      Totals:         1       0       0       0
  4757 ;;Total ram usage:        1 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_displayOLED
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text13
  4768   001FB2                     __ptext13:
  4769                           	callstack 0
  4770   001FB2                     _UART_Transmit:
  4771                           	callstack 28
  4772                           
  4773                           ;incstack = 0
  4774                           ;UART_Transmit@data stored from wreg
  4775   001FB2  6E02               	movwf	UART_Transmit@data^0,c
  4776   001FB4                     l55:
  4777   001FB4  A2AC               	btfss	172,1,c	;volatile
  4778   001FB6  EFDF  F00F         	goto	u1821
  4779   001FBA  EFE1  F00F         	goto	u1820
  4780   001FBE                     u1821:
  4781   001FBE  EFDA  F00F         	goto	l55
  4782   001FC2                     u1820:
  4783   001FC2                     
  4784                           ;./Init.h: 34:     TXREG = data;
  4785   001FC2  C002  FFAD         	movff	UART_Transmit@data,4013	;volatile
  4786   001FC6  0012               	return		;funcret
  4787   001FC8                     __end_of_UART_Transmit:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function ___awmod *****************
  4791 ;; Defined at:
  4792 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  dividend        2    1[COMRAM] int 
  4795 ;;  divisor         2    3[COMRAM] int 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  sign            1    6[COMRAM] unsigned char 
  4798 ;;  counter         1    5[COMRAM] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  2    1[COMRAM] int 
  4801 ;; Registers used:
  4802 ;;		wreg, status,2, status,0
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4808 ;;      Params:         4       0       0       0
  4809 ;;      Locals:         2       0       0       0
  4810 ;;      Temps:          0       0       0       0
  4811 ;;      Totals:         6       0       0       0
  4812 ;;Total ram usage:        6 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 1
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_main
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text14
  4823   001E68                     __ptext14:
  4824                           	callstack 0
  4825   001E68                     ___awmod:
  4826                           	callstack 29
  4827   001E68  6A07               	clrf	___awmod@sign^0,c
  4828   001E6A  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  4829   001E6C  EF3C  F00F         	goto	u3000
  4830   001E70  EF3A  F00F         	goto	u3001
  4831   001E74                     u3001:
  4832   001E74  EF42  F00F         	goto	l2477
  4833   001E78                     u3000:
  4834   001E78  6C02               	negf	___awmod@dividend^0,c
  4835   001E7A  1E03               	comf	(___awmod@dividend+1)^0,f,c
  4836   001E7C  B0D8               	btfsc	status,0,c
  4837   001E7E  2A03               	incf	(___awmod@dividend+1)^0,f,c
  4838   001E80  0E01               	movlw	1
  4839   001E82  6E07               	movwf	___awmod@sign^0,c
  4840   001E84                     l2477:
  4841   001E84  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  4842   001E86  EF49  F00F         	goto	u3010
  4843   001E8A  EF47  F00F         	goto	u3011
  4844   001E8E                     u3011:
  4845   001E8E  EF4D  F00F         	goto	l2481
  4846   001E92                     u3010:
  4847   001E92  6C04               	negf	___awmod@divisor^0,c
  4848   001E94  1E05               	comf	(___awmod@divisor+1)^0,f,c
  4849   001E96  B0D8               	btfsc	status,0,c
  4850   001E98  2A05               	incf	(___awmod@divisor+1)^0,f,c
  4851   001E9A                     l2481:
  4852   001E9A  5004               	movf	___awmod@divisor^0,w,c
  4853   001E9C  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  4854   001E9E  B4D8               	btfsc	status,2,c
  4855   001EA0  EF54  F00F         	goto	u3021
  4856   001EA4  EF56  F00F         	goto	u3020
  4857   001EA8                     u3021:
  4858   001EA8  EF7A  F00F         	goto	l2497
  4859   001EAC                     u3020:
  4860   001EAC  0E01               	movlw	1
  4861   001EAE  6E06               	movwf	___awmod@counter^0,c
  4862   001EB0  EF5E  F00F         	goto	l2487
  4863   001EB4                     l2485:
  4864   001EB4  90D8               	bcf	status,0,c
  4865   001EB6  3604               	rlcf	___awmod@divisor^0,f,c
  4866   001EB8  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  4867   001EBA  2A06               	incf	___awmod@counter^0,f,c
  4868   001EBC                     l2487:
  4869   001EBC  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  4870   001EBE  EF63  F00F         	goto	u3031
  4871   001EC2  EF65  F00F         	goto	u3030
  4872   001EC6                     u3031:
  4873   001EC6  EF5A  F00F         	goto	l2485
  4874   001ECA                     u3030:
  4875   001ECA                     l2489:
  4876   001ECA  5004               	movf	___awmod@divisor^0,w,c
  4877   001ECC  5C02               	subwf	___awmod@dividend^0,w,c
  4878   001ECE  5005               	movf	(___awmod@divisor+1)^0,w,c
  4879   001ED0  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  4880   001ED2  A0D8               	btfss	status,0,c
  4881   001ED4  EF6E  F00F         	goto	u3041
  4882   001ED8  EF70  F00F         	goto	u3040
  4883   001EDC                     u3041:
  4884   001EDC  EF74  F00F         	goto	l2493
  4885   001EE0                     u3040:
  4886   001EE0  5004               	movf	___awmod@divisor^0,w,c
  4887   001EE2  5E02               	subwf	___awmod@dividend^0,f,c
  4888   001EE4  5005               	movf	(___awmod@divisor+1)^0,w,c
  4889   001EE6  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  4890   001EE8                     l2493:
  4891   001EE8  90D8               	bcf	status,0,c
  4892   001EEA  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  4893   001EEC  3204               	rrcf	___awmod@divisor^0,f,c
  4894   001EEE  2E06               	decfsz	___awmod@counter^0,f,c
  4895   001EF0  EF65  F00F         	goto	l2489
  4896   001EF4                     l2497:
  4897   001EF4  5007               	movf	___awmod@sign^0,w,c
  4898   001EF6  B4D8               	btfsc	status,2,c
  4899   001EF8  EF80  F00F         	goto	u3051
  4900   001EFC  EF82  F00F         	goto	u3050
  4901   001F00                     u3051:
  4902   001F00  EF86  F00F         	goto	l2501
  4903   001F04                     u3050:
  4904   001F04  6C02               	negf	___awmod@dividend^0,c
  4905   001F06  1E03               	comf	(___awmod@dividend+1)^0,f,c
  4906   001F08  B0D8               	btfsc	status,0,c
  4907   001F0A  2A03               	incf	(___awmod@dividend+1)^0,f,c
  4908   001F0C                     l2501:
  4909   001F0C  C002  F002         	movff	___awmod@dividend,?___awmod
  4910   001F10  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  4911   001F14  0012               	return		;funcret
  4912   001F16                     __end_of___awmod:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _UART_Init *****************
  4916 ;; Defined at:
  4917 ;;		line 9 in file "./Init.h"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4931 ;;      Params:         0       0       0       0
  4932 ;;      Locals:         0       0       0       0
  4933 ;;      Temps:          0       0       0       0
  4934 ;;      Totals:         0       0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 1
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text15
  4946   001FC8                     __ptext15:
  4947                           	callstack 0
  4948   001FC8                     _UART_Init:
  4949                           	callstack 29
  4950   001FC8                     
  4951                           ;./Init.h: 10:     TRISC6 = 0;
  4952   001FC8  9C94               	bcf	3988,6,c	;volatile
  4953                           
  4954                           ;./Init.h: 11:     TRISC7 = 1;
  4955   001FCA  8E94               	bsf	3988,7,c	;volatile
  4956                           
  4957                           ;./Init.h: 12:     TXSTAbits.BRGH = 1;
  4958   001FCC  84AC               	bsf	172,2,c	;volatile
  4959                           
  4960                           ;./Init.h: 13:     BAUDCTLbits.BRG16 = 0;
  4961   001FCE  96AA               	bcf	170,3,c	;volatile
  4962   001FD0                     
  4963                           ;./Init.h: 14:     SPBRG = 12;
  4964   001FD0  0E0C               	movlw	12
  4965   001FD2  6EAF               	movwf	175,c	;volatile
  4966   001FD4                     
  4967                           ;./Init.h: 15:     TXSTAbits.SYNC = 0;
  4968   001FD4  98AC               	bcf	172,4,c	;volatile
  4969   001FD6                     
  4970                           ;./Init.h: 16:     RCSTAbits.SPEN = 1;
  4971   001FD6  8EAB               	bsf	171,7,c	;volatile
  4972   001FD8                     
  4973                           ;./Init.h: 17:     TXSTAbits.TXEN = 1;
  4974   001FD8  8AAC               	bsf	172,5,c	;volatile
  4975   001FDA  0012               	return		;funcret
  4976   001FDC                     __end_of_UART_Init:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function _TMR2_ISR *****************
  4980 ;; Defined at:
  4981 ;;		line 23 in file "main.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4995 ;;      Params:         0       0       0       0
  4996 ;;      Locals:         0       0       0       0
  4997 ;;      Temps:          1       0       0       0
  4998 ;;      Totals:         1       0       0       0
  4999 ;;Total ram usage:        1 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		Interrupt level 2
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	intcode
  5009   000008                     __pintcode:
  5010                           	callstack 0
  5011   000008                     _TMR2_ISR:
  5012                           	callstack 27
  5013                           
  5014                           ;incstack = 0
  5015   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5016   00000A                     
  5017                           ;main.c: 25:     if(PIR1bits.TMR2IF){
  5018   00000A  A29E               	btfss	158,1,c	;volatile
  5019   00000C  EF0A  F000         	goto	i2u306_41
  5020   000010  EF0C  F000         	goto	i2u306_40
  5021   000014                     i2u306_41:
  5022   000014  EF48  F000         	goto	i2l118
  5023   000018                     i2u306_40:
  5024   000018                     
  5025                           ;main.c: 26:         pwm_count++;
  5026   000018  0100               	movlb	0	; () banked
  5027   00001A  4B80               	infsnz	_pwm_count& (0+255),f,b
  5028   00001C  2B81               	incf	(_pwm_count+1)& (0+255),f,b
  5029   00001E                     
  5030                           ; BSR set to: 0
  5031                           ;main.c: 27:         if(pwm_count < highTimeThetaMicro) LATCbits.LATC2 = 1; else LATCbit
      +                          s.LATC2 = 0;
  5032   00001E  5186               	movf	_highTimeThetaMicro& (0+255),w,b
  5033   000020  5D80               	subwf	_pwm_count& (0+255),w,b
  5034   000022  5181               	movf	(_pwm_count+1)& (0+255),w,b
  5035   000024  0A80               	xorlw	128
  5036   000026  6E01               	movwf	??_TMR2_ISR^0,c
  5037   000028  5187               	movf	(_highTimeThetaMicro+1)& (0+255),w,b
  5038   00002A  0A80               	xorlw	128
  5039   00002C  5801               	subwfb	??_TMR2_ISR^0,w,c
  5040   00002E  B0D8               	btfsc	status,0,c
  5041   000030  EF1C  F000         	goto	i2u307_41
  5042   000034  EF1E  F000         	goto	i2u307_40
  5043   000038                     i2u307_41:
  5044   000038  EF21  F000         	goto	i2l113
  5045   00003C                     i2u307_40:
  5046   00003C                     
  5047                           ; BSR set to: 0
  5048   00003C  848B               	bsf	139,2,c	;volatile
  5049   00003E  EF22  F000         	goto	i2l2513
  5050   000042                     i2l113:
  5051                           
  5052                           ; BSR set to: 0
  5053   000042  948B               	bcf	139,2,c	;volatile
  5054   000044                     i2l2513:
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;main.c: 28:         if(pwm_count < highTimePhiMicro) LATCbits.LATC1 = 1; else LATCbits.
      +                          LATC1 = 0;
  5058   000044  5184               	movf	_highTimePhiMicro& (0+255),w,b
  5059   000046  5D80               	subwf	_pwm_count& (0+255),w,b
  5060   000048  5181               	movf	(_pwm_count+1)& (0+255),w,b
  5061   00004A  0A80               	xorlw	128
  5062   00004C  6E01               	movwf	??_TMR2_ISR^0,c
  5063   00004E  5185               	movf	(_highTimePhiMicro+1)& (0+255),w,b
  5064   000050  0A80               	xorlw	128
  5065   000052  5801               	subwfb	??_TMR2_ISR^0,w,c
  5066   000054  B0D8               	btfsc	status,0,c
  5067   000056  EF2F  F000         	goto	i2u308_41
  5068   00005A  EF31  F000         	goto	i2u308_40
  5069   00005E                     i2u308_41:
  5070   00005E  EF34  F000         	goto	i2l115
  5071   000062                     i2u308_40:
  5072   000062                     
  5073                           ; BSR set to: 0
  5074   000062  828B               	bsf	139,1,c	;volatile
  5075   000064  EF35  F000         	goto	i2l2517
  5076   000068                     i2l115:
  5077                           
  5078                           ; BSR set to: 0
  5079   000068  928B               	bcf	139,1,c	;volatile
  5080   00006A                     i2l2517:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;main.c: 30:         if(pwm_count >= 670) {
  5084   00006A  BF81               	btfsc	(_pwm_count+1)& (0+255),7,b
  5085   00006C  EF41  F000         	goto	i2u309_41
  5086   000070  0E9E               	movlw	158
  5087   000072  5D80               	subwf	_pwm_count& (0+255),w,b
  5088   000074  0E02               	movlw	2
  5089   000076  5981               	subwfb	(_pwm_count+1)& (0+255),w,b
  5090   000078  A0D8               	btfss	status,0,c
  5091   00007A  EF41  F000         	goto	i2u309_41
  5092   00007E  EF43  F000         	goto	i2u309_40
  5093   000082                     i2u309_41:
  5094   000082  EF47  F000         	goto	i2l2521
  5095   000086                     i2u309_40:
  5096   000086                     
  5097                           ; BSR set to: 0
  5098                           ;main.c: 31:             pwm_count = 0;
  5099   000086  0E00               	movlw	0
  5100   000088  6F81               	movwf	(_pwm_count+1)& (0+255),b
  5101   00008A  0E00               	movlw	0
  5102   00008C  6F80               	movwf	_pwm_count& (0+255),b
  5103   00008E                     i2l2521:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;main.c: 33:         PIR1bits.TMR2IF = 0;
  5107   00008E  929E               	bcf	158,1,c	;volatile
  5108   000090                     i2l118:
  5109   000090  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5110   000092  0011               	retfie		f
  5111   000094                     __end_of_TMR2_ISR:
  5112                           	callstack 0
  5113                           
  5114                           	psect	smallconst
  5115   000300                     __psmallconst:
  5116                           	callstack 0
  5117   000300  00                 	db	0
  5118   000301  00                 	db	0	; dummy byte at the end
  5119   000300                     __smallconst    set	__psmallconst
  5120   000300                     __mediumconst   set	__psmallconst
  5121   000000                     __activetblptr  equ	0
  5122                           
  5123                           	psect	rparam
  5124   000001                     ___rparam_used  equ	1
  5125   000000                     ___param_bank   equ	0
  5126   000000                     __Lparam        equ	__Lrparam
  5127   000000                     __Hparam        equ	__Hrparam
  5128                           
  5129                           	psect	temp
  5130   00005E                     btemp:
  5131                           	callstack 0
  5132   00005E                     	ds	1
  5133   00005E                     int$flags       set	btemp
  5134   00005F                     wtemp8          set	btemp+1
  5135   00005F                     ttemp5          set	btemp+1
  5136   000062                     ttemp6          set	btemp+4
  5137   000066                     ttemp7          set	btemp+8
  5138                           
  5139                           	psect	config
  5140                           
  5141                           ; Padding undefined space
  5142   300000                     	org	3145728
  5143   300000  FF                 	db	255
  5144                           
  5145                           ;Config register CONFIG1H @ 0x300001
  5146                           ;	Oscillator Selection bits
  5147                           ;	OSC = IRCIO, Internal oscillator block, port function on RA6 and port function on RA7
  5148                           ;	Fail-Safe Clock Monitor Enable bit
  5149                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5150                           ;	Internal External Oscillator Switchover bit
  5151                           ;	IESO = ON, Internal External Switchover mode enabled
  5152   300001                     	org	3145729
  5153   300001  C8                 	db	200
  5154                           
  5155                           ;Config register CONFIG2L @ 0x300002
  5156                           ;	Power-up Timer Enable bit
  5157                           ;	PWRTEN = ON, PWRT enabled
  5158                           ;	Brown-out Reset Enable bits
  5159                           ;	BOREN = ON, Brown-out Reset enabled
  5160                           ;	Brown Out Reset Voltage bits
  5161                           ;	BORV = 0x3, unprogrammed default
  5162   300002                     	org	3145730
  5163   300002  0E                 	db	14
  5164                           
  5165                           ;Config register CONFIG2H @ 0x300003
  5166                           ;	Watchdog Timer Enable bit
  5167                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5168                           ;	Watchdog Timer Postscale Select bits
  5169                           ;	WDPS = 32768, 1:32768
  5170                           ;	Watchdog Timer Window Enable bit
  5171                           ;	WINEN = OFF, WDT window disabled
  5172   300003                     	org	3145731
  5173   300003  3E                 	db	62
  5174                           
  5175                           ;Config register CONFIG3L @ 0x300004
  5176                           ;	PWM output pins Reset state control
  5177                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  5178                           ;	Low-Side Transistors Polarity
  5179                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  5180                           ;	High-Side Transistors Polarity
  5181                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  5182                           ;	Timer1 Oscillator MUX
  5183                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  5184   300004                     	org	3145732
  5185   300004  3C                 	db	60
  5186                           
  5187                           ;Config register CONFIG3H @ 0x300005
  5188                           ;	FLTA MUX bit
  5189                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  5190                           ;	SSP I/O MUX bit
  5191                           ;	SSPMX = RC7, SCK/SCL clocks and SDA/SDI data are multiplexed with RC5 and RC4, respect
      +                          ively. SDO output is multiplexed with RC7.
  5192                           ;	PWM4 MUX bit
  5193                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  5194                           ;	TMR0/T5CKI External clock MUX bit
  5195                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  5196                           ;	MCLR Pin Enable bit
  5197                           ;	MCLRE = ON, Enabled
  5198   300005                     	org	3145733
  5199   300005  9D                 	db	157
  5200                           
  5201                           ;Config register CONFIG4L @ 0x300006
  5202                           ;	Stack Full/Underflow Reset Enable bit
  5203                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5204                           ;	Low-Voltage ICSP Enable bit
  5205                           ;	LVP = OFF, Low-voltage ICSP disabled
  5206                           ;	Background Debugger Enable bit
  5207                           ;	DEBUG = 0x1, unprogrammed default
  5208   300006                     	org	3145734
  5209   300006  81                 	db	129
  5210                           
  5211                           ; Padding undefined space
  5212   300007                     	org	3145735
  5213   300007  FF                 	db	255
  5214                           
  5215                           ;Config register CONFIG5L @ 0x300008
  5216                           ;	Code Protection bit
  5217                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  5218                           ;	Code Protection bit
  5219                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  5220   300008                     	org	3145736
  5221   300008  0F                 	db	15
  5222                           
  5223                           ;Config register CONFIG5H @ 0x300009
  5224                           ;	Boot Block Code Protection bit
  5225                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  5226                           ;	Data EEPROM Code Protection bit
  5227                           ;	CPD = OFF, Data EEPROM not code-protected
  5228   300009                     	org	3145737
  5229   300009  C0                 	db	192
  5230                           
  5231                           ;Config register CONFIG6L @ 0x30000A
  5232                           ;	Write Protection bit
  5233                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  5234                           ;	Write Protection bit
  5235                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  5236   30000A                     	org	3145738
  5237   30000A  0F                 	db	15
  5238                           
  5239                           ;Config register CONFIG6H @ 0x30000B
  5240                           ;	Configuration Register Write Protection bit
  5241                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5242                           ;	Boot Block Write Protection bit
  5243                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  5244                           ;	Data EEPROM Write Protection bit
  5245                           ;	WRTD = OFF, Data EEPROM not write-protected
  5246   30000B                     	org	3145739
  5247   30000B  E0                 	db	224
  5248                           
  5249                           ;Config register CONFIG7L @ 0x30000C
  5250                           ;	Table Read Protection bit
  5251                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  5252                           ;	Table Read Protection bit
  5253                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  5254   30000C                     	org	3145740
  5255   30000C  0F                 	db	15
  5256                           
  5257                           ;Config register CONFIG7H @ 0x30000D
  5258                           ;	Boot Block Table Read Protection bit
  5259                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  5260   30000D                     	org	3145741
  5261   30000D  40                 	db	64
  5262                           tosu	equ	0xFFF
  5263                           tosh	equ	0xFFE
  5264                           tosl	equ	0xFFD
  5265                           stkptr	equ	0xFFC
  5266                           pclatu	equ	0xFFB
  5267                           pclath	equ	0xFFA
  5268                           pcl	equ	0xFF9
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           prodh	equ	0xFF4
  5274                           prodl	equ	0xFF3
  5275                           indf0	equ	0xFEF
  5276                           postinc0	equ	0xFEE
  5277                           postdec0	equ	0xFED
  5278                           preinc0	equ	0xFEC
  5279                           plusw0	equ	0xFEB
  5280                           fsr0h	equ	0xFEA
  5281                           fsr0l	equ	0xFE9
  5282                           wreg	equ	0xFE8
  5283                           indf1	equ	0xFE7
  5284                           postinc1	equ	0xFE6
  5285                           postdec1	equ	0xFE5
  5286                           preinc1	equ	0xFE4
  5287                           plusw1	equ	0xFE3
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           bsr	equ	0xFE0
  5291                           indf2	equ	0xFDF
  5292                           postinc2	equ	0xFDE
  5293                           postdec2	equ	0xFDD
  5294                           preinc2	equ	0xFDC
  5295                           plusw2	equ	0xFDB
  5296                           fsr2h	equ	0xFDA
  5297                           fsr2l	equ	0xFD9
  5298                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     32      40
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    getServoAngles@servoPhiPosition	PTR int  size(1) Largest target is 2
		 -> displayOLED@servoPhiPosition(COMRAM[2]), setServoHighTime@servoPhiPosition(BANK0[2]), 

    getServoAngles@servoThetaPosition	PTR int  size(1) Largest target is 2
		 -> displayOLED@servoThetaPosition(COMRAM[2]), setServoHighTime@servoThetaPosition(BANK0[2]), 

    setServoHighTime@highTimePhiMicro	PTR int  size(1) Largest target is 2
		 -> highTimePhiMicro(BANK0[2]), 

    setServoHighTime@highTimeThetaMicro	PTR int  size(1) Largest target is 2
		 -> highTimeThetaMicro(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_setServoHighTime
    _setServoHighTime->___fladd
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _displayOLED->_getServoAngles
    _getServoAngles->___awdiv
    _convertTiltAngle->___awdiv
    _convertPanAngle->___awdiv

Critical Paths under _TMR2_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_setServoHighTime

Critical Paths under _TMR2_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR2_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR2_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    9806
                                             91 COMRAM     2     2      0
                                             16 BANK0     16    16      0
                          _UART_Init
                            ___awmod
                        _displayOLED
                        _init_timer2
                   _setServoHighTime
 ---------------------------------------------------------------------------------
 (1) _setServoHighTime                                    26    18      8    6448
                                             81 COMRAM    10     2      8
                                              0 BANK0     16    16      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                     _getServoAngles
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     338
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     231
                                             65 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1478
                                             40 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1129
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    1988
                                             65 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayOLED                                         13     9      4    2155
                                             23 COMRAM    13     9      4
                      _UART_Transmit
                    _convertPanAngle
                   _convertTiltAngle
                     _getServoAngles
 ---------------------------------------------------------------------------------
 (2) _getServoAngles                                      14     6      8     961
                                              9 COMRAM    14     6      8
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _convertTiltAngle                                     6     4      2     472
                                              9 COMRAM     6     4      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _convertPanAngle                                      6     4      2     472
                                              9 COMRAM     6     4      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     312
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        1     1      0      29
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     298
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR2_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   ___awmod
   _displayOLED
     _UART_Transmit
     _convertPanAngle
       ___awdiv
     _convertTiltAngle
       ___awdiv
     _getServoAngles
       ___awdiv
   _init_timer2
   _setServoHighTime
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
     ___xxtofl
     _getServoAngles

 _TMR2_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             767      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     32      40     25.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     93      93     98.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     133      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 21 20:00:16 2025

             displayOLED@combinedValue 0020                           ?_displayOLED 0018  
                         ___fldiv@aexp 0028                           ___fldiv@bexp 0027  
                         ___fldiv@sign 0020                                     l52 1FB0  
                                   l55 1FB4                                     l80 1798  
                                   l49 1FDA                                     l58 1FC6  
                                   l67 1DA8                                     l76 1E66  
                                   l93 196C                                     l87 18BE  
                                   l96 171E                           ___awdiv@sign 0007  
                                  l107 1F84                                    l123 0342  
                                  l132 0514                                    l137 0650  
                                  l129 04E2                                    l146 07A0  
                                  l138 0652                                    l451 1C26  
                                  l385 1CE8                                    l715 0C6C  
                                  l708 0BC4                                    l812 1B20  
                                  l709 0BB2                                    l741 1286  
                                  l398 1F14                                    l750 136C  
                                  l823 1AB8                                    l736 145E  
                                  l816 1A5C                                    l809 19C4  
                                  l682 09DC                                    l738 12C2  
                                  l691 0CA8                                    l683 09CA  
                                  l747 1308                                    l684 0990  
                                  l748 1326                                    l772 10CE  
                                  l749 137E                                    l775 0F64  
                                  l696 0B84                                    l776 0F82  
                                  l768 0D6E                                    l785 1090  
                                  l777 0FDA                                    l778 0FC8  
                                  l699 0AF6                       ??_getServoAngles 0012  
                                  _PR2 0FCB                           ___awmod@sign 0007  
                                  wreg 0FE8                           ___flmul@aexp 003A  
                         ___flmul@bexp 003B                           ___flmul@sign 0035  
                         ___flmul@temp 0040                           ___flmul@prod 003C  
                     _highTimePhiMicro 0084                   convertPanAngle@angle 000A  
                         ___fltol@exp1 004B                                   l2001 0AE6  
                                 l2011 0B3A                                   l2003 0B0C  
                                 l2021 0B64                                   l2013 0B48  
                                 l2005 0B1C                                   l2101 1198  
                                 l2023 0B74                                   l2015 0B4A  
                                 l2103 11AE                                   l2033 0BD4  
                                 l2041 0C2A                                   l2017 0B58  
                                 l2009 0B30                                   l2025 0B76  
                                 l2121 1202                                   l2105 11BE  
                                 l2113 11DE                                   l2201 0CB6  
                                 l2051 0C80                                   l2043 0C3A  
                                 l2035 0BE0                                   l2027 0B94  
                                 l2019 0B60                                   l2131 1252  
                                 l2123 121C                                   l2115 11EE  
                                 l2107 11C6                                   l2211 0CF6  
                                 l2203 0CC4                                   l2053 0C82  
                                 l2045 0C4A                                   l2037 0BEE  
                                 l2029 0BAA                                   l2141 12AE  
                                 l2133 1262                                   l2125 122C  
                                 l2117 11EE                                   l2109 11CA  
                                 l2301 102E                                   l2221 0D26  
                                 l2213 0CFC                                   l2205 0CC6  
                                 l2055 0C88                                   l2047 0C6A  
                                 l2039 0C28                                   l2151 12EE  
                                 l2143 12B0                                   l2135 1276  
                                 l2127 123C                                   l2071 10FC  
                                 l2063 10D0                                   l2311 108A  
                                 l2303 1032                                   l2231 0D5E  
                                 l2223 0D28                                   l2215 0D0C  
                                 l2207 0CD6                                   l2057 0C96  
                                 l2049 0C7A                                   l2161 1364  
                                 l2153 12F8                                   l2145 12C0  
                                 l2137 1284                                   l2129 124C  
                                 l2081 1134                                   l2073 110C  
                                 l2065 10DC                                   l2313 1094  
                                 l2321 10BA                                   l2305 104C  
                                 l2241 0DAE                                   l2233 0D7E  
                                 l2225 0D38                                   l2217 0D12  
                                 l2209 0CE6                                   l2401 1AC6  
                                 l2059 0C98                                   l2171 13D2  
                                 l2155 1306                                   l2147 12D2  
                                 l2139 1290                                   l2091 1160  
                                 l2083 113A                                   l2075 111C  
                                 l2067 10EA                                   l2323 10BE  
                                 l2315 10A4                                   l2307 1060  
                                 l2251 0DFE                                   l2243 0DB8  
                                 l2235 0D8E                                   l2227 0D48  
                                 l2219 0D18                                   l2411 1B0E  
                                 l2403 1AC8                                   l2421 1FD4  
                                 l2501 1F0C                                   l2181 1438  
                                 l2165 138E                                   l2173 13D6  
                                 l2149 12E8                                   l2157 1318  
                                 l2093 1170                                   l2085 1140  
                                 l2077 111E                                   l2069 10EC  
                                 l2317 10B2                                   l2309 107A  
                                 l2261 0E40                                   l2253 0E0A  
                                 l2245 0DCE                                   l2229 0D58  
                                 l2341 1B8C                                   l2333 1B4C  
                                 l2413 1B10                                   l2405 1ACC  
                                 l2423 1FD6                                   l2431 1FA6  
                                 l2191 1454                                   l2183 143A  
                                 l2175 13F0                                   l2167 139A  
                                 l2159 1336                                   l2095 1180  
                                 l2087 114E                                   l2079 1124  
                                 l2319 10B4                                   l2271 0EA2  
                                 l2263 0E50                                   l2255 0E18  
                                 l2247 0DDA                                   l2239 0DA2  
                                 l2351 1BBC                                   l2343 1B9A  
                                 l2335 1B76                                   l2327 1B22  
                                 l2407 1AF0                                   l2425 1FD8  
                                 l2417 1FC8                                   l1801 1D4E  
                                 l2433 1FA8                                   l2185 143E  
                                 l2177 1406                                   l2169 13A8  
                                 l2097 1182                                   l2089 1150  
                                 l2281 0F4A                                   l2273 0EBE  
                                 l2265 0E6A                                   l2257 0E24  
                                 l2249 0DF2                                   l2361 1BE6  
                                 l2353 1BC6                                   l2337 1B78  
                                 l2329 1B38                                   l2409 1B00  
                                 l2441 1460                                   l2601 0614  
                                 l2419 1FD0                                   l1803 1D6C  
                                 l1811 1DB8                                   l2435 1FAA  
                                 l2427 1F9C                                   l2187 144C  
                                 l2179 1420                                   l2099 1188  
                                 l2291 0FC0                                   l2283 0F54  
                                 l2275 0EE8                                   l2267 0E7A  
                                 l2259 0E34                                   l2363 1BF6  
                                 l2339 1B88                                   l2371 1970  
                                 l2451 15DA                                   l2443 1472  
                                 l2611 0668                                   l2603 0626  
                                 l2531 0314                                   l2523 0302  
                                 l1741 1C28                                   l1805 1D92  
                                 l1821 1E0E                                   l1813 1DC0  
                                 l2461 1F4A                                   l2437 1FAC  
                                 l2429 1FA4                                   l1901 0898  
                                 l2189 1452                                   l2285 0F62  
                                 l2277 0F1E                                   l2269 0E96  
                                 l2365 1C06                                   l2349 1BB2  
                                 l2373 1980                                   l2453 1680  
                                 l2445 1496                                   l2621 06DA  
                                 l2605 0638                                   l2613 0684  
                                 l2541 03E8                                   l2533 0316  
                                 l2525 030A                                   l2471 1E6A  
                                 l1751 1C52                                   l1743 1C2A  
                                 l1823 1E2C                                   l1815 1DDC  
                                 l1831 173C                                   l2463 1F58  
                                 l2439 1FAE                                   l1911 08D0  
                                 l1903 08A8                                   l2295 0FEA  
                                 l2287 0F74                                   l2279 0F2C  
                                 l2199 0CAA                                   l2367 1C16  
                                 l2359 1BDA                                   l2391 1A46  
                                 l2383 19FE                                   l2375 198E  
                                 l2455 16B4                                   l2447 153C  
                                 l2631 071A                                   l2623 06DE  
                                 l2615 06A0                                   l2607 064A  
                                 l2551 043A                                   l2543 03FA  
                                 l2535 03B2                                   l2527 030E  
                                 l2481 1E9A                                   l2473 1E78  
                                 l1761 1C80                                   l1753 1C5A  
                                 l1745 1C38                                   l1825 1E52  
                                 l1817 1DE4                                   l1809 1DAA  
                                 l1841 17DC                                   l1833 174A  
                                 l2465 1F66                                   l2457 1F16  
                                 l1921 08FC                                   l1913 08E2  
                                 l1905 08B8                                   l2297 0FF6  
                                 l2289 0F92                                   l2393 1A52  
                                 l2385 1A06                                   l2377 19D4  
                                 l2449 1570                                   l2641 0768  
                                 l2633 0734                                   l2625 06EC  
                                 l2617 06B0                                   l2609 0660  
                                 l2561 0492                                   l2553 0442  
                                 l2537 03C4                                   l2545 03FE  
                                 l2529 0312                                   l2491 1EE0  
                                 l2483 1EAC                                   l2475 1E80  
                                 l1771 1CBA                                   l1763 1C88  
                                 l1755 1C5E                                   l1747 1C40  
                                 l1819 1E00                                   l1851 1862  
                                 l1835 175C                                   l2467 1F7E  
                                 l2459 1F26                                   l1931 0910  
                                 l1923 0900                                   l1915 08F0  
                                 l1907 08BA                                   l2299 1004  
                                 l2395 1A8E                                   l2387 1A12  
                                 l2379 19EA                                   l2651 07CE  
                                 l2643 078C                                   l2635 073A  
                                 l2627 0706                                   l2619 06BE  
                                 l2563 04A6                                   l2555 045E  
                                 l2571 04E8                                   l2547 040C  
                                 l2539 03D6                                   l2493 1EE8  
                                 l2485 1EB4                                   l2477 1E84  
                                 l2469 1E68                                   l1781 1CE0  
                                 l1773 1CBC                                   l1765 1C96  
                                 l1757 1C66                                   l1749 1C44  
                                 l1861 1902                                   l1853 1870  
                                 l1837 17A6                                   l1845 17F2  
                                 l1829 1720                                   l1941 0924  
                                 l1933 0914                                   l1925 0904  
                                 l1917 08F4                                   l1909 08C0  
                                 l2397 1A9A                                   l2389 1A44  
                                 l2653 07E2                                   l2645 079A  
                                 l2637 0748                                   l2629 070C  
                                 l2581 0558                                   l2573 0504  
                                 l2565 04B8                                   l2557 0466  
                                 l2549 041E                                   l2495 1EEE  
                                 l2487 1EBC                                   l2479 1E92  
                                 l1775 1CC2                                   l1767 1C9C  
                                 l1759 1C78                                   l1791 1CF8  
                                 l1855 1882                                   l1839 17B8  
                                 l1847 182A                                   l1951 0978  
                                 l1943 0928                                   l1935 0918  
                                 l1927 0908                                   l1919 08F8  
                                 l1871 0800                                   l2399 1AA8  
                                 l2639 0764                                   l2591 05AA  
                                 l2583 0572                                   l2575 0526  
                                 l2647 07A2                                   l2567 04CA  
                                 l2559 046A                                   l2489 1ECA  
                                 l2497 1EF4                                   l1785 1FB4  
                                 l1769 1CB2                                   l1777 1CC8  
                                 l1793 1D00                                   l1857 18CC  
                                 l1865 1918                                   l1849 1846  
                                 l1961 09BC                                   l1953 0988  
                                 l1945 092C                                   l1937 091C  
                                 l1929 090C                                   l1881 0840  
                                 l1873 080E                                   l2649 07A8  
                                 l2593 05BC                                   l2585 0578  
                                 l2577 0542                                   l2569 04DC  
                                 l2499 1F04                                   l1787 1FC2  
                                 l1779 1CD8                                   l1795 1D1C  
                                 l1859 18DE                                   l1867 196C  
                                 l1963 09BE                                   l1955 099E  
                                 l1939 0920                                   l1947 0930  
                                 l1891 0870                                   l1883 0842  
                                 l1875 0810                                   l2595 05D8  
                                 l2587 058A                                   l2579 0546  
                                 l1797 1D24                                   l1789 1CEA  
                                 l1981 0A46                                   l1973 0A0E  
                                 l1965 09C8                                   l1957 09AA  
                                 l1949 095C                                   l1893 0872  
                                 l1877 0820                                   l1885 0848  
                                 l1869 07F4                                   l2597 05DC  
                                 l2589 05A4                                   l1799 1D40  
                                 l1983 0A4A                                   l1975 0A1E  
                                 l1967 09EA                                   l1991 0A6A  
                                 l1959 09AE                                   l1895 0878  
                                 l1887 0858                                   l1879 0830  
                                 l2599 0600                                   l1993 0A90  
                                 l1985 0A58                                   l1977 0A2C  
                                 l1969 09FA                                   l1897 0886  
                                 l1889 085E                                   l1995 0AC4  
                                 l1987 0A5A                                   l1979 0A3A  
                                 l1899 0888                                   l1997 0AC6  
                                 l1989 0A64                                   l1999 0AD6  
                                 u2000 18DE                                   u2001 18DA  
                                 u2010 1914                                   u2011 1910  
                                 u2100 08F0                                   u2020 080E  
                    ??_convertPanAngle 000C                                   u2101 08EC  
                                 u2021 080A                                   u2110 095C  
                                 u2030 0820                                   u2111 0958  
                                 u2031 081C                                   u3000 1E78  
                                 u2200 0A3A                                   u2120 0974  
                                 u2040 0830                                   u3001 1E74  
                                 u2201 0A36                                   u2121 096E  
                                 u2041 082C                                   u3010 1E92  
                                 u2210 0A58                                   u2130 0976  
                                 u2050 0870                                   u3011 1E8E  
                                 u2211 0A54                                   u2051 086C  
                                 u3020 1EAC                                   u2300 0B94  
                                 u2220 0A90                                   u2140 099E  
                                 u2060 0886                                   u3100 0354  
                                 u3021 1EA8                                   u2301 0B90  
                                 u2221 0A8C                                   u2141 099A  
                                 u2061 0882                                   u3101 034C  
                                 u3030 1ECA                                   u2310 0BAA  
                                 u2230 0AD6                                   u2150 09BC  
                                 u2070 0898                                   u3110 0370  
                                 u3031 1EC6                                   u2311 0BA6  
                                 u2231 0AD2                                   u2151 09B8  
                                 u2071 0894                                   u3111 0368  
                                 u3040 1EE0                                   u2400 0C96  
                                 u2320 0BC0                                   u2240 0B0C  
                                 u2160 09DC                                   u2080 08A8  
                                 u3200 043A                                   u3120 038C  
                                 u3041 1EDC                                   u2401 0C92  
                                 u2321 0BBC                                   u2241 0B08  
                                 u2161 09D8                                   u2081 08A4  
                                 u3201 0436                                   u3121 0384  
                                 u3050 1F04                                   u2330 0BD4  
                                 u2250 0B1C                                   u2170 09EA  
                                 u2090 08E2                                   u2410 10EA  
                                 u3210 045E                                   u3130 03A8  
                                 u3051 1F00                                   u2331 0BD0  
                                 u2251 0B18                                   u2171 09E6  
                                 u2091 08DE                                   u2411 10E6  
                                 u3211 045A                                   u3131 03A0  
                                 u2340 0BEE                                   u2260 0B48  
                                 u2180 09FA                                   u2500 1284  
                                 u2420 10FC                                   u3300 0572  
                                 u3220 04A6                                   u3140 03C4  
                                 u3108 0356                                   u2341 0BEA  
                                 u2261 0B44                                   u2181 09F6  
                                 u2501 1280                                   u2421 10F8  
                                 u3301 056E                                   u3221 04A2  
                                 u3141 03C0                                   u2350 0C28  
                                 u2270 0B58                                   u2190 0A2C  
                                 u2510 12AE                                   u2430 110C  
                                 u3310 058A                                   u3230 04B8  
                                 u3150 03D6                                   u3118 0372  
                                 u2351 0C24                                   u2271 0B54  
                                 u2191 0A28                                   u2511 12AA  
                                 u2431 1108                                   u3311 0586  
                                 u3231 04B4                                   u3151 03D2  
                                 u1800 1CB2                                   u2360 0C3A  
                                 u2280 0B74                                   u2600 13A8  
                                 u2520 12D2                                   u2440 114E  
                                 u3400 06A0                                   u3320 05A4  
                                 u3240 04CA                                   u3160 03E8  
                                 u3128 038E                                   u1801 1CAE  
                                 u2361 0C36                                   u2281 0B70  
                                 u2601 13A4                                   u2521 12CE  
                                 u2441 114A                                   u3401 069C  
                                 u3321 05A0                                   u3241 04C6  
                                 u3161 03E4                                   u1810 1CD8  
                                 u2370 0C4A                                   u2290 0B84  
                                 u2610 13F0                                   u2530 12E8  
                                 u2450 1160                                   u3410 06BE  
                                 u3330 05BC                                   u3250 04DC  
                                 u3170 03FA                                   u3138 03AA  
                                 u1811 1CD4                                   u2371 0C46  
                                 u2291 0B80                                   u2611 13EC  
                                 u2531 12E4                                   u2451 115C  
                                 u3411 06BA                                   u3331 05B8  
                                 u3251 04D8                                   u3171 03F6  
                                 u1820 1FC2                                   u1900 174A  
                                 u2380 0C6A                                   u2620 1420  
                                 u2540 1306                                   u2460 1170  
                                 u2700 0D7E                                   u3500 07CE  
                                 u3420 06DA                                   u3340 05D8  
                                 u3260 0504                                   u3180 040C  
                                 u1821 1FBE                                   u1901 1746  
                                 u2381 0C66                                   u2621 141C  
                                 u2541 1302                                   u2461 116C  
                                 u2701 0D7A                                   u3501 07CA  
                                 u3421 06D6                                   u3341 05D4  
                                 u3261 0500                                   u3181 0408  
                                 u1830 1CF8                                   u1910 175C  
                                 u2390 0C7A                                   u2630 144C  
                                 u2550 1326                                   u2470 11AE  
                                 u2710 0D8E                                   u3430 06EC  
                                 u3350 0614                                   u3270 0526  
                                 u3190 041E                                   u1831 1CF4  
                                 u1911 1758                                   u2391 0C76  
                                 u2631 1448                                   u2551 1322  
                                 u2471 11AA                                   u2711 0D8A  
                                 u3431 06E8                                   u3351 0610  
                                 u3271 0522                                   u3191 041A  
                                 u1760 1C38                                   u1840 1D1C  
                                 u1920 17A6                                   u2560 1336  
                                 u2480 11EE                                   u2800 104C  
                                 u2720 0F08                                   u2640 0CC4  
                                 u3440 0706                                   u3360 0626  
                                 u3280 0542                                   u1761 1C34  
                                 u1841 1D18                                   u1921 17A2  
                                 u2561 1332                                   u2481 11EA  
                                 u2801 1048                                   u2641 0CC0  
                                 u3441 0702                                   u3361 0622  
                                 u3281 053E                                   u1770 1C52  
                                 u1850 1D4E                                   u1930 17B8  
                                 u2570 1364                                   u2490 1262  
                                 u2810 107A                                   u2730 0F62  
                                 u2650 0CD6                                   u3450 071A  
                                 u3370 0638                                   u3290 0558  
                                 u1771 1C4E                                   u1851 1D4A  
                                 u1931 17B4                                   u2571 1360  
                                 u2491 125E                                   u2811 1076  
                                 u2731 0F5E                                   u2651 0CD2  
                                 u3451 0716                                   u3371 0634  
                                 u3291 0554                                   u1780 1C78  
                                 u1860 1DB8                                   u1940 17EE  
                                 u2580 137A                                   u2820 10B2  
                                 u2740 0F82                                   u2660 0CE6  
                                 u2900 1980                                   u3460 0734  
                                 u3380 064A                                   u1781 1C74  
                                 u1861 1DB4                                   u1941 17EA  
                                 u2581 1376                                   u2821 10AE  
                                 u2741 0F7E                                   u2725 0EFE  
                                 u2661 0CE2                                   u2901 197C  
                                 u3461 0730                                   u3517 0672  
                                 u3381 0646                                   u1790 1C96  
                                 u1870 1DDC                                   u1950 1846  
                                 u2590 138E                                   u2750 0F92  
                                 u2670 0D26                                   u2830 1B38  
                                 u2910 198E                                   u3470 0748  
                                 u3390 0660                                   u1791 1C92  
                                 u1871 1DD8                                   u1951 1842  
                                 u2591 138A                                   u2751 0F8E  
                                 u2671 0D22                                   u2831 1B34  
                                 u2911 198A                                   u3471 0744  
                                 u3391 065C                                   u1880 1E0E  
                                 u1960 1862                                   u2760 0FC0  
                                 u2680 0D38                                   u2840 1B6C  
                                 u2920 19EA                                   u3480 0764  
                                 u1881 1E0A                                   u1961 185E  
                                 u2761 0FBC                                   u2681 0D34  
                                 u2921 19E6                                   u3481 0760  
                                 u1970 1870                                   u1890 173C  
                                 u2770 0FD6                                   u2690 0D48  
                                 u2850 1B9A                                   u2930 1A40  
                                 u3490 079A                                   u1971 186C  
                                 u1891 1738                                   u2771 0FD2  
                                 u2691 0D44                                   u2851 1B96  
                                 u2931 1A3C                                   u3491 0796  
                                 u1980 1882                                   u2780 0FEA  
                                 u2860 1BAE                                   u2940 1A8A  
                                 u1981 187E                                   u2781 0FE6  
                                 u2861 1BAA                                   u2845 1B62  
                                 u2941 1A86                                   u1990 18CC  
                                 u2790 1004                                   u2870 1BD6  
                                 u2950 1AA8                                   u1991 18C8  
                                 u2791 1000                                   u2871 1BD2  
                                 u2951 1AA4                                   u2880 1BF6  
                                 u2960 1AB8                                   u2881 1BF2  
                                 u2961 1AB4                                   u2890 1C06  
                                 u2970 1AC6                                   u2891 1C02  
                                 u2971 1AC2                                   u2980 1B00  
                                 u2981 1AFC                                   u2990 1B0E  
                                 u2991 1B0A                                   _TMR2 0FCC  
                                 _main 0302                                   fsr2h 0FDA  
                                 fsr2l 0FD9                                   btemp 005E  
                                 prodh 0FF4                                   prodl 0FF3  
                                 start 0094                        ___fldiv@new_exp 0021  
                         ___param_bank 0000                       _setServoHighTime 1460  
                        ___fltol@sign1 004A                        __end_of___fladd 0CAA  
                                ?_main 0001                        __end_of___fldiv 1460  
                      __end_of___awdiv 1CEA                        __end_of___awmod 1F16  
                      __end_of___flmul 10D0                        __end_of___fltol 1C28  
                      ___awdiv@divisor 0004                                  i2l113 0042  
                                i2l115 0068                                  i2l118 0090  
                      ___awdiv@counter 0006                           displayOLED@i 0018  
                         displayOLED@j 001A                                  _SPBRG 0FAF  
setServoHighTime@dutyCyclePercentTheta 0060                                  _TRISB 0F93  
                                _TRISD 0F95                                  _TXREG 0FAD  
                         ?_init_timer2 0001                       __end_of_TMR2_ISR 0094  
                                main@i 007E                                  main@j 007C  
                         main@sensorUp 0074                                  ttemp5 005F  
                                ttemp6 0062                                  ttemp7 0066  
                                status 0FD8                                  wtemp8 005F  
                    ?_convertTiltAngle 000A                        __initialization 1F86  
                   ??_convertTiltAngle 000C                           __end_of_main 07F4  
                convertTiltAngle@angle 000A                                 ??_main 005C  
                        __activetblptr 0000                       ___awdiv@dividend 0002  
                               i2l2511 003C                                 i2l2521 008E  
                               i2l2513 0044                                 i2l2505 000A  
                               i2l2515 0062                                 i2l2507 0018  
                               i2l2517 006A                                 i2l2509 001E  
                               i2l2519 0086                                 _TRISC6 7CA6  
                               _TRISC7 7CA7         getServoAngles@servoPhiPosition 000F  
                     __end_of___xxtofl 1B22                      __end_of_UART_Init 1FDC  
                   _highTimeThetaMicro 0086                              ??___fladd 004A  
                            ??___fldiv 0018                              ??___awdiv 0006  
                            ??___awmod 0006                              ??___flmul 0031  
                            ??___fltol 0046                    main@sensorTriggered 0070  
                               clear_0 1F8C                       ___awdiv@quotient 0008  
                      ___awmod@divisor 0004                                 isa$std 0001  
                      ___awmod@counter 0006                           __mediumconst 0300  
               getServoAngles@scanMode 0010                           ___xxtofl@arg 000C  
                         ___xxtofl@exp 000B                           ___xxtofl@val 0002  
                           __accesstop 0060                __end_of__initialization 1F92  
                        ___rparam_used 0001                             ___fltol@f1 0042  
                __end_of_UART_Transmit 1FC8                         __pcstackCOMRAM 0001  
                            ?_TMR2_ISR 0001                        _convertPanAngle 1CEA  
          displayOLED@servoPhiPosition 0021                             __pbssBANK0 0080  
     getServoAngles@servoThetaPosition 000E               __end_of_setServoHighTime 1720  
                           ??_TMR2_ISR 0001                              ?___xxtofl 0002  
   setServoHighTime@highTimeThetaMicro 0058       setServoHighTime@servoPhiPosition 006C  
                              __Hparam 0000                                __Lparam 0000  
              __end_of_convertPanAngle 1DAA                                ___fladd 07F4  
                              ___fldiv 10D0                                ___awdiv 1C28  
                              ___awmod 1E68                                ___flmul 0CAA  
                              ___fltol 1B22                           __psmallconst 0300  
                           _modeButton 0082                                __pcinit 1F86  
                              __ramtop 0300                                __ptext0 0302  
                              __ptext1 1460                                __ptext2 196E  
                              __ptext3 1B22                                __ptext4 0CAA  
                              __ptext5 10D0                                __ptext6 07F4  
                              __ptext7 1F9C                                __ptext8 1F16  
                              __ptext9 1720                              _T2CONbits 0FCA  
                           ??___xxtofl 0006                       ___awmod@dividend 0002  
                       main@sensorLeft 0078                         main@sensorDown 0076  
                 end_of_initialization 1F92               setServoHighTime@scanMode 0056  
                            _RCSTAbits 0FAB                                postdec2 0FDD  
                              postinc0 0FEE                                postinc2 0FDE  
                            _UART_Init 1FC8                              _PORTBbits 0F81  
                            _PORTCbits 0F82                              _PORTDbits 0F83  
                          ___fladd@grs 0051                          ___xxtofl@sign 000A  
                            _TRISCbits 0F94                            ___fldiv@grs 0023  
                          ___fldiv@rem 001C                            ___flmul@grs 0036  
                            _TXSTAbits 0FAC    setServoHighTime@dutyCyclePercentPhi 0064  
                        ??_displayOLED 001C                       ?_convertPanAngle 000A  
                           ?_UART_Init 0001                            _BAUDCTLbits 0FAA  
                  start_initialization 1F86       setServoHighTime@highTimePhiMicro 0059  
                    ?_setServoHighTime 0052                     ??_setServoHighTime 005A  
                  __end_of_displayOLED 1F86                              ___fladd@a 0046  
                            ___fladd@b 0042                       _convertTiltAngle 1DAA  
                            ___fldiv@a 0014                              ___fldiv@b 0010  
                        ??_init_timer2 0002                              ___flmul@a 002D  
                            ___flmul@b 0029                          __pcstackBANK0 0060  
                       _getServoAngles 1720                        getServoAngles@i 000A  
                      getServoAngles@j 000C                      setServoHighTime@i 0052  
                    setServoHighTime@j 0054                              __pintcode 0008  
                             ?___fladd 0042                               ?___fldiv 0010  
                             ?___awdiv 0002                               ?___awmod 0002  
                             ?___flmul 0029                               ?___fltol 0042  
                    UART_Transmit@data 0002                            ??_UART_Init 0002  
                _setServoHighTime$1476 0068                            __smallconst 0300  
               __end_of_getServoAngles 196E                    __end_of_init_timer2 1FB2  
                             _LATCbits 0F8B                               _LATDbits 0F8C  
                             _PIE1bits 0F9D                          _UART_Transmit 1FB2  
                             i2u306_40 0018                               i2u306_41 0014  
                             i2u307_40 003C                               i2u307_41 0038  
                             i2u308_40 0062                               i2u308_41 005E  
                             i2u309_40 0086                               i2u309_41 0082  
                             _PIR1bits 0F9E          displayOLED@servoThetaPosition 0023  
                          _displayOLED 1F16                               _TMR2_ISR 0008  
                            _pwm_count 0080                        ?_getServoAngles 000A  
                       ?_UART_Transmit 0001                               __Hrparam 0000  
                             __Lrparam 0000                               ___xxtofl 196E  
                          _init_timer2 1F9C                               __ptext10 1DAA  
                             __ptext11 1CEA                               __ptext12 1C28  
                             __ptext13 1FB2                               __ptext14 1E68  
                             __ptext15 1FC8               __end_of_convertTiltAngle 1E68  
                             isa$xinst 0000                               int$flags 005E  
                      main@sensorRight 007A                     displayOLED@tiltHex 001F  
                           _INTCONbits 0FF2     setServoHighTime@servoThetaPosition 006E  
                             intlevel2 0000                        ??_UART_Transmit 0002  
                           _OSCCONbits 0FD3                      displayOLED@panHex 001E  
                        main@OLEDcount 0072                          ___fladd@signs 004E  
                         ___fladd@aexp 004F                           ___fladd@bexp 0050  
